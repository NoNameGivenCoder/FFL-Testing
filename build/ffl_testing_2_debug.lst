         w __cxa_pure_virtual
         w __gthr_impl_key_create
02000000 T __rpx_start
02000038 t init_wut
02000060 T __init
02000084 00000034 T __cxa_throw_bad_array_new_length
020000b8 00000034 W __gnu_cxx::__throw_concurrence_lock_error()
020000ec 00000034 W __gnu_cxx::__throw_concurrence_unlock_error()
02000120 00000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
02000154 00000034 T std::__throw_bad_alloc()
02000188 00000034 T std::__throw_bad_array_new_length()
020001bc 00000058 T std::__throw_logic_error(char const*)
02000214 00000058 T std::__throw_length_error(char const*)
0200026c 00000058 T std::__throw_out_of_range(char const*)
020002c4 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
020002d4 00000034 T abort
02000308 00000048 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
02000350 0000005c t _GLOBAL__sub_D__ZN9__gnu_cxx9__freeresEv
020003ac 0000003c T exit
020003e8 00000050 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
02000438 0000021c t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
02000654 0000000c t register_fini
02000660 t __do_global_dtors_aux
0200072c t frame_dummy
02000750 00000004 T FFLiBugEndianSwap(void*, unsigned int)
02000754 0000000c T FFLiBugCanSwapSize(unsigned int)
02000760 00000008 T FFLiBugVgtFixedIndexPtr(void*)
02000768 00000008 T FFLiBugVgtFixedIndexOriginalPtr(void*)
02000770 00000008 T FFLiBugCanVgtFixedIndexSize(unsigned int)
02000778 00000018 t (anonymous namespace)::CompareMiiVersion(FFLiCharInfo const*, FFLiCharInfo const*)
02000790 00000018 t (anonymous namespace)::CompareCopyable(FFLiCharInfo const*, FFLiCharInfo const*)
020007a8 00000018 t (anonymous namespace)::CompareLocalOnly(FFLiCharInfo const*, FFLiCharInfo const*)
020007c0 00000018 t (anonymous namespace)::CompareRegionMove(FFLiCharInfo const*, FFLiCharInfo const*)
020007d8 00000018 t (anonymous namespace)::CompareBirthPlatform(FFLiCharInfo const*, FFLiCharInfo const*)
020007f0 00000014 T FFLiiGetEyeRotateOffset(int)
02000804 00000014 T FFLiiGetEyebrowRotateOffset(int)
02000818 00000034 T FFLiiGetAdjustedMouthH(float, int)
0200084c 00000028 T FFLiiGetAdjustedEyeH(float, int)
02000874 0000002c T FFLiIsValidCharacterForName(unsigned short)
020008a0 00000088 t (anonymous namespace)::VerifyName(unsigned short const*, int)
02000928 000006b4 T FFLiCompareCharInfoWithAdditionalInfo(int*, int, FFLiCharInfo const*, FFLiCharInfo const*, FFLAdditionalInfo const*, FFLAdditionalInfo const*)
02000fdc 0000002c W bool FFLiRange<int>(int, int, int)
02001008 000006e0 T FFLiVerifyCharInfoWithReason
020016e8 00000028 T FFLiiVerifyCharInfo(FFLiCharInfo const*, int)
02001710 00000020 T FFLiVerifyCharInfo
02001730 00000084 T FFLiCopySurface::FFLiCopySurface()
02001730 00000084 T FFLiCopySurface::FFLiCopySurface()
020017b4 00000038 T FFLiCopySurface::~FFLiCopySurface()
020017b4 00000038 T FFLiCopySurface::~FFLiCopySurface()
020017ec 00000034 T FFLiCopySurface::SetupGPU()
02001820 00000090 T FFLiCopySurface::Begin()
02001900 0000003c T FFLiCopySurface::End()
0200195c 0000010c T FFLiCopySurface::SetupSrcSurface(GX2Surface const*, unsigned int)
02001a88 0000021c T FFLiCopySurface::SetupDstSurface(GX2Surface*, unsigned int)
02001cf4 000000d4 T FFLiCopySurface::Execute(GX2Surface*, unsigned int, GX2Surface const*, unsigned int)
02001dd8 000000c8 W rio::MemUtil::copy(void*, void const*, unsigned int)
02001ec0 00000060 W rio::MemUtil::free(void*)
02001f30 00000010 T FFLiCopySurfaceDrawer::FFLiCopySurfaceDrawer()
02001f30 00000010 T FFLiCopySurfaceDrawer::FFLiCopySurfaceDrawer()
02001f40 00000058 T FFLiCopySurfaceDrawer::~FFLiCopySurfaceDrawer()
02001f40 00000058 T FFLiCopySurfaceDrawer::~FFLiCopySurfaceDrawer()
02001f98 0000008c T FFLiCopySurfaceDrawer::SetupCPU()
02002024 00000048 T FFLiCopySurfaceDrawer::SetupGPU()
0200207c 0000005c T FFLiCopySurfaceDrawer::SetAttributeBuffer(unsigned int, unsigned int)
020020e8 00000030 T FFLiCopySurfaceDrawer::Draw()
02002128 0000002c t FFLiInvalidateShader(void*, unsigned int)
02002164 00000028 t InvalidateFetchShader(GX2FetchShader*)
0200218c 00000028 t InvalidateVertexShader(GX2VertexShader*)
020021b4 00000028 t InvalidatePixelShader(GX2PixelShader*)
020021dc 0000007c T FFLiCopySurfaceShader::FFLiCopySurfaceShader()
020021dc 0000007c T FFLiCopySurfaceShader::FFLiCopySurfaceShader()
02002258 00000020 T FFLiCopySurfaceShader::~FFLiCopySurfaceShader()
02002258 00000020 T FFLiCopySurfaceShader::~FFLiCopySurfaceShader()
02002278 0000008c T FFLiCopySurfaceShader::SetupCPU()
02002314 0000003c T FFLiCopySurfaceShader::SetupGPU()
02002350 0000003c T FFLiCopySurfaceShader::Bind() const
020023bc 0000008c T FFLiCopySurfaceShader::SetTexture(GX2Texture const*, unsigned int)
02002478 00000058 T FFLiGetCRC16(void const*, unsigned int)
020024d0 00000044 T FFLiPutCRC16(void*, unsigned int)
02002514 00000028 T FFLiIsValidCRC16(void const*, unsigned int)
0200253c 00000078 W rio::MemUtil::set(void*, unsigned char, unsigned int)
020025d4 00000028 T FFLiResourceCache::FFLiResourceCache()
020025d4 00000028 T FFLiResourceCache::FFLiResourceCache()
020025fc 00000004 T FFLiResourceCache::~FFLiResourceCache()
020025fc 00000004 T FFLiResourceCache::~FFLiResourceCache()
02002600 000000b8 T FFLiResourceCache::Attach(void*, unsigned int, FFLResourceType)
020026c8 00000014 T FFLiResourceCache::IsValid(FFLResourceType) const
020026dc 00000064 T FFLiResourceCache::IsAttached() const
02002740 0000000c T FFLiResourceCache::Header(FFLResourceType) const
0200274c 0000001c t (anonymous namespace)::GetElement(unsigned int*, void const*, unsigned int, unsigned int)
02002768 0000014c T FFLiGetResourceShapeElement(unsigned int*, void const*, FFLiShapePartsType, FFLiResourceShapeElementType)
020028b4 00000044 W unsigned int FFLiSwapEndianImpl<unsigned int>(unsigned int)
020028f8 00000068 W void FFLiSwapEndianArrayImpl<unsigned int>(unsigned int*, unsigned int)
02002960 00000044 W unsigned short FFLiSwapEndianImpl<unsigned short>(unsigned short)
020029a4 00000068 W void FFLiSwapEndianArrayImpl<unsigned short>(unsigned short*, unsigned int)
02002a0c 00000028 T FFLiGetResourceSurfaceFormat(FFLiTextureFormat)
02002a34 00000024 T FFLiResourceTextureFooter::SurfaceFormat() const
02002a58 0000000c T FFLiResourceTextureFooter::GetFooterImpl(void const*, unsigned int)
02002a64 0000000c T FFLiResourceTextureFooter::GetImagePtrImpl(unsigned int) const
02002a70 00000024 T FFLiResourceTextureFooter::GetMipPtrImpl(unsigned int) const
02002a94 00000004 t (anonymous namespace)::GetCharModel(FFLCharModel*)
02002a98 00000004 t (anonymous namespace)::GetCharModel(FFLCharModel const*)
02002a9c 00000044 T FFLInitCharModelCPUStep
02002ae0 00000034 T FFLInitCharModelGPUStepWithCallback
02002b14 0000004c T FFLInitCharModelGPUStep
02002b60 00000024 T FFLDeleteCharModel
02002b84 00000024 T FFLGetDrawParamOpaFaceline
02002ba8 00000024 T FFLGetDrawParamOpaBeard
02002bcc 00000024 T FFLGetDrawParamOpaNose
02002bf0 00000024 T FFLGetDrawParamOpaForehead
02002c14 00000024 T FFLGetDrawParamOpaHair
02002c38 00000024 T FFLGetDrawParamOpaCap
02002c5c 000000f4 T FFLDrawOpaWithCallback
02002d50 0000004c T FFLDrawOpa
02002d9c 00000024 T FFLGetDrawParamXluMask
02002dc0 00000024 T FFLGetDrawParamXluNoseLine
02002de4 00000024 T FFLGetDrawParamXluGlass
02002e08 000000ac T FFLDrawXluWithCallback
02002eb4 0000004c T FFLDrawXlu
02002f00 00000048 T FFLiEnableSpecialMii
02002f48 00000020 T FFLInitResEx
02002f68 00000020 T FFLInitResGPUStep
02002f88 00000020 T FFLExit
02002fa8 00000020 T FFLIsAvailable
02002fc8 00000020 t (anonymous namespace)::GetShapeTypeInfo(FFLModelType)
02002fe8 000000c4 T FFLiInitCharModelCPUStep(FFLiCharModel*, FFLCharModelSource const*, FFLCharModelDesc const*)
020030ac 00000084 T FFLiInitCharModelGPUStep(FFLiCharModel*, FFLShaderCallback const*)
02003130 00000020 T FFLiDeleteCharModel(FFLiCharModel*)
02003150 00000008 T FFLiGetDrawParamOpaFacelineFromCharModel(FFLiCharModel const*)
02003158 00000008 T FFLiGetDrawParamOpaBeardFromCharModel(FFLiCharModel const*)
02003160 00000008 T FFLiGetDrawParamOpaNoseFromCharModel(FFLiCharModel const*)
02003168 00000050 T FFLiGetDrawParamOpaForeheadFromCharModel(FFLiCharModel const*)
020031b8 00000050 T FFLiGetDrawParamOpaHairFromCharModel(FFLiCharModel const*)
02003208 00000060 T FFLiGetDrawParamOpaCapFromCharModel(FFLiCharModel const*)
02003268 00000008 T FFLiGetDrawParamXluMaskFromCharModel(FFLiCharModel const*)
02003270 00000018 T FFLiGetDrawParamXluNoseLineFromCharModel(FFLiCharModel const*)
02003288 00000018 T FFLiGetDrawParamXluGlassFromCharModel(FFLiCharModel const*)
020032a0 00000030 T FFLiCharModelCreateParam::FFLiCharModelCreateParam(FFLiDatabaseManager*, FFLiResourceManager*, FFLiShaderCallback*)
020032a0 00000030 T FFLiCharModelCreateParam::FFLiCharModelCreateParam(FFLiDatabaseManager*, FFLiResourceManager*, FFLiShaderCallback*)
020032d0 00000024 T FFLiCharModelCreateParam::~FFLiCharModelCreateParam()
020032d0 00000024 T FFLiCharModelCreateParam::~FFLiCharModelCreateParam()
020032f4 00000008 T FFLiCharModelCreateParam::GetResolution(FFLResolution)
020032fc 00000008 T FFLiCharModelCreateParam::IsEnabledMipMap(FFLResolution)
02003304 00000058 T FFLiCharModelCreateParam::CheckModelDesc(FFLCharModelDesc const*)
0200335c 0000002c t IsNaN(float)
02003388 00000034 t (anonymous namespace)::ModelFlagToModelType(unsigned int)
020033bc 0000007c t (anonymous namespace)::ConvertShapePartsTypeToShapeType(FFLiShapePartsType)
02003438 0000002c t (anonymous namespace)::GetModelTypeShapePartsInfo(unsigned int)
02003464 00000034 t (anonymous namespace)::AddVec3(FFLVec3*, FFLVec3)
02003498 00000020 t (anonymous namespace)::GetShapeTypeInfo(FFLModelType)
020034b8 00000054 t (anonymous namespace)::DeleteShape(FFLiCharModel*, FFLiShapePartsType)
0200350c 00000024 t (anonymous namespace)::DeleteShape_Mask(FFLiCharModel*)
02003530 00000024 t (anonymous namespace)::DeleteShape_Noseline(FFLiCharModel*)
02003554 00000024 t (anonymous namespace)::DeleteShape_Nose(FFLiCharModel*)
02003578 00000030 t (anonymous namespace)::DeleteShape_Beard(FFLiCharModel*)
020035a8 00000084 t (anonymous namespace)::DeleteShape_Hair(FFLiCharModel*, unsigned int)
0200362c 00000024 t (anonymous namespace)::DeleteShape_Faceline(FFLiCharModel*)
02003650 00000030 t (anonymous namespace)::DeleteShape_Glass(FFLiCharModel*)
02003680 00000060 t (anonymous namespace)::DeleteShapes(FFLiCharModel*)
020036e0 00000054 t (anonymous namespace)::DeleteTexture_Noseline(FFLiCharModel*, bool)
02003734 00000060 t (anonymous namespace)::DeleteTexture_Cap(FFLiCharModel*, bool)
02003794 00000114 t (anonymous namespace)::InitTextures(FFLiCharModel*, FFLiResourceLoader*)
020038a8 00000030 t (anonymous namespace)::DeleteTexture_Glass(FFLiCharModel*, bool)
020038d8 00000118 t (anonymous namespace)::AdjustPartsTransform(FFLiCharModel*, FFLiCoordinate const*)
020039f0 000001b8 t (anonymous namespace)::SetupDrawParam(FFLiCharModel*)
02003ba8 00000094 t (anonymous namespace)::DeleteTextures(FFLiCharModel*)
02003c4c 00000058 t (anonymous namespace)::InvalidateTexture(GX2Texture const&)
02003cb4 00000058 t (anonymous namespace)::InvalidateTextures(FFLiCharModel*)
02003d0c 0000000c T FFLiCharModelCreator::FFLiCharModelCreator(FFLiCharModelCreateParam*, FFLiManager*)
02003d0c 0000000c T FFLiCharModelCreator::FFLiCharModelCreator(FFLiCharModelCreateParam*, FFLiManager*)
02003d18 00000004 T FFLiCharModelCreator::~FFLiCharModelCreator()
02003d18 00000004 T FFLiCharModelCreator::~FFLiCharModelCreator()
02003d1c 00000094 T FFLiCharModelCreator::Delete(FFLiCharModel*)
02003dc0 00000058 T FFLiCharModelCreator::InvalidateShapes(FFLiCharModel*)
02003e18 00000098 T FFLiCharModelCreator::AfterExecuteGPUStep(FFLiCharModel*)
02003ec0 0000011c T FFLiCharModelCreator::ExecuteGPUStep(FFLiCharModel*, FFLShaderCallback const*)
02003fdc 00000014 W float FFLiMin<float>(float, float)
02003ff0 00000014 W float FFLiMax<float>(float, float)
02004004 00000104 t (anonymous namespace)::UpdateBoundingBox(FFLBoundingBox*, FFLBoundingBox const*)
02004108 0000008c t (anonymous namespace)::CalcluateBoundingBox(FFLBoundingBox*, FFLBoundingBox const*, FFLiShapePartsType)
02004194 00000120 t (anonymous namespace)::InitShape(FFLiCharModel*, FFLiShapePartsType, unsigned int, float, float, FFLVec3 const*, bool, FFLiResourceLoader*, FFLiCoordinate const*)
020042b4 00000470 t (anonymous namespace)::InitShapes(FFLiCharModel*, FFLiResourceLoader*, FFLiCoordinate const*)
02004724 0000038c T FFLiCharModelCreator::ExecuteCPUStep(FFLiCharModel*, FFLCharModelSource const*, FFLCharModelDesc const*)
02004ab0 0000008c t (anonymous namespace)::SrgbFetchValue(float)
02004b3c 00000080 t (anonymous namespace)::DegammaColorContainer((anonymous namespace)::FFLiColorContainer&)
02004bbc 0000000c t (anonymous namespace)::GetFacelineColor((anonymous namespace)::FFLiColorContainer const&, int)
02004bc8 00000010 t (anonymous namespace)::GetBeardColor((anonymous namespace)::FFLiColorContainer const&, int)
02004bd8 00000010 t (anonymous namespace)::GetEyebrowColor((anonymous namespace)::FFLiColorContainer const&, int)
02004be8 00000010 t (anonymous namespace)::GetMustacheColor((anonymous namespace)::FFLiColorContainer const&, int)
02004bf8 00000010 t (anonymous namespace)::GetHairColor((anonymous namespace)::FFLiColorContainer const&, int)
02004c08 00000008 t (anonymous namespace)::GetEyeColorR((anonymous namespace)::FFLiColorContainer const&, int)
02004c10 00000008 t (anonymous namespace)::GetEyeColorG((anonymous namespace)::FFLiColorContainer const&, int)
02004c18 00000010 t (anonymous namespace)::GetEyeColorB((anonymous namespace)::FFLiColorContainer const&, int)
02004c28 00000010 t (anonymous namespace)::GetGlassColor((anonymous namespace)::FFLiColorContainer const&, int)
02004c38 00000010 t (anonymous namespace)::GetMouthColorR((anonymous namespace)::FFLiColorContainer const&, int)
02004c48 00000010 t (anonymous namespace)::GetMouthColorG((anonymous namespace)::FFLiColorContainer const&, int)
02004c58 00000008 t (anonymous namespace)::GetMouthColorB((anonymous namespace)::FFLiColorContainer const&, int)
02004c60 00000008 t (anonymous namespace)::GetMoleColor((anonymous namespace)::FFLiColorContainer const&)
02004c68 00000008 t (anonymous namespace)::GetFaceLine((anonymous namespace)::FFLiColorContainer const&)
02004c70 00000010 t (anonymous namespace)::GetCapColor((anonymous namespace)::FFLiColorContainer const&, int)
02004c80 00000008 t (anonymous namespace)::GetNoselineColor((anonymous namespace)::FFLiColorContainer const&)
02004c88 00000248 t (anonymous namespace)::SetupColorContainer((anonymous namespace)::FFLiColorContainer&)
02004ed0 00000064 t (anonymous namespace)::InitializeColorContainerIfUninitialized()
02004f34 00000028 t (anonymous namespace)::GetColorContainer()
02004f5c 00000028 t (anonymous namespace)::GetSrgbFetchColorContainer()
02004f84 00000008 T FFLiUseOffScreenSrgbFetch()
02004f8c 00000034 T FFLiGetSrgbFetchFacelineColor(int)
02004fc0 00000034 T FFLiGetSrgbFetchBeardColor(int)
02004ff4 00000034 T FFLiGetSrgbFetchEyebrowColor(int)
02005028 00000034 T FFLiGetSrgbFetchMustacheColor(int)
0200505c 00000034 T FFLiGetSrgbFetchEyeColorR(int)
02005090 00000034 T FFLiGetSrgbFetchEyeColorG(int)
020050c4 00000034 T FFLiGetSrgbFetchEyeColorB(int)
020050f8 00000034 T FFLiGetSrgbFetchMouthColorR(int)
0200512c 00000034 T FFLiGetSrgbFetchMouthColorG(int)
02005160 00000034 T FFLiGetSrgbFetchMouthColorB(int)
02005194 00000024 T FFLiGetSrgbFetchMoleColor()
020051b8 00000034 T FFLiGetFacelineColor(int)
020051ec 00000034 T FFLiGetHairColor(int)
02005220 00000034 T FFLiGetGlassColor(int)
02005254 00000024 T FFLiGetFaceLine()
02005278 00000034 T FFLiGetCapColor(int)
020052ac 00000024 T FFLiGetNoselineColor()
020052d0 00000034 T FFLiCoordinate::FFLiCoordinate()
020052d0 00000034 T FFLiCoordinate::FFLiCoordinate()
02005304 00000004 T FFLiCoordinate::~FFLiCoordinate()
02005304 00000004 T FFLiCoordinate::~FFLiCoordinate()
02005308 00000008 T FFLiCoordinate::FlipValue(FFLVec3*, float)
02005310 00000008 T FFLiCoordinate::FlipValue(FFLVec4*, float)
02005318 0000002c T FFLiCoordinate::FlipValue(FFLiSnorm10_10_10_2*, unsigned int)
02005344 0000001c T FFLiCoordinate::FlipValue(FFLiSnorm8_8_8_8*, signed char)
02005360 00000078 T FFLiCoordinate::IsDefault() const
020053d8 000000f8 W void FFLiCoordinate::TransformCommon<FFLVec3, float>(FFLVec3*) const
020054d0 00000068 T FFLiCoordinate::Transform(FFLVec3*) const
02005538 00000020 T FFLiCoordinate::Transform(FFLVec4*) const
02005558 00000020 T FFLiCoordinate::TransformWithoutScale(FFLVec3*) const
02005578 00000124 W void FFLiCoordinate::TransformCommon<FFLiSnorm10_10_10_2, unsigned int>(FFLiSnorm10_10_10_2*) const
0200569c 00000020 T FFLiCoordinate::TransformWithoutScale(FFLiSnorm10_10_10_2*) const
020056bc 000000f4 W void FFLiCoordinate::TransformCommon<FFLiSnorm8_8_8_8, signed char>(FFLiSnorm8_8_8_8*) const
020057b0 00000020 T FFLiCoordinate::TransformWithoutScale(FFLiSnorm8_8_8_8*) const
020057d0 0000007c T FFLiIsNullMiiID
0200584c 0000001c T FFLiGetTemporaryMiiID
02005868 0000000c T FFLiIsNormalMiiID
02005874 00000028 T FFLiIsSpecialMiiID
0200589c 0000002c T FFLiIsNTRMiiID
020058c8 0000000c T FFLiIsTemporaryMiiID
020058d4 0000005c T FFLiIsValidMiiID
02005930 000000cc T FFLiIsSameMiiID
020059fc 00000028 t (anonymous namespace)::GetDefaultCreateID(FFLCreateID*, unsigned int)
02005a24 00000008 t GetMiiDataNum()
02005a2c 00000004 T FFLiDatabaseDefault::~FFLiDatabaseDefault()
02005a2c 00000004 T FFLiDatabaseDefault::~FFLiDatabaseDefault()
02005a30 00000068 T FFLiDatabaseDefault::InitElement(FFLiMiiDataOfficial*, FFLiMiiDataCoreRFL const*, unsigned int)
02005a98 00000064 T FFLiDatabaseDefault::FFLiDatabaseDefault()
02005a98 00000064 T FFLiDatabaseDefault::FFLiDatabaseDefault()
02005afc 0000006c T FFLiDatabaseDefault::Get(FFLiCharInfo*, unsigned int) const
02005b68 00000034 t CheckFFLiFsResult(FFLiFsResult const&)
02005b9c 0000002c t ConvertFFLiFsResultToFFLResult(FFLiFsResult const&, FFLResult)
02005bc8 0000002c t CheckFileNotFound(rio::RawErrorCode)
02005bf4 00000024 t (anonymous namespace)::GetDatabasePath(char*, unsigned int, unsigned long long, char const*)
02005c18 0000003c W rio::FileHandle::~FileHandle()
02005c18 0000003c W rio::FileHandle::~FileHandle()
02005c54 00000038 W rio::FileHandle::~FileHandle()
02005c8c 00000080 T FFLiDatabaseFileAccessor::FFLiDatabaseFileAccessor(FFLiDatabaseFile*, FFLiFileWriteBuffer*)
02005c8c 00000080 T FFLiDatabaseFileAccessor::FFLiDatabaseFileAccessor(FFLiDatabaseFile*, FFLiFileWriteBuffer*)
02005d0c 00000004 T FFLiDatabaseFileAccessor::~FFLiDatabaseFileAccessor()
02005d0c 00000004 T FFLiDatabaseFileAccessor::~FFLiDatabaseFileAccessor()
02005d10 00000040 T FFLiDatabaseFileAccessor::Init()
02005d50 000000b0 T FFLiDatabaseFileAccessor::AfterConstruct(unsigned long long)
02005e00 00000064 T FFLiDatabaseFileAccessor::AdjustRegularListOfficial()
02005e64 0000001c T FFLiDatabaseFileAccessor::BeforeDestruct()
02005e80 00000008 T FFLiDatabaseFileAccessor::GetPathOfficial() const
02005e88 00000008 T FFLiDatabaseFileAccessor::GetPathBackup() const
02005e90 00000008 T FFLiDatabaseFileAccessor::GetPathHidden() const
02005e98 00000010 W unsigned int FFLiMin<unsigned int>(unsigned int, unsigned int)
02005ea8 000000f0 t (anonymous namespace)::WriteFileImpl(rio::FileHandle&, void const*, unsigned int, FFLiFileWriteBuffer*)
02005f98 00000094 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0200602c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0200602c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0200609c 000001e8 t (anonymous namespace)::ReadFile(void*, unsigned int, char const*)
02006294 00000058 t (anonymous namespace)::LoadDatabaseHidden(FFLiDatabaseFileHidden*, char const*)
020062ec 00000058 t (anonymous namespace)::LoadDatabaseOfficial(FFLiDatabaseFileOfficial*, char const*)
02006344 000001d4 t (anonymous namespace)::WriteFile(void const*, unsigned int, FFLiFileWriteBuffer*, char const*)
02006528 00000030 t (anonymous namespace)::SaveDatabaseHidden(FFLiDatabaseFileHidden const&, FFLiFileWriteBuffer*, char const*)
02006558 00000030 t (anonymous namespace)::SaveDatabaseOfficial(FFLiDatabaseFileOfficial const&, FFLiFileWriteBuffer*, char const*)
02006588 00000094 T FFLiDatabaseFileAccessor::IsExistFile(char const*)
0200661c 00000308 T FFLiDatabaseFileAccessor::BootLoadImpl()
02006924 00000040 T FFLiDatabaseFileAccessor::BootLoad()
02006964 00000014 t ParamIsInvalid(FFLiMiddleDBTimeUpdateParam const&)
02006978 00000014 t ParamGetHidden(FFLiMiddleDBTimeUpdateParam const&)
0200698c 00000008 t GetMiiDataNum()
02006994 000000ac t (anonymous namespace)::ShuffleIndices(unsigned short*, unsigned short)
02006a40 00000010 T FFLiOrderData::Init()
02006a50 00000008 T FFLiOrderData::NextIndex() const
02006a58 00000008 T FFLiOrderData::PrevIndex() const
02006a60 00000068 t ParamAdvance(FFLiMiddleDBTimeUpdateParam&)
02006ac8 000000a4 t ParamFindNext(FFLiMiddleDBTimeUpdateParam&)
02006b6c 00000014 T FFLiDatabaseFileHidden::GetImpl(unsigned short) const
02006b80 000000cc T FFLiDatabaseFileHidden::NumOfGenderWithIndex(unsigned short*, FFLGender) const
02006c4c 00000120 T FFLiDatabaseFileHidden::UpdateMiddleDBRandom(FFLiMiddleDB*) const
02006d6c 00000138 T FFLiDatabaseFileHidden::UpdateMiddleDBTime(FFLiMiddleDB*, bool) const
02006ea4 00000028 T FFLiDatabaseFileHidden::IsValidCrc() const
02006ecc 00000064 T FFLiDatabaseFileHidden::UpdateCrc()
02006f40 0000009c T FFLiDatabaseFileHidden::Init()
02006fdc 0000001c T FFLiDatabaseFileHidden::IsValidIdentifier() const
02006ff8 0000004c T FFLiDatabaseFileHidden::IsValid() const
02007044 00000090 T FFLiDatabaseFileHidden::UpdateMiddleDB(FFLiMiddleDB*) const
020070d4 00000008 t GetMiiDataNum()
020070dc 00000080 t (anonymous namespace)::IsExistCreateID(FFLCreateID const&, FFLiDatabaseFileOfficial::AdjustRegularBuffer const&)
0200715c 00000028 t (anonymous namespace)::SetNullCreateID(FFLCreateID&)
02007184 00000010 T FFLiDatabaseFileOfficial::GetImpl(unsigned short) const
02007194 00000028 T FFLiDatabaseFileOfficial::IsValidCrc() const
020071bc 00000064 T FFLiDatabaseFileOfficial::UpdateCrc()
02007230 00000084 T FFLiDatabaseFileOfficial::Init()
020072b4 0000001c T FFLiDatabaseFileOfficial::IsValidIdentifier() const
020072d0 0000004c T FFLiDatabaseFileOfficial::IsValid() const
0200731c 00000108 T FFLiDatabaseFileOfficial::Get(FFLiCharInfo*, unsigned short, bool, bool) const
02007424 000000c8 T FFLiDatabaseFileOfficial::Search(unsigned short*, FFLCreateID const&) const
020074ec 0000011c T FFLiDatabaseFileOfficial::AdjustRegularList(FFLiDatabaseFileOfficial::AdjustRegularBuffer*)
02007608 00000084 t (anonymous namespace)::ReplaceNameIfAccord(unsigned short*, unsigned int)
0200768c 00000040 t (anonymous namespace)::ReplaceNameAndCreatorIfAccord(FFLiCharInfo*)
020076cc 000000b4 T FFLiDatabaseManager::FFLiDatabaseManager(FFLiDatabaseFile*, FFLiFileWriteBuffer*, FFLiSystemContext*)
020076cc 000000b4 T FFLiDatabaseManager::FFLiDatabaseManager(FFLiDatabaseFile*, FFLiFileWriteBuffer*, FFLiSystemContext*)
02007780 00000040 T FFLiDatabaseManager::~FFLiDatabaseManager()
02007780 00000040 T FFLiDatabaseManager::~FFLiDatabaseManager()
020077c0 00000054 T FFLiDatabaseManager::AfterConstruct()
02007814 00000024 T FFLiDatabaseManager::BeforeDestruct()
02007838 0000001c T FFLiDatabaseManager::EnableSpecialMii(unsigned int)
02007854 00000008 T FFLiDatabaseManager::IsEnabledSpecialMii() const
0200785c 00000070 T FFLiDatabaseManager::GetCharInfoFromOfficial(FFLiCharInfo*, unsigned short)
020078cc 00000038 T FFLiDatabaseManager::GetCharInfoFromDefault(FFLiCharInfo*, unsigned short)
02007904 0000009c T FFLiDatabaseManager::GetCharInfoFromStoreData(FFLiCharInfo*, FFLDataSource, FFLiStoreDataCFL const*, unsigned short)
020079a0 00000180 T FFLiDatabaseManager::PickupCharInfo(FFLiCharInfo*, FFLDataSource, void const*, unsigned short)
02007b20 00000080 T FFLiDatabaseManager::UpdateMiddleDB(FFLiMiddleDB*)
02007ba0 0000003c t (anonymous namespace)::GetRandomParts((anonymous namespace)::RandomPartsArray const&, FFLiRandomContext*)
02007bdc 00000064 t (anonymous namespace)::GetRandomGlassType(FFLAge, FFLiRandomContext*)
02007c40 00000008 T FFLiDatabaseRandom::FFLiDatabaseRandom(FFLiRandomContext*)
02007c40 00000008 T FFLiDatabaseRandom::FFLiDatabaseRandom(FFLiRandomContext*)
02007c48 00000004 T FFLiDatabaseRandom::~FFLiDatabaseRandom()
02007c48 00000004 T FFLiDatabaseRandom::~FFLiDatabaseRandom()
02007c4c 0000011c T FFLiDatabaseRandom::DetermineParam(FFLGender*, FFLAge*, FFLRace*)
02007d68 000005dc T FFLiDatabaseRandom::Get(FFLiCharInfo*, FFLGender, FFLAge, FFLRace)
02008344 000000ec T FFLiDatabaseRandom::UpdateMiddleDB(FFLiMiddleDB*)
02008430 00000020 T FFLiGetTick()
02008460 00000068 T FFLiGetDateTimeNow(FFLiDateTime*)
020084d8 0000009c T FFLiGetNowDateTime(int*, int*, int*, int*, int*, int*)
02008574 00000074 T FFLiIsLeapYear(int)
020085e8 00000028 T FFLiGetMonthOfDay(int)
02008610 000000e0 T FFLiDateToDays(int, int, int)
020086f0 0000006c T FFLiGetSecondsFrom_2000_01_01()
0200875c 00000008 t (anonymous namespace)::GetWidth(unsigned int)
02008764 00000004 t (anonymous namespace)::GetHeight(unsigned int)
02008768 00000018 t (anonymous namespace)::GetTextureFormat(bool)
02008780 00000030 t (anonymous namespace)::GetNumMips(unsigned int, unsigned int, bool)
020087b0 00000024 t (anonymous namespace)::DeleteTexture_FaceMake(FFLiFacelineTextureTempObject*, bool)
020087d4 00000020 t (anonymous namespace)::DeleteTexture_FaceLine(FFLiFacelineTextureTempObject*, bool)
020087f4 00000034 t (anonymous namespace)::DeleteTexture_FaceBeard(FFLiFacelineTextureTempObject*, FFLiCharInfo const*, bool)
02008828 00000020 t (anonymous namespace)::EndianSwap(void*, unsigned int)
02008848 00000030 t (anonymous namespace)::InvalidatePrimitive(FFLPrimitiveParam*)
02008888 0000006c t (anonymous namespace)::InvalidateAttributes(FFLAttributeBufferParam*)
02008904 00000038 t (anonymous namespace)::InvalidateDrawParam(FFLDrawParam*)
0200893c 00000058 t (anonymous namespace)::InvalidateTexture(GX2Texture const&)
020089a4 00000074 W rio::MemUtil::alloc(unsigned int, unsigned int)
02008a28 00000020 t (anonymous namespace)::Allocate(unsigned int, unsigned int)
02008a48 00000070 t (anonymous namespace)::InitPrimitive(FFLPrimitiveParam*)
02008ab8 000000e0 t (anonymous namespace)::InitAttributes(FFLAttributeBufferParam*, unsigned int)
02008b98 00000050 t (anonymous namespace)::InitDrawParamWithoutModulate(FFLDrawParam*, unsigned int)
02008be8 00000020 t (anonymous namespace)::Free(void*)
02008c08 00000028 t (anonymous namespace)::DeletePrimitive(FFLPrimitiveParam*)
02008c30 00000038 t (anonymous namespace)::DeleteAttributes(FFLAttributeBufferParam*)
02008c68 00000038 t (anonymous namespace)::DeleteDrawParam(FFLDrawParam*)
02008ca0 00000094 T FFLiInitFacelineTexture(FFLiRenderTexture*, unsigned int, bool)
02008d34 00000020 T FFLiDeleteFacelineTexture(FFLiRenderTexture*)
02008d54 00000184 T FFLiInitTempObjectFacelineTexture(FFLiFacelineTextureTempObject*, FFLiRenderTexture*, FFLiCharInfo const*, unsigned int, bool, FFLiResourceLoader*)
02008ed8 000000c0 T FFLiDeleteTempObjectFacelineTexture(FFLiFacelineTextureTempObject*, FFLiCharInfo const*, FFLResourceType)
02008fa8 00000240 T FFLiRenderFacelineTexture(FFLiRenderTexture*, FFLiCharInfo const*, unsigned int, FFLiFacelineTextureTempObject*, FFLiShaderCallback const*, FFLiCopySurface*)
020091f8 00000024 t SetResultIfError(FFLResult*, FFLResult)
0200921c 00000014 T FFLiManager::IsConstruct()
02009230 00000020 T FFLiIsAvailable()
02009250 0000000c T FFLiManager::GetInstance()
0200925c 0000018c T FFLiManager::FFLiManager(FFLInitDesc const*)
0200925c 0000018c T FFLiManager::FFLiManager(FFLInitDesc const*)
020093e8 000000a0 T FFLiManager::~FFLiManager()
020093e8 000000a0 T FFLiManager::~FFLiManager()
02009488 000000e4 T FFLiManager::AfterConstruct(FFLInitDesc const*, FFLResourceDesc const*)
0200956c 0000003c T FFLiManager::BeforeDestruct()
020095a8 0000007c T FFLiManager::Destroy()
02009624 00000020 T FFLiExit()
02009644 000000cc T FFLiManager::Create(FFLInitDesc const*, FFLResourceDesc const*)
02009710 00000054 t (anonymous namespace)::InitResImpl(FFLInitDesc const*, FFLResourceDesc const*)
02009764 00000020 T FFLiInitResEx(FFLInitDesc const*, FFLResourceDesc const*)
02009784 00000008 T FFLiManager::CanInitCharModel() const
0200978c 0000002c T FFLiManager::SetupGPU()
020097b8 00000034 T FFLiInitResGPUStep()
020097ec 00000018 t (anonymous namespace)::GetTextureFormat(bool)
02009804 00000018 t (anonymous namespace)::CanUseExpression(unsigned int, FFLExpression)
0200981c 00000014 t (anonymous namespace)::GetCorrectParam(FFLExpression)
02009830 00000024 t (anonymous namespace)::FFLiRenderTextureAllocate()
02009854 00000080 t (anonymous namespace)::InitRawMask(FFLiMaskTexturesTempObject*, unsigned int)
020098d4 0000002c t (anonymous namespace)::FFLiRenderTextureDelete(FFLiRenderTexture*)
02009900 00000084 t (anonymous namespace)::DeleteRawMask(FFLiMaskTexturesTempObject*, unsigned int)
02009984 000000f4 t (anonymous namespace)::SetupExpressionCharInfo(FFLiCharInfo*, FFLiCharInfo const*, FFLExpression)
02009a78 000000f8 T FFLiInitMaskTextures(FFLiMaskTextures*, unsigned int, unsigned int, bool)
02009b70 00000074 T FFLiDeleteMaskTextures(FFLiMaskTextures*)
02009be4 000001ac T FFLiInitTempObjectMaskTextures(FFLiMaskTexturesTempObject*, FFLiMaskTextures const*, FFLiCharInfo const*, unsigned int, unsigned int, bool, FFLiResourceLoader*)
02009d90 000000a0 T FFLiDeleteTempObjectMaskTextures(FFLiMaskTexturesTempObject*, unsigned int, FFLResourceType)
02009e30 0000018c T FFLiRenderMaskTextures(FFLiMaskTextures*, FFLiMaskTexturesTempObject*, FFLiShaderCallback const*, FFLiCopySurface*)
02009fcc 0000004c T FFLiUpdateMiddleDB(FFLiMiddleDB*)
0200a018 0000000c T FFLiMiddleDBHiddenParam::Init()
0200a024 00000018 T FFLiMiddleDBRandomParam::Init()
0200a03c 0000000c T FFLiMiddleDBNetParam::Init()
0200a048 00000008 T FFLiMiddleDB::GetBufferSize(unsigned short)
0200a050 00000020 T FFLiGetMiddleDBBufferSize(unsigned short)
0200a070 000000bc T FFLiMiddleDB::Init(FFLMiddleDBType, void*, unsigned short)
0200a12c 00000020 T FFLiInitMiddleDB(FFLiMiddleDB*, FFLMiddleDBType, void*, unsigned short)
0200a14c 00000008 T FFLiMiddleDB::Size() const
0200a154 00000008 T FFLiMiddleDB::StoredSize() const
0200a15c 00000008 T FFLiMiddleDB::Type() const
0200a164 0000004c T FFLiMiddleDB::ClearData()
0200a1b0 00000008 T FFLiMiddleDB::HiddenParam() const
0200a1b8 00000008 T FFLiMiddleDB::RandomParam() const
0200a1c0 00000058 T FFLiMiddleDB::IsFull() const
0200a218 00000064 T FFLiMiddleDB::Add(FFLiCharInfo const&)
0200a27c 00000078 T FFLiMiddleDB::Add(FFLiMiiDataHidden const&)
0200a2f4 00000010 T FFLiMiddleDB::Get(unsigned short) const
0200a304 00000010 T FFLiMiddleDB::Get(unsigned short)
0200a314 00000070 T FFLiMiddleDB::GetCharInfo(FFLiCharInfo*, unsigned short) const
0200a384 0000006c t IsInvalidCharCode(unsigned short)
0200a3f0 00000014 t (anonymous namespace)::RflToFaceLineAndMake(int)
0200a404 000000d4 t (anonymous namespace)::VerifyNameFromRFL(unsigned short*, int, int)
0200a4d8 00000064 t (anonymous namespace)::ReplaceNameFromRFL(unsigned short*, int, int)
0200a53c 000003c0 T FFLiMiiDataCoreRFL2CharInfo(FFLiCharInfo*, FFLiMiiDataCoreRFL const&, unsigned short const*, bool)
0200a8fc 0000002c T FFLiClearCreatorNameFromOfficial(FFLiMiiDataOfficial*)
0200a928 00000390 T FFLiMiiDataCore2CharInfo(FFLiCharInfo*, FFLiMiiDataCore const&, unsigned short const*, bool)
0200acb8 00000570 T FFLiCharInfo2MiiDataCore(FFLiMiiDataCore*, FFLiCharInfo const&, bool)
0200b228 00000058 T FFLiMiiDataCoreRFL2MiiDataCore(FFLiMiiDataCore*, FFLiMiiDataCoreRFL const&, bool)
0200b280 00000028 T FFLiMiiDataOfficial2CharInfo(FFLiCharInfo*, FFLiMiiDataOfficial const&)
0200b2a8 00000048 T FFLiCharInfo2MiiDataOfficial(FFLiMiiDataOfficial*, FFLiCharInfo const&, bool)
0200b2f0 00000078 T FFLiStoreDataCFLToCharInfo(FFLiCharInfo*, FFLiStoreDataCFL const&)
0200b368 0000002c T FFLiMiiDataCore::SwapEndian()
0200b394 00000064 T FFLiStoreData::SetCRC()
0200b408 00000038 T FFLiMiiDataOfficial::SwapEndian()
0200b440 0000004c T FFLiStoreData::SwapEndian()
0200b48c 00000034 T FFLiGetMipMapNum(int, int)
0200b4c0 00000030 T FFLiGetMipMapLevelSize(unsigned int, unsigned int)
0200b4f0 0000009c T FFLiVerifyBirthday(int, int)
0200b58c 00000060 T FFLiInitModulateMustache(FFLModulateParam*, int, rio::Texture2D const&)
0200b5ec 00000078 T FFLiInitModulateMouth(FFLModulateParam*, int, rio::Texture2D const&)
0200b664 00000060 T FFLiInitModulateEyebrow(FFLModulateParam*, int, rio::Texture2D const&)
0200b6c4 00000078 T FFLiInitModulateEye(FFLModulateParam*, int, int, rio::Texture2D const&)
0200b73c 0000005c T FFLiInitModulateMole(FFLModulateParam*, rio::Texture2D const&)
0200b798 00000028 T FFLiInitModulateFaceMake(FFLModulateParam*, rio::Texture2D const&)
0200b7c0 0000005c T FFLiInitModulateFaceLine(FFLModulateParam*, rio::Texture2D const&)
0200b81c 00000060 T FFLiInitModulateFaceBeard(FFLModulateParam*, int, rio::Texture2D const&)
0200b87c 00000024 T FFLiInitModulateShapeFaceline(FFLModulateParam*, rio::Texture2D const&)
0200b8a0 00000058 T FFLiInitModulateShapeBeard(FFLModulateParam*, int)
0200b8f8 00000058 T FFLiInitModulateShapeNose(FFLModulateParam*, int)
0200b950 00000058 T FFLiInitModulateShapeForehead(FFLModulateParam*, int)
0200b9a8 00000058 T FFLiInitModulateShapeHair(FFLModulateParam*, int)
0200ba00 0000005c T FFLiInitModulateShapeCap(FFLModulateParam*, int, rio::Texture2D const&)
0200ba5c 00000028 T FFLiInitModulateShapeMask(FFLModulateParam*, rio::Texture2D const&)
0200ba84 0000005c T FFLiInitModulateShapeNoseline(FFLModulateParam*, rio::Texture2D const&)
0200bae0 00000060 T FFLiInitModulateShapeGlass(FFLModulateParam*, int, rio::Texture2D const&)
0200bb40 0000002c T FFLiInitModulateFill(FFLModulateParam*)
0200bb6c 00000024 t (anonymous namespace)::DeleteTexture_Mustache(FFLiPartsTextures*, bool)
0200bb90 00000024 t (anonymous namespace)::DeleteTexture_Eyebrow(FFLiPartsTextures*, bool)
0200bbb4 00000024 t (anonymous namespace)::DeleteTexture_Mole(FFLiPartsTextures*, bool)
0200bbd8 00000058 t (anonymous namespace)::InvalidateTexture(GX2Texture const&)
0200bc40 00000068 t (anonymous namespace)::InvalidateTextures(rio::Texture2D**, unsigned int)
0200bca8 0000008c t (anonymous namespace)::ExpressionToEyeUseFlag(bool*, unsigned int)
0200bd34 00000078 t (anonymous namespace)::DeleteTextures_Eye(FFLiPartsTextures*, unsigned int, bool)
0200bdac 00000084 t (anonymous namespace)::ExpressionToMouthUseFlag(bool*, unsigned int)
0200be30 00000080 t (anonymous namespace)::DeleteTextures_Mouth(FFLiPartsTextures*, unsigned int, bool)
0200beb0 00000054 T FFLiCharInfoAndTypeToEyeIndex(FFLiCharInfo const*, FFLiEyeTextureType)
0200bf04 00000054 T FFLiCharInfoAndTypeToMouthIndex(FFLiCharInfo const*, FFLiMouthTextureType)
0200bf58 000002fc T FFLiLoadPartsTextures(FFLiPartsTextures*, FFLiCharInfo const*, unsigned int, FFLiResourceLoader*)
0200c254 000000c4 T FFLiDeletePartsTextures(FFLiPartsTextures*, unsigned int, FFLResourceType)
0200c328 0000006c T FFLiInvalidatePartsTextures(FFLiPartsTextures*)
0200c394 00000014 T FFLiGetEyeMouthTypeElement(FFLExpression)
0200c3a8 00000024 T FFLiGetMiiStudioTitleID()
0200c3dc 00000038 T FFLiGetResourcePath(char*, unsigned int, char const*)
0200c424 0000003c T FFLiGetDatabasePath(char*, unsigned int, unsigned long long, char const*)
0200c470 00000018 T FFLiConvertFSStatusToFFLResult(rio::RawErrorCode)
0200c488 00000020 T FFLiRandomContext::Init(unsigned int)
0200c4a8 00000030 T FFLiRandomContext::Random(unsigned short)
0200c4d8 000007f8 t (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)
0200ccd0 000001dc T FFLiInitDrawParamRawMask(FFLiRawMaskDrawParam*, FFLiCharInfo const*, int, int, int, FFLiRawMaskTextureDesc const*)
0200ceac 00000070 T FFLiDeleteDrawParamRawMask(FFLiRawMaskDrawParam*)
0200cf1c 00000070 T FFLiInvalidateRawMask(FFLiRawMaskDrawParam*)
0200cf8c 00000290 T FFLiDrawRawMask(FFLiRawMaskDrawParam const*, FFLiShaderCallback const*)
0200d21c 00000244 t (anonymous namespace)::CalcAttribute(FFLVec4*, FFLVec2*, FFLiOriginPosition, rio::BaseMtx44<float> const*)
0200d460 00000020 t (anonymous namespace)::EndianSwap(void*, unsigned int)
0200d480 00000030 t (anonymous namespace)::InvalidatePrimitive(FFLPrimitiveParam*)
0200d4c0 0000006c t (anonymous namespace)::InvalidateAttributes(FFLAttributeBufferParam*)
0200d53c 00000020 t (anonymous namespace)::Allocate(unsigned int, unsigned int)
0200d55c 00000070 t (anonymous namespace)::InitPrimitive(FFLPrimitiveParam*)
0200d5cc 000000a4 t (anonymous namespace)::InitAttributes(FFLAttributeBufferParam*, FFLiOriginPosition, rio::BaseMtx44<float> const*)
0200d670 00000068 t (anonymous namespace)::InitAttributesForFill(FFLAttributeBufferParam*)
0200d6d8 00000020 t (anonymous namespace)::Free(void*)
0200d6f8 00000028 t (anonymous namespace)::DeletePrimitive(FFLPrimitiveParam*)
0200d720 00000038 t (anonymous namespace)::DeleteAttributes(FFLAttributeBufferParam*)
0200d758 00000024 t (anonymous namespace)::DeleteAttributesForFill(FFLAttributeBufferParam*)
0200d77c 00000038 T FFLiDeleteDrawParamRawMaskParts(FFLiRawMaskPartsDrawParam*)
0200d7b4 00000038 T FFLiInvalidateDrawParamRawMaskParts(FFLiRawMaskPartsDrawParam*)
0200d7ec 00000040 T FFLiInitDrawParamRawMaskPartsFill(FFLiRawMaskPartsDrawParam*)
0200d82c 00000038 T FFLiDeleteDrawParamRawMaskPartsFill(FFLiRawMaskPartsDrawParam*)
0200d864 0000002c T FFLiDrawRawMaskParts(FFLiRawMaskPartsDrawParam const*, FFLiShaderCallback const*)
0200d890 0000032c W rio::Matrix44<float>::setMul(rio::Matrix44<float> const&, rio::Matrix44<float> const&)
0200dbbc 000001b0 W rio::Matrix34<float>::makeSRT(rio::BaseVec3<float> const&, rio::BaseVec3<float> const&, rio::BaseVec3<float> const&)
0200dd6c 000000a4 t (anonymous namespace)::CalcMVMatrix(rio::Matrix34<float>*, FFLiRawMaskPartsDesc const*)
0200de10 000000a8 T FFLiInitDrawParamRawMaskParts(FFLiRawMaskPartsDrawParam*, FFLiRawMaskPartsDesc const*, rio::BaseMtx44<float> const*)
0200deb8 00000074 W rio::RenderTarget::setMipLevel(unsigned int)
0200df3c 0000007c W rio::RenderTargetColor::linkTexture2D(rio::Texture2D const&)
0200dfc8 00000090 W rio::RenderTargetDepth::linkTexture2D(rio::Texture2D const&)
0200e068 00000120 T FFLiInitRenderTexture(FFLiRenderTexture*, unsigned int, unsigned int, rio::TextureFormat, unsigned int)
0200e188 000000b0 T FFLiDeleteRenderTexture(FFLiRenderTexture*)
0200e238 00000058 T FFLiInvalidateRenderTexture(FFLiRenderTexture*)
0200e2a0 00000178 T FFLiSetupRenderTexture(FFLiRenderTexture*, FFLColor const*, rio::Texture2D*, unsigned int, FFLiShaderCallback const*)
0200e458 00000068 T FFLiFlushRenderTexture(FFLiRenderTexture*)
0200e4d0 00000084 T FFLiGetTextureResourceNum(FFLiTexturePartsType)
0200e554 00000064 T FFLiGetShapeResourceNum(FFLiShapePartsType)
0200e5b8 000000cc T FFLiGetTextureResoucePartsInfos(unsigned int*, FFLiResourceTextureHeader*, FFLiTexturePartsType)
0200e684 000000d4 T FFLiGetShapeResoucePartsInfos(unsigned int*, FFLiResourceShapeHeader*, FFLiShapePartsType)
0200e758 000000b4 T FFLiResourceWindowBitsToZlibWindowBits(FFLiResourceWindowBits)
0200e80c 00000078 T FFLiResourceHeader::GetResult() const
0200e884 00000028 T FFLiResourceLoader::FFLiResourceLoader(FFLiResourceManager*, FFLiResourceLoaderBuffer*, FFLResourceType)
0200e884 00000028 T FFLiResourceLoader::FFLiResourceLoader(FFLiResourceManager*, FFLiResourceLoaderBuffer*, FFLResourceType)
0200e8ac 00000028 T FFLiResourceLoader::IsExpand() const
0200e8d4 00000028 T FFLiResourceLoader::Header() const
0200e8fc 00000044 T FFLiResourceLoader::GetTextureAlignedMaxSize(FFLiTexturePartsType) const
0200e940 00000040 T FFLiResourceLoader::GetShapeAlignedMaxSize(FFLiShapePartsType) const
0200e980 00000024 T FFLiResourceLoader::IsCached() const
0200e9a4 00000074 T FFLiResourceLoader::GetPointerFromCache(void**, FFLiResourcePartsInfo const&)
0200ea18 000000c4 T FFLiResourceLoader::GetPointerTextureByExpandCache(void**, unsigned int*, FFLiTexturePartsType, unsigned int)
0200eadc 000000fc T FFLiResourceLoader::ReadWithPos(void*, unsigned int, unsigned int)
0200ebe8 00000098 T FFLiResourceLoader::Close()
0200ec90 00000034 T FFLiResourceLoader::~FFLiResourceLoader()
0200ec90 00000034 T FFLiResourceLoader::~FFLiResourceLoader()
0200ecc4 000000fc T FFLiResourceLoader::OpenIfClosed()
0200edd0 000000b8 t (anonymous namespace)::Uncompress(void*, void const*, FFLiResourceUncompressBuffer*, FFLiResourcePartsInfo const&)
0200ee88 000000a8 T FFLiResourceLoader::LoadFromCache(void*, FFLiResourcePartsInfo const&)
0200ef30 000000e8 T FFLiResourceLoader::LoadFromFile(void*, FFLiResourcePartsInfo const&)
0200f018 00000098 T FFLiResourceLoader::Load(void*, unsigned int*, FFLiResourcePartsInfo const&)
0200f0b0 000000a8 T FFLiResourceLoader::LoadTexture(void*, unsigned int*, FFLiTexturePartsType, unsigned int)
0200f158 000000a8 T FFLiResourceLoader::LoadShape(void*, unsigned int*, FFLiShapePartsType, unsigned int)
0200f200 00000020 T FFLiResourceLoaderBuffer::FFLiResourceLoaderBuffer(FFLiResourceManager const*, FFLResourceType)
0200f200 00000020 T FFLiResourceLoaderBuffer::FFLiResourceLoaderBuffer(FFLiResourceManager const*, FFLResourceType)
0200f220 00000020 T FFLiResourceLoaderBuffer::~FFLiResourceLoaderBuffer()
0200f220 00000020 T FFLiResourceLoaderBuffer::~FFLiResourceLoaderBuffer()
0200f240 0000007c T FFLiResourceManager::FFLiResourceManager(FFLiResourceMultiHeader*)
0200f240 0000007c T FFLiResourceManager::FFLiResourceManager(FFLiResourceMultiHeader*)
0200f2bc 00000024 T FFLiResourceManager::~FFLiResourceManager()
0200f2bc 00000024 T FFLiResourceManager::~FFLiResourceManager()
0200f2e0 0000001c T FFLiResourceManager::GetRelativeResourcePath(FFLResourceType, bool)
0200f2fc 00000054 T FFLiResourceManager::GetResourcePath(char*, unsigned int, FFLResourceType, bool)
0200f350 00000070 T FFLiResourceManager::AfterConstruct()
0200f3c0 00000024 T FFLiResourceManager::AttachCache(void*, unsigned int, FFLResourceType)
0200f3e4 00000024 T FFLiResourceManager::IsCached() const
0200f408 00000024 T FFLiResourceManager::HeaderFromCache(FFLResourceType) const
0200f42c 00000010 T FFLiResourceManager::HeaderFromFile(FFLResourceType) const
0200f43c 0000005c T FFLiResourceManager::Header(FFLResourceType) const
0200f498 00000058 T FFLiResourceManager::IsValid(FFLResourceType) const
0200f4f0 00000078 T FFLiResourceManager::IsExpand(FFLResourceType) const
0200f568 00000030 T FFLiResourceManager::GetUncompressBufferSize(FFLResourceType) const
0200f598 00000014 T FFLiResourceManager::GetPath(FFLResourceType) const
0200f5ac 00000180 T FFLiResourceManager::LoadResourceHeaderImpl()
0200f72c 00000020 T FFLiResourceManager::LoadResourceHeader()
0200f74c 00000040 T FFLiResourceUncompressBuffer::FFLiResourceUncompressBuffer(FFLiResourceManager const*, FFLResourceType)
0200f74c 00000040 T FFLiResourceUncompressBuffer::FFLiResourceUncompressBuffer(FFLiResourceManager const*, FFLResourceType)
0200f78c 00000040 T FFLiResourceUncompressBuffer::~FFLiResourceUncompressBuffer()
0200f78c 00000040 T FFLiResourceUncompressBuffer::~FFLiResourceUncompressBuffer()
0200f7cc 00000008 T FFLiResourceUncompressBuffer::Buffer()
0200f7d4 00000020 T FFLiIsVaildResourceHeader(FFLiResourceHeader const*)
0200f7f4 0000000c T FFLiShaderCallback::FFLiShaderCallback()
0200f7f4 0000000c T FFLiShaderCallback::FFLiShaderCallback()
0200f800 00000004 T FFLiShaderCallback::~FFLiShaderCallback()
0200f800 00000004 T FFLiShaderCallback::~FFLiShaderCallback()
0200f804 00000010 T FFLiShaderCallback::IsExist() const
0200f814 00000008 T FFLiShaderCallback::Set(FFLShaderCallback const*)
0200f81c 00000078 T FFLiShaderCallback::CallApplyAlphaTest(bool, rio::Graphics::CompareFunc, float) const
0200f894 00000058 T FFLiShaderCallback::CallSetMatrix(rio::BaseMtx44<float> const&) const
0200f8ec 00000058 T FFLiShaderCallback::CallDraw(FFLDrawParam const&) const
0200f944 0000002c t IsNaN(float)
0200f970 00000044 t (anonymous namespace)::GetElementType(FFLAttributeBufferType)
0200f9b4 00000074 t (anonymous namespace)::FormatToStride(rio::VertexStream::Format)
0200fa28 000000b8 t (anonymous namespace)::GetStride(FFLAttributeBufferType, unsigned int)
0200fae0 00000174 t void (anonymous namespace)::AdjustAttribute<FFLVec4>(FFLVec4*, unsigned int, float, float, float, FFLVec3 const*, bool, FFLiCoordinate const*)
0200fc54 000000dc t void (anonymous namespace)::AdjustAttributeWithoutScale<FFLiSnorm10_10_10_2>(FFLiSnorm10_10_10_2*, unsigned int, bool, FFLiCoordinate const*)
0200fd30 000000cc t void (anonymous namespace)::AdjustAttributeWithoutScale<FFLiSnorm8_8_8_8>(FFLiSnorm8_8_8_8*, unsigned int, bool, FFLiCoordinate const*)
0200fdfc 00000174 t void (anonymous namespace)::AdjustAttribute<FFLVec3>(FFLVec3*, unsigned int, float, float, float, FFLVec3 const*, bool, FFLiCoordinate const*)
0200ff70 00000020 t (anonymous namespace)::EndianSwap(void*, unsigned int)
0200ff90 00000010 T FFLiCanDrawShape(FFLDrawParam const*)
0200ffa0 000002d8 T FFLiLoadShape(void**, FFLDrawParam*, FFLBoundingBox*, FFLiCharModel*, FFLiShapePartsType, unsigned short, FFLiResourceLoader*)
02010278 0000005c T FFLiDeleteShape(void**, FFLDrawParam*)
020102d4 00000194 T FFLiAdjustShape(FFLDrawParam*, FFLBoundingBox*, float, float, FFLVec3 const*, bool, FFLiCoordinate const*, FFLiShapePartsType, bool)
02010468 00000088 T FFLiInvalidateShape(FFLDrawParam*)
02010500 00000038 t (anonymous namespace)::TypeToSize(FFLiSwapEndianType)
02010538 00000004 W unsigned char FFLiSwapEndianImpl<unsigned char>(unsigned char)
0201053c 0000005c W void FFLiSwapEndianArrayImpl<unsigned char>(unsigned char*, unsigned int)
02010598 000000e0 T FFLiSwapEndianGroup(void*, FFLiSwapEndianDesc const*, unsigned int)
02010678 00000004 T FFLiSystemContext::~FFLiSystemContext()
02010678 00000004 T FFLiSystemContext::~FFLiSystemContext()
0201067c 00000074 T FFLiSystemContext::Init(unsigned int)
020106f0 00000038 T FFLiSystemContext::FFLiSystemContext()
020106f0 00000038 T FFLiSystemContext::FFLiSystemContext()
02010728 0000000c T FFLiSystemContext::TitleID() const
02010734 000000b8 T FFLiSystemContext::AfterConstruct()
0201081c 00000040 W rio::Texture2D::Texture2D(GX2Texture&)
0201081c 00000040 W rio::Texture2D::Texture2D(GX2Texture&)
0201085c 00000200 T FFLiLoadTextureWithAllocate(rio::Texture2D**, FFLiTexturePartsType, unsigned int, FFLiResourceLoader*)
02010a8c 00000080 T FFLiDeleteTexture(rio::Texture2D**, bool)
02010b0c 00000014 T FFLiRoundUp(unsigned int, unsigned int)
02010b20 00000014 T FFLiCheckAlignPtr(void const*, unsigned int)
02010b34 00000038 T FFLiCopyWcharT2U16(unsigned short*, unsigned int, wchar_t const*)
02010b6c 00000044 T FFLiCompareString16(unsigned short const*, unsigned short const*, int)
02010bb0 0000009c T FFLiIsNumberCharCode(unsigned short)
02010c4c 00000088 t (anonymous namespace)::GX2GetVertexAttribVar(GX2VertexShader const*, char const*)
02010cd4 00000088 t (anonymous namespace)::GX2GetPixelSamplerVar(GX2PixelShader const*, char const*)
02010d5c 00000064 t GetPixelSamplerLocation(unsigned int*, GX2PixelShader const*, char const*)
02010dc0 0000002c t FFLiInvalidateShader(void*, unsigned int)
02010dfc 00000028 t InvalidateFetchShader(GX2FetchShader*)
02010e24 00000198 T FFLiUtilShader::BuildShader(FFLiUtilShader::FetchShader*, GX2VertexShader const*, FFLiUtilShader::AttributeStreamDesc const*, unsigned int, bool)
02010fdc 00000058 T FFLiUtilShader::DestroyShader(FFLiUtilShader::FetchShader*)
02011034 00000020 T FFLiUtilShader::GetSamplerLocation(unsigned int*, GX2PixelShader const*, char const*)
02011054 00000048 T FFLiZlibInflator::~FFLiZlibInflator()
02011054 00000048 T FFLiZlibInflator::~FFLiZlibInflator()
0201109c 00000038 T FFLiZlibInflator::~FFLiZlibInflator()
020110d4 000000b8 T FFLiZlibInflator::Process(void**, unsigned int*, void const**, unsigned int*, int)
0201118c 0000009c T FFLiZlibInflator::FFLiZlibInflator(int)
0201118c 0000009c T FFLiZlibInflator::FFLiZlibInflator(int)
02011228 00000004 t (anonymous namespace)::GetMiddleDB(FFLMiddleDB*)
0201122c 00000020 T FFLGetMiddleDBBufferSize
0201124c 00000054 T FFLInitMiddleDB
020112a0 00000024 T FFLUpdateMiddleDB
020112c4 00000028 T FFLGetResourcePath
020112ec 00000048 T FFLSetShaderCallback
02011334 00000150 T rio::Initialize(rio::InitializeArg const&)
02011494 00000060 T rio::EnterMainLoop()
020114f4 00000064 T rio::Exit()
02011558 00000098 T rio::AudioMgr::AudioMgr()
02011558 00000098 T rio::AudioMgr::AudioMgr()
020115f0 00000028 W std::__new_allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::deallocate(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >*, unsigned int)
02011618 0000004c W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::_M_drop_node(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >*)
02011664 00000068 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >*)
020116cc 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::~_Rb_tree()
020116cc 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::~_Rb_tree()
020116f0 00000028 W std::__new_allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::deallocate(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >*, unsigned int)
02011718 0000004c W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::_M_drop_node(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >*)
02011764 00000068 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >*)
020117cc 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::~_Rb_tree()
020117cc 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::~_Rb_tree()
020117f0 000000ac T rio::AudioMgr::createSingleton()
0201189c 0000005c T rio::AudioMgr::destroySingleton()
020118f8 00000088 T rio::LinkListNode::insertFront(rio::LinkListNode*)
02011990 00000094 T rio::LinkListNode::erase()
02011a34 00000038 T rio::LinkList::clear()
02011a6c 00000008 W rio::Controller::isConnected() const
02011a74 00000098 T rio::Controller::calc()
02011b0c 00000024 T rio::Controller::isIdle_()
02011b30 00000024 T rio::Controller::setIdle_()
02011b54 00000064 T rio::Controller::Controller(rio::ControllerMgr*)
02011b54 00000064 T rio::Controller::Controller(rio::ControllerMgr*)
02011bb8 00000030 t __static_initialization_and_destruction_0()
02011be8 000000a0 W rio::Math<float>::rsqrt(float)
02011c98 00000130 T rio::ControllerBase::ControllerBase(int, int, int, int)
02011c98 00000130 T rio::ControllerBase::ControllerBase(int, int, int, int)
02011dd8 000000a0 T rio::ControllerBase::isIdleBase_()
02011e78 00000098 T rio::ControllerBase::setIdleBase_()
02011f10 00000034 W rio::Vector2<float>::length() const
02011f44 00000220 T rio::ControllerBase::getStickHold_(unsigned int, rio::Vector2<float> const&, float, float, int)
02012164 00000058 W rio::BitFlag<unsigned int>::makeMask(int)
020121cc 00000060 W rio::BitFlag<unsigned int>::changeBit(int, bool)
0201222c 00000084 T rio::ControllerBase::setPointer_(bool, bool, rio::Vector2<float> const&)
020122b0 000000d8 T rio::ControllerBase::createStickCrossMask_()
02012388 00000224 T rio::ControllerBase::updateDerivativeParams_(unsigned int, bool)
020125ac 00000020 t _GLOBAL__sub_I__ZN3rio14ControllerBase26cStickHoldThresholdDefaultE
020125cc 00000010 W rio::ITask::~ITask()
020125cc 00000010 W rio::ITask::~ITask()
020125dc 00000004 W rio::ITask::prepare_()
020125e0 00000004 W rio::ITask::enter_()
020125e4 00000004 W rio::ITask::exit_()
020125e8 00000004 W rio::ITask::calc_()
020125ec 00000090 T rio::ControllerMgr::calc_()
0201267c 00000030 W rio::ITask::~ITask()
020126ac 00000044 T rio::ControllerMgr::destroySingleton()
020126f0 00000038 T rio::ControllerMgr::getControlDevice(rio::ControllerDefine::DeviceId) const
02012728 00000018 W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::clear()
02012740 00000018 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::clear()
02012758 000000c0 T rio::ControllerMgr::finalizeDefault_()
02012818 0000000c W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::back()
02012824 0000000c W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::back()
02012830 00000028 W std::__new_allocator<rio::ControlDevice*>::deallocate(rio::ControlDevice**, unsigned int)
02012858 00000038 W std::_Vector_base<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::~_Vector_base()
02012858 00000038 W std::_Vector_base<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::~_Vector_base()
02012890 00000020 W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::~vector()
02012890 00000020 W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::~vector()
020128b0 00000028 W std::__new_allocator<rio::Controller*>::deallocate(rio::Controller**, unsigned int)
020128d8 00000038 W std::_Vector_base<rio::Controller*, std::allocator<rio::Controller*> >::~_Vector_base()
020128d8 00000038 W std::_Vector_base<rio::Controller*, std::allocator<rio::Controller*> >::~_Vector_base()
02012910 00000020 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::~vector()
02012910 00000020 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::~vector()
02012930 00000054 T rio::ControllerMgr::~ControllerMgr()
02012930 00000054 T rio::ControllerMgr::~ControllerMgr()
02012984 00000038 T rio::ControllerMgr::~ControllerMgr()
020129bc 00000050 W std::__new_allocator<rio::Controller*>::allocate(unsigned int, void const*)
02012a0c 00000104 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::reserve(unsigned int)
02012b10 000000a0 W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::_M_check_len(unsigned int, char const*) const
02012bb0 000000a0 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::_M_check_len(unsigned int, char const*) const
02012c50 00000128 W void std::vector<rio::Controller*, std::allocator<rio::Controller*> >::_M_realloc_insert<rio::Controller*>(__gnu_cxx::__normal_iterator<rio::Controller**, std::vector<rio::Controller*, std::allocator<rio::Controller*> > >, rio::Controller*&&)
02012d78 00000068 W rio::Controller*& std::vector<rio::Controller*, std::allocator<rio::Controller*> >::emplace_back<rio::Controller*>(rio::Controller*&&)
02012de0 00000050 W std::__new_allocator<rio::ControlDevice*>::allocate(unsigned int, void const*)
02012e30 00000128 W void std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::_M_realloc_insert<rio::ControlDevice*>(__gnu_cxx::__normal_iterator<rio::ControlDevice**, std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> > >, rio::ControlDevice*&&)
02012f58 00000068 W rio::ControlDevice*& std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::emplace_back<rio::ControlDevice*>(rio::ControlDevice*&&)
02012fc0 00000184 T rio::ControllerMgr::initializeDefault_()
02013144 00000094 T rio::ControllerMgr::ControllerMgr()
02013144 00000094 T rio::ControllerMgr::ControllerMgr()
020131d8 00000070 W rio::ControllerMgr* rio::TaskMgr::createTask<rio::ControllerMgr>()
02013248 00000058 T rio::ControllerMgr::createSingleton()
020132a0 0000001c W rio::CafeDRCController::~CafeDRCController()
020132a0 0000001c W rio::CafeDRCController::~CafeDRCController()
020132bc 00000008 W rio::CafeDRCController::isConnected() const
020132c4 0000003c W rio::CafeDRCController::~CafeDRCController()
02013300 00000098 T rio::CafeDRCController::CafeDRCController(rio::ControllerMgr*)
02013300 00000098 T rio::CafeDRCController::CafeDRCController(rio::ControllerMgr*)
02013398 00000090 T rio::CafeDRCController::updateTouchPanelInfo_(rio::CafeDRCController::TouchPanelInfo*, bool, float, float)
02013428 0000056c T rio::CafeDRCController::calcImpl_()
020139a4 0000001c W rio::CafeRemoteController::~CafeRemoteController()
020139a4 0000001c W rio::CafeRemoteController::~CafeRemoteController()
020139c0 00000008 W rio::CafeRemoteController::isConnected() const
020139c8 00000808 T rio::CafeRemoteController::calcImpl_()
020141e0 0000003c W rio::CafeRemoteController::~CafeRemoteController()
0201421c 00000068 T rio::CafeRemoteController::CafeRemoteController(rio::ControllerMgr*, int)
0201421c 00000068 T rio::CafeRemoteController::CafeRemoteController(rio::ControllerMgr*, int)
02014284 0000001c T rio::CafeVPadDevice::~CafeVPadDevice()
02014284 0000001c T rio::CafeVPadDevice::~CafeVPadDevice()
020142a0 00000038 T rio::CafeVPadDevice::~CafeVPadDevice()
020142d8 00000040 T rio::CafeVPadDevice::calc()
02014328 00000038 T rio::CafeVPadDevice::VPadInfo::VPadInfo()
02014328 00000038 T rio::CafeVPadDevice::VPadInfo::VPadInfo()
02014360 0000006c T rio::CafeVPadDevice::CafeVPadDevice(rio::ControllerMgr*)
02014360 0000006c T rio::CafeVPadDevice::CafeVPadDevice(rio::ControllerMgr*)
020143cc 00000044 T rio::CafeWPadDevice::~CafeWPadDevice()
020143cc 00000044 T rio::CafeWPadDevice::~CafeWPadDevice()
02014420 00000038 T rio::CafeWPadDevice::~CafeWPadDevice()
02014458 0000007c T rio::CafeWPadDevice::calc()
020144e4 00000068 W rio::CafeWPadDevice::KPadInfo::KPadInfo()
020144e4 00000068 W rio::CafeWPadDevice::KPadInfo::KPadInfo()
0201454c 000000b8 T rio::CafeWPadDevice::CafeWPadDevice(rio::ControllerMgr*)
0201454c 000000b8 T rio::CafeWPadDevice::CafeWPadDevice(rio::ControllerMgr*)
02014634 00000044 W rio::NativeFileDevice::~NativeFileDevice()
02014634 00000044 W rio::NativeFileDevice::~NativeFileDevice()
02014678 00000038 W rio::NativeFileDevice::~NativeFileDevice()
020146b0 00000044 W rio::ContentFileDevice::~ContentFileDevice()
020146b0 00000044 W rio::ContentFileDevice::~ContentFileDevice()
020146f4 00000038 W rio::ContentFileDevice::~ContentFileDevice()
0201472c 000000e0 T rio::ContentFileDevice::ContentFileDevice()
0201472c 000000e0 T rio::ContentFileDevice::ContentFileDevice()
0201481c 000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::__str_concat<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::value_type const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::value_type const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::allocator_type const&)
020148cc 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)
02014914 00000084 W rio::ContentFileDevice::getNativePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
02014998 0000002c T rio::FileDevice::getLastRawError() const
020149c4 0000002c T rio::FileDevice::tryLoad(rio::FileDevice::LoadArg&)
020149f0 00000098 T rio::FileDevice::tryOpen(rio::FileHandle*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rio::FileDevice::FileOpenFlag)
02014aa8 000000d0 T rio::FileDevice::tryClose(rio::FileHandle*)
02014b98 00000164 T rio::FileDevice::tryRead(unsigned int*, rio::FileHandle*, unsigned char*, unsigned int)
02014d1c 00000164 T rio::FileDevice::tryWrite(unsigned int*, rio::FileHandle*, unsigned char const*, unsigned int)
02014ea0 000000ac T rio::FileDevice::trySeek(rio::FileHandle*, int, rio::FileDevice::SeekOrigin)
02014f6c 000000e8 T rio::FileDevice::tryGetFileSize(unsigned int*, rio::FileHandle*)
02015074 00000238 T rio::FileDevice::doLoad_(rio::FileDevice::LoadArg&)
020152cc 0000006c T rio::FileDevice::tryIsExistFile(bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02015358 00000068 T rio::FileHandle::tryClose()
020153e0 00000074 T rio::FileHandle::tryRead(unsigned int*, unsigned char*, unsigned int)
02015474 00000074 T rio::FileHandle::tryWrite(unsigned int*, unsigned char const*, unsigned int)
02015508 00000074 T rio::FileHandle::trySeek(int, rio::FileDevice::SeekOrigin)
0201559c 00000054 T rio::FileDevice::~FileDevice()
0201559c 00000054 T rio::FileDevice::~FileDevice()
020155f0 0000003c W rio::FileDevice::getNativePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0201562c 0000008c T rio::FileDeviceMgr::~FileDeviceMgr()
0201562c 0000008c T rio::FileDeviceMgr::~FileDeviceMgr()
020156e8 00000054 T rio::FileDeviceMgr::destroySingleton()
0201573c 000000a8 T rio::FileDeviceMgr::unmount(rio::FileDevice*)
020157f4 00000068 W rio::FileDevice::LoadArg::LoadArg(rio::FileDevice::LoadArg const&)
020157f4 00000068 W rio::FileDevice::LoadArg::LoadArg(rio::FileDevice::LoadArg const&)
0201585c 0000006c W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
020158c8 00000080 T rio::FileDeviceMgr::findDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
02015948 000000bc T rio::FileDeviceMgr::findDeviceFromPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
02015a04 00000108 T rio::FileDeviceMgr::tryLoad(rio::FileDevice::LoadArg&)
02015b1c 00000048 W rio::TListNode<rio::FileDevice*>::erase()
02015b64 00000058 W rio::TList<rio::FileDevice*>::pushBack(rio::TListNode<rio::FileDevice*>*)
02015bbc 00000098 T rio::FileDeviceMgr::mount(rio::FileDevice*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02015c64 00000140 T rio::FileDeviceMgr::FileDeviceMgr()
02015c64 00000140 T rio::FileDeviceMgr::FileDeviceMgr()
02015dd4 0000007c T rio::FileDeviceMgr::createSingleton()
02015e50 000000a8 T rio::Path::getDriveName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02015f08 000000ac T rio::Path::getPathExceptDrive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02015fc4 00000010 T rio::NativeFileDevice::doGetCurrentSeekPos_(unsigned int*, rio::FileHandle*)
02015fd4 00000008 T rio::NativeFileDevice::doGetLastRawError_() const
02015fdc 00000034 W rio::NativeFileDevice::getNativePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
02016010 00000074 T rio::NativeFileDevice::doClose_(rio::FileHandle*)
020160a4 000000f0 T rio::NativeFileDevice::doRead_(unsigned int*, rio::FileHandle*, unsigned char*, unsigned int)
020161c4 000000f0 T rio::NativeFileDevice::doWrite_(unsigned int*, rio::FileHandle*, unsigned char const*, unsigned int)
020162e4 0000012c T rio::NativeFileDevice::doSeek_(rio::FileHandle*, int, rio::FileDevice::SeekOrigin)
02016440 0000008c T rio::NativeFileDevice::doGetFileSize_(unsigned int*, rio::FileHandle*)
020164ec 0000015c T rio::NativeFileDevice::doOpen_(rio::FileHandle*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rio::FileDevice::FileOpenFlag)
02016678 000000d0 T rio::NativeFileDevice::doGetFileSize_(unsigned int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02016768 000000f8 T rio::NativeFileDevice::doIsExistFile_(bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02016880 000000c8 T rio::NativeFileDevice::NativeFileDevice()
02016880 000000c8 T rio::NativeFileDevice::NativeFileDevice()
02016948 00000090 T rio::NativeFileDevice::NativeFileDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02016948 00000090 T rio::NativeFileDevice::NativeFileDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
020169d8 0000009c W rio::Vector3<float>::normalized() const
02016a84 0000017c T rio::LookAtCamera::getMatrix(rio::BaseMtx34<float>*) const
02016c10 0000005c W rio::TextureSampler2D::linkNativeTexture2D(GX2Texture const*)
02016c7c 00000064 W rio::TextureSampler2D::linkTexture2D(rio::Texture2D const*)
02016cf0 00000048 W rio::VertexArray::VertexArray()
02016cf0 00000048 W rio::VertexArray::VertexArray()
02016d38 00000100 T rio::PrimitiveRenderer::~PrimitiveRenderer()
02016d38 00000100 T rio::PrimitiveRenderer::~PrimitiveRenderer()
02016e38 00000054 T rio::PrimitiveRenderer::destroySingleton()
02016e8c 0000005c W rio::PrimitiveRenderer::getQuadVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)
02016ee8 0000005c W rio::PrimitiveRenderer::getLineVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)
02016f44 0000005c W rio::PrimitiveRenderer::getCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)
02016fa0 0000004c W rio::PrimitiveRenderer::getWireCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)
02016fec 0000043c W rio::PrimitiveRenderer::getSphereVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*, int, int)
02017428 000001b0 W rio::PrimitiveRenderer::getDiskVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*, int)
020175d8 00000338 W rio::PrimitiveRenderer::getCylinderVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*, int)
02017910 000001f8 W rio::Matrix34<float>::setMul(rio::Matrix34<float> const&, rio::Matrix34<float> const&)
02017b08 00000048 W rio::TListNode<rio::VertexStream*>::erase()
02017b50 00000058 W rio::TList<rio::VertexStream*>::pushBack(rio::TListNode<rio::VertexStream*>*)
02017ba8 000007bc T rio::PrimitiveRenderer::initialize_(char const*)
02018374 00000174 T rio::PrimitiveRenderer::PrimitiveRenderer(char const*)
02018374 00000174 T rio::PrimitiveRenderer::PrimitiveRenderer(char const*)
020184e8 00000088 T rio::PrimitiveRenderer::createSingleton(char const*)
02018570 000000f4 T rio::PerspectiveProjection::updateMatrix_() const
02018664 000000d8 T rio::OrthoProjection::updateMatrix_() const
0201873c 0000006c T rio::PerspectiveProjection::setFovy_(float)
020187a8 0000006c T rio::PerspectiveProjection::PerspectiveProjection(float, float, float, float)
020187a8 0000006c T rio::PerspectiveProjection::PerspectiveProjection(float, float, float, float)
02018814 0000003c T rio::OrthoProjection::OrthoProjection(float, float, float, float, float, float)
02018814 0000003c T rio::OrthoProjection::OrthoProjection(float, float, float, float, float, float)
02018850 000000c4 W rio::Window::Window(unsigned int, unsigned int)
02018850 000000c4 W rio::Window::Window(unsigned int, unsigned int)
02018924 0000018c T rio::Window::createSingleton(unsigned int, unsigned int)
02018ab0 00000054 T rio::Window::destroySingleton()
02018b04 00000094 T rio::Graphics::setViewport(int, int, unsigned int, unsigned int, float, float, int)
02018ba8 00000020 T rio::Graphics::setScissor(int, int, unsigned int, unsigned int, int)
02018bd8 0000050c T rio::Window::foregroundAcquire_()
02019214 00000098 T rio::Window::foregroundRelease_()
020192cc 00000008 T rio::Window::isRunning() const
020192d4 0000007c T rio::Window::terminate_()
02019370 00000044 T rio::Window::makeContextCurrent() const
020193e4 00000024 T rio::Window::setSwapInterval(unsigned int)
02019418 00000118 T rio::Window::initialize_()
02019560 000000e8 T rio::Window::swapBuffers() const
020196d8 00000038 T rio::Window::clearColor(float, float, float, float)
02019720 00000040 T rio::Window::clearDepth(float)
02019770 00000044 T rio::Window::clearStencil(unsigned char)
020197c4 00000044 T rio::Window::clearDepthStencil()
02019818 0000003c T rio::Window::clearDepthStencil(float, unsigned char)
02019864 00000020 T rio::lyr::Renderer::Renderer()
02019864 00000020 T rio::lyr::Renderer::Renderer()
02019884 00000060 T rio::lyr::Renderer::createSingleton()
020198e4 000002c4 T rio::lyr::Renderer::render() const
02019ba8 00000028 W std::__new_allocator<std::_Rb_tree_node<rio::lyr::Layer*> >::deallocate(std::_Rb_tree_node<rio::lyr::Layer*>*, unsigned int)
02019bd0 0000006c W std::_Rb_tree<rio::lyr::Layer*, rio::lyr::Layer*, std::_Identity<rio::lyr::Layer*>, rio::lyr::Layer::Comparator, std::allocator<rio::lyr::Layer*> >::_M_erase(std::_Rb_tree_node<rio::lyr::Layer*>*)
02019c3c 00000048 W std::_Rb_tree<rio::lyr::Layer*, rio::lyr::Layer*, std::_Identity<rio::lyr::Layer*>, rio::lyr::Layer::Comparator, std::allocator<rio::lyr::Layer*> >::clear()
02019c84 00000080 W rio::lyr::Renderer::clearLayers()
02019d04 00000024 W std::_Rb_tree<rio::lyr::Layer*, rio::lyr::Layer*, std::_Identity<rio::lyr::Layer*>, rio::lyr::Layer::Comparator, std::allocator<rio::lyr::Layer*> >::~_Rb_tree()
02019d04 00000024 W std::_Rb_tree<rio::lyr::Layer*, rio::lyr::Layer*, std::_Identity<rio::lyr::Layer*>, rio::lyr::Layer::Comparator, std::allocator<rio::lyr::Layer*> >::~_Rb_tree()
02019d28 00000034 T rio::lyr::Renderer::~Renderer()
02019d28 00000034 T rio::lyr::Renderer::~Renderer()
02019d5c 00000054 T rio::lyr::Renderer::destroySingleton()
02019db0 00000050 W rio::TextureSampler2D::tryBindFS(unsigned int, unsigned int) const
02019e00 00000034 T rio::mdl::res::ModelCacher::ModelCacher()
02019e00 00000034 T rio::mdl::res::ModelCacher::ModelCacher()
02019e34 00000060 T rio::mdl::res::ModelCacher::createSingleton()
02019e94 00000058 W rio::FileDevice::LoadArg::LoadArg()
02019e94 00000058 W rio::FileDevice::LoadArg::LoadArg()
02019eec 00000028 W std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int)
02019f14 00000024 W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
02019f38 00000034 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_deallocate_buckets()
02019f6c 00000028 W std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> >::deallocate(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true>*, unsigned int)
02019f94 00000024 W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true>*)
02019fb8 00000048 W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true>*)
0201a000 0000004c W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true>*)
0201a04c 00000050 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
0201a09c 00000034 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
0201a09c 00000034 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
0201a0d0 0000005c T rio::mdl::res::ModelCacher::~ModelCacher()
0201a0d0 0000005c T rio::mdl::res::ModelCacher::~ModelCacher()
0201a12c 00000054 T rio::mdl::res::ModelCacher::destroySingleton()
0201a180 0000005c T rio::RenderBuffer::RenderBuffer()
0201a180 0000005c T rio::RenderBuffer::RenderBuffer()
0201a1dc 00000068 T rio::RenderBuffer::bindRenderTargetColor_() const
0201a244 00000038 T rio::RenderBuffer::bindRenderTargetDepth_() const
0201a27c 00000078 T rio::RenderBuffer::bind() const
0201a2f4 000000b0 T rio::RenderState::RenderState()
0201a2f4 000000b0 T rio::RenderState::RenderState()
0201a3a4 00000058 T rio::RenderTargetColor::linkNativeTexture2D(GX2Texture const*)
0201a3fc 00000058 T rio::RenderTargetDepth::linkNativeTexture2D(GX2Texture const*)
0201a454 00000058 T rio::RenderTargetColor::invalidateGPUCache() const
0201a4bc 00000058 T rio::RenderTargetDepth::invalidateGPUCache() const
0201a524 00000054 T rio::RenderTargetColor::RenderTargetColor()
0201a524 00000054 T rio::RenderTargetColor::RenderTargetColor()
0201a578 00000084 T rio::RenderTargetColor::initRegs_() const
0201a61c 0000005c T rio::RenderTargetColor::bind(unsigned int) const
0201a688 00000024 W rio::RenderTargetColor::bind() const
0201a6ac 0000006c T rio::RenderTargetDepth::RenderTargetDepth()
0201a6ac 0000006c T rio::RenderTargetDepth::RenderTargetDepth()
0201a728 00000094 T rio::RenderTargetDepth::initRegs_() const
0201a7dc 0000004c T rio::RenderTargetDepth::bind() const
0201a838 000000e0 T rio::TextureFormatUtil::isUsableAsRenderTargetColor(rio::TextureFormat)
0201a918 00000058 T rio::TextureFormatUtil::isUsableAsRenderTargetDepth(rio::TextureFormat)
0201a970 0000003c T rio::TextureFormatUtil::hasStencil(rio::TextureFormat)
0201a9ac 00000014 T rio::TextureFormatUtil::getDefaultCompMap(rio::TextureFormat)
0201a9c0 000001bc T rio::RenderState::apply() const
0201ac0c 00000080 T rio::RenderState::applyDepthAndStencilTest() const
0201acac 00000064 T rio::RenderState::applyColorMask() const
0201ad20 000000a0 T rio::RenderState::applyBlendAndFastZ() const
0201ade0 00000064 T rio::RenderState::applyCullingAndPolygonModeAndPolygonOffset() const
0201ae54 00000088 t (anonymous namespace)::GX2GetVertexAttribVar(GX2VertexShader const*, char const*)
0201aedc 00000088 t (anonymous namespace)::GX2GetPixelSamplerVar(GX2PixelShader const*, char const*)
0201af64 00000088 t GX2GetVertexUniformVar
0201afec 00000088 t GX2GetPixelUniformVar
0201b074 00000074 W rio::FileDeviceMgr::load(rio::FileDevice::LoadArg&)
0201b108 00000018 T rio::Shader::initialize_()
0201b120 000000e4 T rio::Shader::unload()
0201b214 0000009c T rio::Shader::setShaderMode(rio::Shader::ShaderMode, bool)
0201b2d0 0000007c T rio::Shader::bind(bool) const
0201b37c 00000080 T rio::Shader::getVertexAttribLocation(char const*) const
0201b40c 00000080 T rio::Shader::getFragmentSamplerLocation(char const*) const
0201b49c 00000080 T rio::Shader::getVertexUniformLocation(char const*) const
0201b52c 00000080 T rio::Shader::getFragmentUniformLocation(char const*) const
0201b5bc 0000007c T rio::Shader::setUniform(rio::BaseVec4<float> const&, unsigned int, unsigned int)
0201b658 00000044 T rio::Shader::setUniform(float, unsigned int, unsigned int)
0201b69c 00000048 T rio::Shader::setUniform(rio::BaseVec3<float> const&, unsigned int, unsigned int)
0201b6e4 0000007c T rio::Shader::setUniform(rio::BaseVec4<int> const&, unsigned int, unsigned int)
0201b780 00000038 T rio::Shader::setUniform(int, unsigned int, unsigned int)
0201b7b8 000000ec T rio::Shader::setUniformColumnMajor(rio::BaseMtx33<float> const&, unsigned int, unsigned int)
0201b8c4 00000108 T rio::Shader::setUniform(rio::BaseMtx44<float> const&, unsigned int, unsigned int)
0201b9ec 00000084 T rio::Shader::setUniformColumnMajor(rio::BaseMtx44<float> const&, unsigned int, unsigned int)
0201ba90 00000268 T rio::Shader::load(char const*, rio::Shader::ShaderMode)
0201bd08 00000058 T rio::Texture2D::createHandle_()
0201bd70 00000220 T rio::Texture2D::Texture2D(rio::TextureFormat, unsigned int, unsigned int, unsigned int)
0201bd70 00000220 T rio::Texture2D::Texture2D(rio::TextureFormat, unsigned int, unsigned int, unsigned int)
0201bfd0 00000064 T rio::Texture2D::~Texture2D()
0201bfd0 00000064 T rio::Texture2D::~Texture2D()
0201c034 00000078 W rio::TextureSampler2D::init_()
0201c0ac 0000003c T rio::TextureSampler2D::TextureSampler2D()
0201c0ac 0000003c T rio::TextureSampler2D::TextureSampler2D()
0201c0f8 00000004 T rio::TextureSampler2D::~TextureSampler2D()
0201c0f8 00000004 T rio::TextureSampler2D::~TextureSampler2D()
0201c0fc 00000058 T rio::TextureSampler2D::updateFilter_() const
0201c174 00000030 T rio::TextureSampler2D::updateWrap_() const
0201c1b4 00000130 T rio::TextureSampler2D::updateBorderColor_() const
0201c2f4 00000030 T rio::TextureSampler2D::updateLOD_() const
0201c334 00000028 T rio::TextureSampler2D::updateDepthComp_() const
0201c36c 000000ac W rio::TextureSampler2D::update() const
0201c418 000000d0 T rio::TextureSampler2D::bindFS(unsigned int, unsigned int) const
0201c528 00000040 T rio::VertexArray::~VertexArray()
0201c528 00000040 T rio::VertexArray::~VertexArray()
0201c568 00000094 T rio::VertexArray::initialize()
0201c5fc 000001ac T rio::VertexArray::process()
0201c7e8 00000088 T rio::VertexBuffer::VertexBuffer(unsigned int)
0201c7e8 00000088 T rio::VertexBuffer::VertexBuffer(unsigned int)
0201c880 00000004 T rio::VertexBuffer::~VertexBuffer()
0201c880 00000004 T rio::VertexBuffer::~VertexBuffer()
0201c884 0000002c T rio::VertexBuffer::invalidateCache(void const*, unsigned int)
0201c8c0 00000308 T rio::VertexStream::setLayout(unsigned char, rio::VertexStream::Format, unsigned int)
0201cbd8 00000010 T rio::Vector2<float>::squaredLength() const
0201cbe8 00000024 T rio::Vector3<float>::setSub(rio::Vector3<float> const&, rio::Vector3<float> const&)
0201cc0c 00000024 T rio::Vector3<float>::setMul(rio::Vector3<float> const&, rio::Vector3<float> const&)
0201cc30 0000001c T rio::Vector3<float>::setScale(rio::Vector3<float> const&, float)
0201cc4c 0000001c T rio::Vector3<float>::squaredLength() const
0201cc68 00000024 T rio::Vector3<float>::dot(rio::Vector3<float> const&) const
0201cc8c 0000003c T rio::Vector3<float>::setCross(rio::Vector3<float> const&, rio::Vector3<float> const&)
0201ccc8 0000002c T rio::ITask::ITask(char const*)
0201ccc8 0000002c T rio::ITask::ITask(char const*)
0201ccf4 00000098 T rio::TaskMgr::createSingleton()
0201cd8c 00000040 T rio::TaskMgr::destroySingleton()
0201cdcc 00000048 W rio::TListNode<rio::ITask*>::erase()
0201ce14 00000058 W rio::TList<rio::ITask*>::pushBack(rio::TListNode<rio::ITask*>*)
0201ce6c 000001dc T rio::TaskMgr::changeTaskState_(rio::ITask*, rio::ITask::State)
0201d058 00000090 T rio::TaskMgr::destroyTask(rio::ITask*)
0201d0e8 00000104 T rio::TaskMgr::calc()
0201d1ec 00000044 t ImMin(ImVec2 const&, ImVec2 const&)
0201d230 0000004c t ImMax(ImVec2 const&, ImVec2 const&)
0201d27c 00000064 t ImClamp(ImVec2 const&, ImVec2 const&, ImVec2)
0201d2e0 0000004c t ImLerp(ImVec2 const&, ImVec2 const&, ImVec2 const&)
0201d32c 00000080 t ImTrunc(ImVec2 const&)
0201d3ac 000000bc t ImFloor(float)
0201d468 00000054 t ImFloor(ImVec2 const&)
0201d4bc 0000004c t LowerBound(ImVector<ImGuiStorage::ImGuiStoragePair>&, unsigned int)
0201d508 00000014 t ApplyHoverFlagsForTooltip(int, int)
0201d51c 00000130 t ScaleWindow(ImGuiWindow*, float)
0201d64c 0000002c t IsWindowActiveAndVisible(ImGuiWindow*)
0201d678 00000040 t ChildWindowComparer(void const*, void const*)
0201d6b8 00000084 t SetWindowConditionAllowFlags(ImGuiWindow*, int, bool)
0201d73c 00000024 t GetWindowForTitleAndMenuHeight(ImGuiWindow*)
0201d760 00000200 t CalcWindowContentSizes(ImGuiWindow*, ImVec2*, ImVec2*)
0201d960 00000040 t GetWindowBgColorIdx(ImGuiWindow*)
0201d9a0 00000038 t GetCombinedRootWindow(ImGuiWindow*, bool, bool)
0201d9d8 00000040 t CalcScrollEdgeSnap(float, float, float, float, float)
0201da18 00000050 t ImGetDirQuadrantFromDelta(float, float)
0201da68 00000044 t ImGui::NavSaveLastChildNavWindowIntoParent(ImGuiWindow*)
0201daac 00000078 t ImGui::GetWindowAlwaysWantOwnViewport(ImGuiWindow*)
0201db24 0000003c t DockNodeComparerDepthMostFirst(void const*, void const*)
0201db60 00000038 t ImGui::DockContextQueueNotifyRemovedNode(ImGuiContext*, ImGuiDockNode*)
0201db98 00000028 t DockNodeHideWindowDuringHostWindowCreation(ImGuiWindow*)
0201dbc0 00000084 t ImGui::DockNodeUpdateHasCentralNodeChild(ImGuiDockNode*)
0201dc44 000000ac t ImGui::DockNodeUpdateVisibleFlag(ImGuiDockNode*)
0201dcf0 00000038 t DockNodeSetupHostWindow(ImGuiDockNode*, ImGuiWindow*)
0201dd28 00000060 t TabItemComparerByDockOrder(void const*, void const*)
0201dd88 000000d0 t IsDockNodeTitleBarHighlighted(ImGuiDockNode*, ImGuiDockNode*)
0201de58 0000019c t ImGui::DockNodeCalcTabBarLayout(ImGuiDockNode const*, ImRect*, ImRect*, ImVec2*, ImVec2*)
0201dff4 0000005c t ImGui::DockNodeTreeFindFallbackLeafNode(ImGuiDockNode*)
0201e050 0000001c t GetClipboardTextFn_DefaultImpl(void*)
0201e06c 00000004 t SetPlatformImeDataFn_DefaultImpl(ImGuiViewport*, ImGuiPlatformImeData*)
0201e070 0000005c t ImGui::NavUpdateAnyRequestFlag()
0201e0cc 000000ec t CalcRoutingScore(ImGuiWindow*, unsigned int, int)
0201e1b8 00000068 t GetMouseSourceName(ImGuiMouseSource)
0201e220 0000008c t ImGui::DockNodeMoveChildNodes(ImGuiDockNode*, ImGuiDockNode*)
0201e2ac 00000124 t DockNodeFindInfo(ImGuiDockNode*, ImGuiDockNodeTreeInfo*)
0201e3d0 00000148 t GetResizeBorderRect(ImGuiWindow*, int, float, float)
0201e518 0000006c t ImGui::DockNodeFindWindowByID(ImGuiDockNode*, unsigned int)
0201e584 00000020 t FreeWrapper(void*, void*)
0201e5a4 00000020 t MallocWrapper(unsigned int, void*)
0201e5c4 00000210 t WindowSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
0201e7d4 00000080 t ImGui::NavRestoreLastChildNavWindow(ImGuiWindow*)
0201e854 00000040 t ImGui::DockSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
0201e894 000000dc t GetFallbackWindowNameForWindowingList(ImGuiWindow*)
0201e970 00000100 t AddWindowToDrawData(ImGuiWindow*, int)
0201ea70 00000028 t AddRootWindowToDrawData(ImGuiWindow*)
0201ea98 00000040 W ImVec2::operator[](unsigned int)
0201ead8 00000294 t CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow*)
0201ed6c 00000324 t ImGui::DockNodeCalcSplitRects(ImVec2&, ImVec2&, ImVec2&, ImVec2&, int, ImVec2)
0201f090 00000890 t ImGui::DockNodeTreeUpdatePosSize(ImGuiDockNode*, ImVec2, ImVec2, ImGuiDockNode*)
0201f920 00000040 W ImVec2::operator[](unsigned int) const
0201f960 000001c0 t FindBestWheelingWindow(ImVec2 const&)
0201fb20 00000064 W ImGuiPayload::Clear()
0201fb84 0000005c W ImGuiPayload::IsDataType(char const*) const
0201fbe0 0000001c W ImDrawListSplitter::ImDrawListSplitter()
0201fbe0 0000001c W ImDrawListSplitter::ImDrawListSplitter()
0201fbfc 000000b4 W ImDrawList::ImDrawList(ImDrawListSharedData*)
0201fbfc 000000b4 W ImDrawList::ImDrawList(ImDrawListSharedData*)
0201fcb0 00000040 W ImDrawList::PathFillConvex(unsigned int)
0201fcf0 00000044 W ImDrawList::PathStroke(unsigned int, int, float)
0201fd34 00000050 W ImGuiViewport::ImGuiViewport()
0201fd34 00000050 W ImGuiViewport::ImGuiViewport()
0201fd84 00000044 W ImGuiViewport::~ImGuiViewport()
0201fd84 00000044 W ImGuiViewport::~ImGuiViewport()
0201fdc8 00000044 W ImGuiViewport::GetCenter() const
0201fe0c 00000044 W ImGuiPlatformIO::ImGuiPlatformIO()
0201fe0c 00000044 W ImGuiPlatformIO::ImGuiPlatformIO()
0201fe50 00000060 W ImGuiPlatformMonitor::ImGuiPlatformMonitor()
0201fe50 00000060 W ImGuiPlatformMonitor::ImGuiPlatformMonitor()
0201feb0 00000044 W ImRect::GetCenter() const
0201fef4 00000150 t NavBiasScoringRect(ImRect&, ImVec2&, int, int)
02020044 0000006c W ImRect::Contains(ImVec2 const&) const
020200b0 00000574 t ImGui::DockNodeCalcDropRectsAndTestMousePos(ImRect const&, int, ImRect&, bool, ImVec2*)
02020624 00000590 t ImGui::DockNodePreviewDockSetup(ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, ImGuiDockNode*, ImGuiDockPreviewData*, bool, bool)
02020bb4 00000154 t ImGui::DockNodeTreeFindVisibleNodeByPos(ImGuiDockNode*, ImVec2)
02020d08 0000007c W ImRect::Contains(ImRect const&) const
02020d84 00000084 W ImRect::ContainsWithPad(ImVec2 const&, ImVec2 const&) const
02020e08 0000006c W ImRect::Overlaps(ImRect const&) const
02020e74 00000054 W ImRect::Add(ImRect const&)
02020ec8 00000044 W ImRect::Expand(ImVec2 const&)
02020f0c 00000044 W ImRect::Translate(ImVec2 const&)
02020f50 000000f4 t TranslateWindow(ImGuiWindow*, ImVec2 const&)
02021044 00000054 W ImRect::ClipWith(ImRect const&)
02021098 0000007c W ImRect::ClipWithFull(ImRect const&)
02021114 00000580 t ImGui::NavScoreItem(ImGuiNavItemData*)
02021694 0000001c W ImDrawDataBuilder::ImDrawDataBuilder()
02021694 0000001c W ImDrawDataBuilder::ImDrawDataBuilder()
020216b0 00000058 W ImGuiComboPreviewData::ImGuiComboPreviewData()
020216b0 00000058 W ImGuiComboPreviewData::ImGuiComboPreviewData()
02021708 00000018 W ImGuiInputTextDeactivatedState::ImGuiInputTextDeactivatedState()
02021708 00000018 W ImGuiInputTextDeactivatedState::ImGuiInputTextDeactivatedState()
02021720 00000050 W ImGuiInputTextState::ImGuiInputTextState()
02021720 00000050 W ImGuiInputTextState::ImGuiInputTextState()
02021770 00000058 W ImGuiPopupData::ImGuiPopupData()
02021770 00000058 W ImGuiPopupData::ImGuiPopupData()
020217c8 000000a0 W ImGuiNextWindowData::ImGuiNextWindowData()
020217c8 000000a0 W ImGuiNextWindowData::ImGuiNextWindowData()
02021868 00000060 W ImGuiLastItemData::ImGuiLastItemData()
02021868 00000060 W ImGuiLastItemData::ImGuiLastItemData()
020218c8 00000040 W ImGuiTypingSelectState::ImGuiTypingSelectState()
020218c8 00000040 W ImGuiTypingSelectState::ImGuiTypingSelectState()
02021908 00000050 W ImGuiDockContext::ImGuiDockContext()
02021908 00000050 W ImGuiDockContext::ImGuiDockContext()
02021958 00000074 W ImGuiViewportP::CalcWorkRectSize(ImVec2 const&, ImVec2 const&) const
020219cc 0000006c W ImGuiViewportP::UpdateWorkRect()
02021a38 00000058 W ImGuiWindowSettings::ImGuiWindowSettings()
02021a38 00000058 W ImGuiWindowSettings::ImGuiWindowSettings()
02021a90 00000034 W ImGuiIDStackTool::ImGuiIDStackTool()
02021a90 00000034 W ImGuiIDStackTool::ImGuiIDStackTool()
02021ac4 00000054 W ImGuiWindow::TitleBarHeight() const
02021b18 0000008c W ImGuiWindow::TitleBarRect() const
02021ba4 0000005c W ImGuiWindow::MenuBarHeight() const
02021c00 00000118 t CalcWindowMinSize(ImGuiWindow*)
02021d18 00000224 t CalcWindowSizeAfterConstraint(ImGuiWindow*, ImVec2 const&)
02021f3c 00000180 t CalcResizePosSizeFromAnyCorner(ImGuiWindow*, ImVec2 const&, ImVec2 const&, ImVec2*, ImVec2*)
020220bc 00000088 W ImGuiWindow::MenuBarRect() const
02022144 0000003c W ImGui::WindowRectAbsToRel(ImGuiWindow*, ImRect const&)
02022180 000000d4 t ImGui::NavApplyItemToResult(ImGuiNavItemData*)
02022254 0000003c W ImGui::WindowRectRelToAbs(ImGuiWindow*, ImRect const&)
02022290 00000078 W ImGui::IsNamedKeyOrModKey(ImGuiKey)
02022308 00000074 W ImGui::ConvertSingleModFlagToKey(ImGuiContext*, ImGuiKey)
0202237c 0000003c W ImGui::MouseButtonToKey(int)
020223b8 0000007c W ImGui::GetKeyOwnerData(ImGuiContext*, ImGuiKey)
02022434 00000294 T ImGuiStyle::ImGuiStyle()
02022434 00000294 T ImGuiStyle::ImGuiStyle()
020226c8 000005ac T ImGuiStyle::ScaleAllSizes(float)
02022c74 00000208 T ImGuiIO::ImGuiIO()
02022c74 00000208 T ImGuiIO::ImGuiIO()
02022e7c 00000058 T ImStrncpy(char*, char const*, unsigned int)
02022ed4 0000002c T ImStrchrRange(char const*, char const*, char)
02022f00 00000044 T ImStreolRange(char const*, char const*)
02022f44 00000024 T ImStrSkipBlank(char const*)
02022f68 000000c0 T ImFormatString(char*, unsigned int, char const*, ...)
02023028 00000048 t ImGui::DockNodeGetHostWindowTitle(ImGuiDockNode*, char*, int)
02023070 0000005c T ImFormatStringV(char*, unsigned int, char const*, __va_list_tag*)
020230cc 000001c0 T ImFormatStringToTempBufferV(char const**, char const**, char const*, __va_list_tag*)
0202328c 00000048 T ImHashData(void const*, unsigned int, unsigned int)
020232d4 000000fc T ImHashStr(char const*, unsigned int, unsigned int)
020233d0 00000020 T ImFileOpen(char const*, char const*)
020233f0 00000028 T ImFileClose(__sFILE*)
02023418 000000d8 T ImFileGetSize(__sFILE*)
020234f0 00000034 T ImFileRead(void*, unsigned long long, unsigned long long, __sFILE*)
02023524 00000034 T ImFileWrite(void const*, unsigned long long, unsigned long long, __sFILE*)
02023558 000001b4 T ImTextCharFromUtf8(unsigned int*, char const*, char const*)
0202370c 00000034 T ImTextCountUtf8BytesFromChar(char const*, char const*)
02023740 000000a0 T ImGui::ColorConvertU32ToFloat4(unsigned int)
020237e0 00000194 T ImGui::ColorConvertFloat4ToU32(ImVec4 const&)
02023974 00000070 T ImGuiStorage::GetInt(unsigned int, int) const
020239e4 00000070 T ImGuiStorage::GetVoidPtr(unsigned int) const
02023a54 00000044 T ImGui::GetStyle()
02023a98 00000070 T ImGui::GetColorU32(int, float)
02023b08 000003b0 t ImGui::RenderWindowOuterBorders(ImGuiWindow*)
02023eb8 00000020 T ImGui::GetStyleColorVec4(int)
02023ed8 000000a8 T ImGui::GetColorU32(unsigned int)
02023f80 00000048 T ImGui::GetStyleVarInfo(int)
02023fc8 00000044 T ImGui::FindRenderedTextEnd(char const*, char const*)
0202400c 00000170 T ImGui::RenderFrame(ImVec2, ImVec2, unsigned int, bool, float)
0202417c 00000144 T ImGui::RenderFrameBorder(ImVec2, ImVec2, float)
020242c0 00000224 T ImGui::RenderNavHighlight(ImRect const&, unsigned int, int)
020244e4 0000000c T ImGui::GetCurrentContext()
020244f0 0000000c T ImGui::SetCurrentContext(ImGuiContext*)
020244fc 00000088 T ImGui::CallContextHooks(ImGuiContext*, ImGuiContextHookType)
02024584 000000a4 W ImGuiWindowTempData::ImGuiWindowTempData()
02024584 000000a4 W ImGuiWindowTempData::ImGuiWindowTempData()
02024628 0000003c T ImGui::SetHoveredID(unsigned int)
02024664 00000034 T ImGui::KeepAliveID(unsigned int)
02024698 00000098 T ImGui::MarkItemEdited(unsigned int)
02024730 0000008c T ImGui::IsClippedEx(ImRect const&, unsigned int)
020247bc 00000048 T ImGui::SetLastItemData(unsigned int, int, int, ImRect const&)
02024804 0000007c T ImGui::CalcWrapWidthForPos(ImVec2 const&, float)
02024880 000000a0 T ImGui::DebugAllocHook(ImGuiDebugAllocInfo*, int, void*, unsigned int)
02024920 00000074 T ImGui::MemAlloc(unsigned int)
02024994 0000004c T ImStrdup(char const*)
020249e0 00000070 t ImGui::DockNodeAddTabBar(ImGuiDockNode*)
02024a50 00000178 t GetViewportBgFgDrawList(ImGuiViewportP*, unsigned int, char const*)
02024bc8 0000006c T ImGui::MemFree(void*)
02024c34 000000ac T ImStrdupcpy(char*, unsigned int*, char const*)
02024ce0 00000180 T ImFileLoadToMemory(char const*, char const*, unsigned int*, int)
02024e60 0000003c W ImDrawListSplitter::~ImDrawListSplitter()
02024e60 0000003c W ImDrawListSplitter::~ImDrawListSplitter()
02024e9c 00000058 W ImGuiInputTextState::~ImGuiInputTextState()
02024e9c 00000058 W ImGuiInputTextState::~ImGuiInputTextState()
02024ef4 00000094 W ImDrawList::~ImDrawList()
02024ef4 00000094 W ImDrawList::~ImDrawList()
02024f88 00000080 W ImDrawData::ImDrawData()
02024f88 00000080 W ImDrawData::ImDrawData()
02025008 00000110 W ImGuiViewportP::ImGuiViewportP()
02025008 00000110 W ImGuiViewportP::ImGuiViewportP()
02025118 00000048 W ImGuiPlatformIO::~ImGuiPlatformIO()
02025118 00000048 W ImGuiPlatformIO::~ImGuiPlatformIO()
02025160 00000048 W ImGuiKeyRoutingTable::~ImGuiKeyRoutingTable()
02025160 00000048 W ImGuiKeyRoutingTable::~ImGuiKeyRoutingTable()
020251a8 00000058 W ImGuiDockContext::~ImGuiDockContext()
020251a8 00000058 W ImGuiDockContext::~ImGuiDockContext()
02025200 00000058 W ImGuiWindowTempData::~ImGuiWindowTempData()
02025200 00000058 W ImGuiWindowTempData::~ImGuiWindowTempData()
02025258 00000060 W ImGuiTable::~ImGuiTable()
02025258 00000060 W ImGuiTable::~ImGuiTable()
020252b8 00000040 T ImGui::SetClipboardText(char const*)
020252f8 00000044 T ImGui::GetIO()
0202533c 0000002c T ImGui::GetBackgroundDrawList(ImGuiViewport*)
02025368 0000002c T ImGui::GetForegroundDrawList(ImGuiViewport*)
02025394 0000042c T ImGui::RenderMouseCursor(ImVec2, float, int, unsigned int, unsigned int, unsigned int)
020257c0 00000030 T ImGui::GetForegroundDrawList()
020257f0 000000e4 T ImGui::CalcTextSize(char const*, char const*, bool, float)
020258d4 00000280 T ImGui::RenderTextClippedEx(ImDrawList*, ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
02025b54 00000034 T ImGui::IsItemActive()
02025b88 00000068 T ImGui::IsItemFocused()
02025bf0 00000030 T ImGui::FindWindowByID(unsigned int)
02025c20 0000002c T ImGui::FindWindowByName(char const*)
02025c4c 000000e0 T ImGui::UpdateWindowParentAndRootLinks(ImGuiWindow*, int, ImGuiWindow*)
02025d2c 00000048 W ImGuiWindowStackData::ImGuiWindowStackData()
02025d2c 00000048 W ImGuiWindowStackData::ImGuiWindowStackData()
02025d74 0000012c T ImGui::SetCurrentFont(ImFont*)
02025ea0 00000088 T ImGui::IsWindowChildOf(ImGuiWindow*, ImGuiWindow*, bool, bool)
02025f28 00000038 T ImGui::IsWindowWithinBeginStackOf(ImGuiWindow*, ImGuiWindow*)
02025f60 000000f0 T ImGui::IsWindowContentHoverable(ImGuiWindow*, int)
02026050 000000f4 T ImGui::FindBlockingModal(ImGuiWindow*)
02026144 00000040 T ImGui::IsWindowNavFocusable(ImGuiWindow*)
02026184 0000002c T ImGui::SetWindowCollapsed(ImGuiWindow*, bool, int)
020261b0 000000c0 T ImGui::SetWindowHitTestHole(ImGuiWindow*, ImVec2 const&, ImVec2 const&)
02026270 00000014 T ImGui::SetWindowHiddendAndSkipItemsForCurrentFrame(ImGuiWindow*)
02026284 00000090 T ImGui::SetNextWindowPos(ImVec2 const&, int, ImVec2 const&)
02026314 00000078 T ImGui::SetNextWindowSize(ImVec2 const&, int)
0202638c 00000068 T ImGui::SetNextWindowSizeConstraints(ImVec2 const&, ImVec2 const&, void (*)(ImGuiSizeCallbackData*), void*)
020263f4 0000006c T ImGui::SetNextWindowCollapsed(bool, int)
02026460 0000001c T ImGui::SetNextWindowBgAlpha(float)
0202647c 0000001c T ImGui::SetNextWindowViewport(unsigned int)
02026498 0000008c T ImGui::SetNextWindowClass(ImGuiWindowClass const*)
02026524 0000009c T ImGui::GetKeyData(ImGuiContext*, ImGuiKey)
020265c0 00000078 t UpdateAliasKey(ImGuiKey, bool, float)
02026638 000000d4 T ImGui::GetKeyName(ImGuiKey)
0202670c 000000c8 T ImGui::CalcTypematicRepeatAmount(float, float, float, float)
020267d4 00000088 T ImGui::GetTypematicRepeatRate(int, float*, float*)
0202685c 0000007c T ImGui::GetKeyPressedAmount(ImGuiKey, float, float)
020268d8 000000b0 T ImGui::GetKeyMagnitude2d(ImGuiKey, ImGuiKey, ImGuiKey, ImGuiKey)
02026988 000000c4 T ImGui::IsMouseHoveringRect(ImVec2 const&, ImVec2 const&, bool)
02026a4c 0000007c T ImGui::IsMouseDragPastThreshold(int, float)
02026ac8 00000074 T ImGui::IsMouseDragging(int, float)
02026b3c 0000003c T ImGui::TeleportMousePos(ImVec2 const&)
02026b78 000000a0 T ImGui::IsMousePosValid(ImVec2 const*)
02026c18 000001d4 t ImGui::NavCalcPreferredRefPos()
02026dec 0000054c t ImGui::UpdateMouseInputs()
02027338 00000038 T ImGui::IsAnyMouseDown()
02027370 00000010 T ImGui::SetMouseCursor(int)
02027380 000000dc T ImGui::TestKeyOwner(ImGuiKey, unsigned int)
0202745c 00000064 T ImGui::IsKeyDown(ImGuiKey, unsigned int)
020274c0 00000024 T ImGui::IsKeyDown(ImGuiKey)
020274e4 00000084 t GetMergedModsFromKeys()
02027568 00000128 T ImGui::IsKeyPressed(ImGuiKey, unsigned int, int)
02027690 00000038 T ImGui::IsKeyPressed(ImGuiKey, bool)
020276c8 00000084 T ImGui::IsKeyReleased(ImGuiKey, unsigned int)
0202774c 00000024 T ImGui::IsKeyReleased(ImGuiKey)
02027770 0000007c T ImGui::IsMouseDown(int)
020277ec 0000008c T ImGui::IsMouseDown(int, unsigned int)
02027878 00000158 T ImGui::IsMouseClicked(int, unsigned int, int)
020279d0 00000038 T ImGui::IsMouseClicked(int, bool)
02027a08 0000007c T ImGui::IsMouseReleased(int)
02027a84 0000008c T ImGui::IsMouseReleased(int, unsigned int)
02027b10 000000ec T ImGui::SetKeyOwner(ImGuiKey, unsigned int, int)
02027bfc 000000e0 T ImGui::SetKeyOwnersForKeyChord(int, unsigned int, int)
02027cdc 000000a0 T ImGui::IsKeyChordPressed(int, unsigned int, int)
02027d7c 0000018c T ImGui::DebugCheckVersionAndDataLayout(char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
02027f08 00000078 T ImGui::ErrorCheckUsingSetCursorPosToExtendParentBoundaries()
02027f80 00000050 T ImGuiStackSizes::SetToContextState(ImGuiContext*)
02027fd0 00000208 T ImGuiStackSizes::CompareWithContextState(ImGuiContext*)
020281d8 000000bc T ImGui::SameLine(float, float)
02028294 000001dc T ImGui::ItemSize(ImVec2 const&, float)
02028470 00000010 T ImGui::GetTextLineHeight()
02028480 0000001c T ImGui::GetFrameHeight()
0202849c 000000dc t ClampWindowPos(ImGuiWindow*, ImRect const&)
02028578 0000003c T ImGui::GetContentRegionMaxAbs()
020285b4 000000d4 T ImGui::CalcItemWidth()
02028688 00000170 T ImGui::CalcItemSize(ImVec2, float, float)
020287f8 00000064 T ImGui::GetContentRegionAvail()
0202885c 00000018 T ImGui::SetScrollX(ImGuiWindow*, float)
02028874 00000018 T ImGui::SetScrollY(ImGuiWindow*, float)
0202888c 000000bc T ImGui::SetScrollFromPosX(ImGuiWindow*, float, float)
02028948 000000bc T ImGui::SetScrollFromPosY(ImGuiWindow*, float, float)
02028a04 000005dc T ImGui::ScrollToRectEx(ImGuiWindow*, ImRect const&, int)
02028fe0 00000050 T ImGui::GetTopMostPopupModal()
02029030 00000094 T ImGui::GetTopMostAndVisiblePopupModal()
020290c4 000004e8 T ImGui::FindBestWindowPosForPopupEx(ImVec2 const&, ImVec2 const&, int*, ImRect const&, ImRect const&, ImGuiPopupPositionPolicy)
020295ac 00000054 T ImGui::NavClearPreferredPosForAxis(ImGuiAxis)
02029600 000000d4 T ImGui::SetNavID(unsigned int, ImGuiNavLayer, unsigned int, ImRect const&)
020296d4 00000040 T ImGui::NavUpdateCurrentWindowIsScrollPushableX()
02029714 00000048 T ImGui::NavMoveRequestButNoResultYet()
0202975c 00000148 T ImGui::NavMoveRequestSubmit(int, int, int, int)
020298a4 00000198 t ImGui::NavUpdateCreateTabbingRequest()
02029a3c 00000034 T ImGui::NavMoveRequestResolveWithLastItem(ImGuiNavItemData*)
02029a70 00000224 t ImGui::NavProcessItemForTabbingRequest(unsigned int, int, int)
02029c94 00000034 T ImGui::NavMoveRequestCancel()
02029cc8 00000064 T ImGui::SetActiveIdUsingAllKeyboardKeys()
02029d2c 000000a8 T ImGui::NavMoveRequestForward(int, int, int, int)
02029dd4 00000254 t ImGui::NavUpdateCreateWrappingRequest()
0202a028 0000007c T ImGui::NavMoveRequestTryWrapping(ImGuiWindow*, int)
0202a0a4 00000020 T ImGui::NavRestoreHighlightAfterMove()
0202a0c4 000001a4 T ImGui::BeginDragDropTargetCustom(ImRect const&, unsigned int)
0202a268 00000034 T ImGui::IsDragDropPayloadBeingAccepted()
0202a29c 0000011c T ImGui::RenderDragDropTargetRect(ImRect const&)
0202a3b8 00000250 T ImGui::AcceptDragDropPayload(char const*, int)
0202a608 00000038 T ImGui::GetDragDropPayload()
0202a640 00000014 T ImGui::LogSetNextTextDecoration(char const*, char const*)
0202a654 0000002c T ImGui::MarkIniSettingsDirty()
0202a680 00000038 T ImGui::MarkIniSettingsDirty(ImGuiWindow*)
0202a6b8 00000194 T ImGui::SetWindowPos(ImGuiWindow*, ImVec2 const&, int)
0202a84c 000001f4 T ImGui::SetWindowSize(ImGuiWindow*, ImVec2 const&, int)
0202aa40 00000084 t ImGui::DockNodeApplyPosSizeToWindows(ImGuiDockNode*)
0202aac4 00000070 T ImGui::FindSettingsHandler(char const*)
0202ab34 00000040 T ImGui::LocalizeRegisterEntries(ImGuiLocEntry const*, int)
0202ab74 00000048 T ImGui::FindViewportByID(unsigned int)
0202abbc 0000007c T ImGui::SetCurrentViewport(ImGuiWindow*, ImGuiViewportP*)
0202ac38 00000054 T ImGui::SetWindowViewport(ImGuiWindow*, ImGuiViewportP*)
0202ac8c 00000184 T ImGui::TranslateWindowsInViewport(ImGuiViewportP*, ImVec2 const&, ImVec2 const&)
0202ae10 0000009c T ImGui::ScaleWindowsInViewport(ImGuiViewportP*, float)
0202aeac 000000e8 T ImGui::FindHoveredViewportFromPlatformWindowStack(ImVec2 const&)
0202af94 00000058 W ImGuiDockNodeSettings::ImGuiDockNodeSettings()
0202af94 00000058 W ImGuiDockNodeSettings::ImGuiDockNodeSettings()
0202afec 00000024 T ImGui::DockContextFindNodeByID(ImGuiContext*, unsigned int)
0202b010 00000054 T ImGui::DockContextGenNodeID(ImGuiContext*)
0202b064 00000140 T ImGuiDockNode::ImGuiDockNode(unsigned int)
0202b064 00000140 T ImGuiDockNode::ImGuiDockNode(unsigned int)
0202b1a4 000000d0 W ImGuiDockPreviewData::ImGuiDockPreviewData()
0202b1a4 000000d0 W ImGuiDockPreviewData::ImGuiDockPreviewData()
0202b274 0000005c T ImGui::GetWindowAlwaysWantOwnTabBar(ImGuiWindow*)
0202b2d0 00000160 T ImGui::DebugLocateItemResolveWithLastItem()
0202b430 00000040 W ImVector<char>::front() const
0202b470 00000050 W ImVector<char>::clear()
0202b4c0 00000050 t WindowSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
0202b510 00000078 W ImVector<char>::reserve(int)
0202b588 00000050 W ImVector<ImGuiStorage::ImGuiStoragePair>::clear()
0202b5d8 00000050 W ImVector<unsigned int>::operator[](int)
0202b628 00000050 W ImVector<unsigned int>::clear()
0202b678 00000050 W ImVector<int>::clear()
0202b6c8 00000050 W ImVector<int>::operator[](int)
0202b718 00000050 W ImVector<unsigned short>::operator[](int)
0202b768 0000004c W ImVector<char>::operator[](int)
0202b7b4 00000050 W ImVector<unsigned short>::clear()
0202b804 00000050 W ImVector<ImGuiKeyRoutingData>::clear()
0202b854 00000058 W ImGuiKeyRoutingTable::Clear()
0202b8ac 0000007c W ImGuiKeyRoutingTable::ImGuiKeyRoutingTable()
0202b8ac 0000007c W ImGuiKeyRoutingTable::ImGuiKeyRoutingTable()
0202b928 0000003c W void IM_DELETE<ImDrawList>(ImDrawList*)
0202b964 00000070 W ImGuiViewportP::~ImGuiViewportP()
0202b964 00000070 W ImGuiViewportP::~ImGuiViewportP()
0202b9d4 00000050 W ImVector<ImFont*>::operator[](int)
0202ba24 00000044 W ImGui::GetDefaultFont()
0202ba68 00000064 W ImVector<ImGuiTabItem>::index_from_ptr(ImGuiTabItem const*) const
0202bacc 00000068 t ImGui::DockNodeGetTabOrder(ImGuiWindow*)
0202bb34 00000050 W ImVector<ImGuiInputEvent>::operator[](int)
0202bb84 000000a8 t FindLatestInputEvent(ImGuiContext*, ImGuiInputEventType, int)
0202bc2c 00000050 W ImVector<ImGuiStorage::ImGuiStoragePair>::operator[](int)
0202bc7c 00000194 T ImGui::DockContextEndFrame(ImGuiContext*)
0202be10 00000074 W ImVector<char>::resize(int)
0202be84 000000dc T ImGuiTextBuffer::append(char const*, char const*)
0202bf60 000000e0 T ImGuiTextBuffer::appendfv(char const*, __va_list_tag*)
0202c040 00000080 T ImGuiTextBuffer::appendf(char const*, ...)
0202c0c0 00000088 t SetClipboardTextFn_DefaultImpl(void*, char const*)
0202c148 000000bc t LogTextV(ImGuiContext&, char const*, __va_list_tag*)
0202c204 000000a4 T ImGui::LogText(char const*, ...)
0202c2a8 000001fc T ImGui::LogRenderedText(ImVec2 const*, char const*, char const*)
0202c4a4 00000118 T ImGui::RenderText(ImVec2, char const*, char const*, bool)
0202c5bc 0000011c T ImGui::RenderTextWrapped(ImVec2, char const*, char const*, float)
0202c6d8 000000e4 T ImGui::RenderTextClipped(ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
0202c7bc 00000394 T ImGui::RenderTextEllipsis(ImDrawList*, ImVec2 const&, ImVec2 const&, float, float, char const*, char const*, ImVec2 const*)
0202cb50 000000f8 T ImGui::LogFinish()
0202cc48 00000324 T ImGui::LoadIniSettingsFromMemory(char const*, unsigned int)
0202cf6c 00000068 T ImGui::LoadIniSettingsFromDisk(char const*)
0202cfd4 0000004c W ImVector<ImGuiColorMod>::back()
0202d020 00000044 W ImVector<ImGuiColorMod>::pop_back()
0202d064 000000bc T ImGui::PopStyleColor(int)
0202d120 0000004c W ImVector<ImGuiStyleMod>::back()
0202d16c 00000044 W ImVector<ImGuiStyleMod>::pop_back()
0202d1b0 000000f4 T ImGui::PopStyleVar(int)
0202d2a4 000000a8 W ImVector<char>::resize(int, char const&)
0202d34c 00000050 W ImVector<ImGuiViewportP*>::operator[](int)
0202d39c 0000004c T ImGui::GetDrawData()
0202d3e8 00000034 T ImGui::GetMainViewport()
0202d41c 000001b4 t ApplyWindowSettings(ImGuiWindow*, ImGuiWindowSettings*)
0202d5d0 0000018c t InitOrLoadWindowSettings(ImGuiWindow*, ImGuiWindowSettings*)
0202d75c 0000080c t ImGui::ErrorCheckNewFrameSanityChecks()
0202df68 00000050 W ImVector<ImVec2>::clear()
0202dfb8 00000050 W ImVector<ImGuiWindow*>::clear()
0202e008 00000048 W ImGuiTabBar::~ImGuiTabBar()
0202e008 00000048 W ImGuiTabBar::~ImGuiTabBar()
0202e050 00000050 W ImVector<ImDrawChannel>::clear()
0202e0a0 00000050 W ImVector<unsigned int>::back()
0202e0f0 00000068 T ImGuiWindow::GetIDFromRectangle(ImRect const&)
0202e158 000003b4 T ImGui::IsItemHovered(int)
0202e50c 00000050 W ImVector<ImGuiGroupData>::clear()
0202e55c 00000040 T ImGui::GcCompactTransientMiscBuffers()
0202e59c 00000050 W ImVector<float>::clear()
0202e5ec 0000006c T ImGui::GcCompactTransientWindowBuffers(ImGuiWindow*)
0202e658 0000007c W ImVector<unsigned short>::reserve(int)
0202e6d4 00000074 W ImVector<unsigned short>::resize(int)
0202e748 00000100 T ImGuiIO::ClearInputKeys()
0202e848 0000007c W ImVector<ImDrawVert>::reserve(int)
0202e8c4 0000005c T ImGui::GcAwakeTransientWindowBuffers(ImGuiWindow*)
0202e920 00000050 W ImVector<ImGuiContextHook>::operator[](int)
0202e970 000000b4 W ImVector<ImGuiContextHook>::erase(ImGuiContextHook const*)
0202ea24 00000050 W ImVector<float>::operator[](int)
0202ea74 00000050 W ImVector<ImGuiWindow*>::operator[](int)
0202eac4 000002f4 t FindHoveredWindow()
0202edb8 00000354 T ImGui::UpdateHoveredWindowAndCaptureFlags()
0202f10c 000000c4 t FindWindowNavFocusable(int, int, int)
0202f1d0 000000a4 t ImGui::FindWindowFocusIndex(ImGuiWindow*)
0202f274 00000118 t NavUpdateWindowingHighlightWindow(int)
0202f38c 0000008c t FindFrontMostVisibleChildWindow(ImGuiWindow*)
0202f418 000000ec T ImGui::IsWindowAbove(ImGuiWindow*, ImGuiWindow*)
0202f504 00000050 W ImVector<ImVec4>::back()
0202f554 0000009c T ImGui::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
0202f5f0 00000090 T ImGui::PopClipRect()
0202f680 0000004c W ImVector<ImDrawCmd>::back()
0202f6cc 00000044 W ImVector<ImDrawCmd>::pop_back()
0202f710 0000007c W ImVector<ImGuiWindow*>::reserve(int)
0202f78c 00000074 W ImVector<ImGuiWindow*>::resize(int)
0202f800 0000009c W ImVector<ImGuiWindow*>::push_back(ImGuiWindow* const&)
0202f89c 000000bc t AddWindowToSortBuffer(ImVector<ImGuiWindow*>*, ImGuiWindow*)
0202f958 000000a8 W ImVector<ImGuiWindow*>::erase(ImGuiWindow* const*)
0202fa00 00000208 t UpdateWindowInFocusOrderList(ImGuiWindow*, bool, int)
0202fc08 0000005c W ImChunkStream<ImGuiWindowSettings>::offset_from_ptr(ImGuiWindowSettings const*)
0202fc64 00000050 W ImVector<ImGuiPlatformMonitor>::operator[](int)
0202fcb4 000001d4 t ImGui::FindPlatformMonitorForRect(ImRect const&)
0202fe88 0000005c t ImGui::UpdateViewportPlatformMonitor(ImGuiViewportP*)
0202fee4 00000244 t ImGui::WindowSyncOwnedViewport(ImGuiWindow*, ImGuiWindow*)
02030128 00000284 t CalcWindowAutoFitSize(ImGuiWindow*, ImVec2 const&)
020303ac 0000006c T ImGui::CalcWindowNextAutoFitSize(ImGuiWindow*)
02030418 000000c4 t ImGui::FindPlatformMonitorForPos(ImVec2 const&)
020304dc 0000016c T ImGui::GetPopupAllowedExtentRect(ImGuiWindow*)
02030648 00000330 T ImGui::FindBestWindowPosForPopup(ImGuiWindow*)
02030978 0000004c T ImGui::GetViewportPlatformMonitor(ImGuiViewport*)
020309c4 000000f8 t FixLargeWindowsWhenUndocking(ImVec2 const&, ImGuiViewport*)
02030abc 00000050 W ImVector<ImGuiPopupData>::operator[](int)
02030b0c 0000012c T ImGui::IsPopupOpen(unsigned int, int)
02030c38 00000140 t DockNodeIsDropAllowedOne(ImGuiWindow*, ImGuiWindow*)
02030d78 000000e0 t ImGui::DockNodeIsDropAllowed(ImGuiWindow*, ImGuiWindow*)
02030e58 0000004c W ImVector<ImGuiWindowStackData>::back()
02030ea4 0000004c W ImVector<ImGuiPopupData>::back()
02030ef0 00000050 W ImVector<ImDrawCmd>::operator[](int)
02030f40 00000044 W ImVector<ImGuiPopupData>::pop_back()
02030f84 00000044 W ImVector<ImGuiWindowStackData>::pop_back()
02030fc8 00000050 W ImVector<ImGuiWindow*>::back()
02031018 000001a4 T ImGui::BringWindowToFocusFront(ImGuiWindow*)
020311bc 000000f8 T ImGui::BringWindowToDisplayFront(ImGuiWindow*)
020312b4 000002fc t ImGui::UpdateTryMergeWindowIntoHostViewport(ImGuiWindow*, ImGuiViewportP*)
020315b0 00000048 t ImGui::UpdateTryMergeWindowIntoHostViewports(ImGuiWindow*)
020315f8 00000058 W ImVector<ImGuiWindow*>::index_from_ptr(ImGuiWindow* const*) const
02031650 0000005c T ImGui::FindWindowDisplayIndex(ImGuiWindow*)
020316ac 000000d4 T ImGui::FindBottomMostVisibleWindowWithinBeginStack(ImGuiWindow*)
02031780 0000010c T ImGui::BringWindowToDisplayBehind(ImGuiWindow*, ImGuiWindow*)
0203188c 00000050 W ImVector<ImFont*>::back()
020318dc 00000050 W ImVector<int>::back()
0203192c 00000044 W ImVector<int>::pop_back()
02031970 0000007c T ImGui::PopItemFlag()
020319ec 000000ac T ImGui::EndDisabled()
02031a98 00000050 W ImVector<float>::back()
02031ae8 00000044 W ImVector<float>::pop_back()
02031b2c 00000060 T ImGui::PopItemWidth()
02031b8c 00000044 W ImVector<unsigned int>::pop_back()
02031bd0 00000090 T ImGui::PopFocusScope()
02031c60 0000005c T ImGui::PopID()
02031cbc 00000050 W ImVector<ImGuiKeyRoutingData>::operator[](int)
02031d0c 00000050 W ImBitArray<666, 0>::TestBit(int) const
02031d5c 00000058 W ImBitArray<666, 0>::SetBit(int)
02031db4 0000009c W ImVector<unsigned short>::push_back(unsigned short const&)
02031e50 000000dc W ImVector<ImGuiInputEvent>::erase(ImGuiInputEvent const*, ImGuiInputEvent const*)
02031f2c 00000050 W ImVector<unsigned char>::clear()
02031f7c 00000080 T ImGui::ClearDragDrop()
02031ffc 000000a8 T ImGui::EndDragDropTarget()
020320a4 00000098 W ImVector<char>::push_back(char const&)
0203213c 000000e4 T ImGui::SaveIniSettingsToMemory(unsigned int*)
02032220 000000a8 T ImGui::SaveIniSettingsToDisk(char const*)
020322c8 000000f0 t ImGui::UpdateSettings()
020323b8 00000060 W ImChunkStream<ImGuiWindowSettings>::alloc_chunk(unsigned int)
02032418 000000ac T ImGui::CreateNewWindowSettings(char const*)
020324c4 000000ac W ImChunkStream<ImGuiWindowSettings>::next_chunk(ImGuiWindowSettings*)
02032570 0000008c t WindowSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
020325fc 0000007c T ImGui::FindWindowSettingsByID(unsigned int)
02032678 00000090 t WindowSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
02032708 000000bc t ImGui::DockSettingsRemoveNodeReferences(unsigned int*, int)
020327c4 0000004c W ImChunkStream<ImGuiWindowSettings>::ptr_from_offset(int)
02032810 00000044 T ImGui::FindWindowSettingsByWindow(ImGuiWindow*)
02032854 00000434 t WindowSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
02032c88 000000a8 W ImVector<ImGuiViewportP*>::erase(ImGuiViewportP* const*)
02032d30 0000003c W void IM_DELETE<ImGuiViewportP>(ImGuiViewportP*)
02032d6c 00000050 W ImVector<ImGuiDockNodeSettings>::operator[](int)
02032dbc 0000008c t ImGui::DockSettingsFindNodeSettings(ImGuiContext*, unsigned int)
02032e48 00000050 W ImVector<ImGuiTabItem>::operator[](int)
02032e98 00000140 T ImGui::DockNodeWindowMenuHandler_Default(ImGuiContext*, ImGuiDockNode*, ImGuiTabBar*)
02032fd8 00000070 W ImVector<ImGuiWindow*>::find_erase(ImGuiWindow* const&)
02033048 0000003c W void IM_DELETE<ImGuiTabBar>(ImGuiTabBar*)
02033084 00000040 t ImGui::DockNodeRemoveTabBar(ImGuiDockNode*)
020330c4 000000c4 t ImGui::DockNodeHideHostWindow(ImGuiDockNode*)
02033188 00000050 T ImGuiDockNode::~ImGuiDockNode()
02033188 00000050 T ImGuiDockNode::~ImGuiDockNode()
020331d8 0000003c W void IM_DELETE<ImGuiDockNode>(ImGuiDockNode*)
02033214 0000004c W ImVector<ImGuiTabItem>::back()
02033260 00000050 W ImVector<ImGuiDockNode*>::operator[](int)
020332b0 00000050 W ImVector<ImGuiDockRequest>::clear()
02033300 00000050 W ImVector<ImGuiDockNodeSettings>::clear()
02033350 0000007c W ImVector<ImGuiDockNodeSettings>::reserve(int)
020333cc 00000074 W ImVector<ImGuiDockNodeSettings>::resize(int)
02033440 000000a4 W ImVector<ImGuiDockNodeSettings>::push_back(ImGuiDockNodeSettings const&)
020334e4 000001f4 t DockSettingsHandler_DockNodeToSettings(ImGuiDockContext*, ImGuiDockNode*, int)
020336d8 000004a4 t ImGui::DockSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
02033b7c 000004c8 t ImGui::DockSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
02034044 00000050 W ImSpan<ImGuiTableColumn>::operator[](int)
02034094 000000ac W ImChunkStream<ImGuiTableSettings>::next_chunk(ImGuiTableSettings*)
02034140 00000050 W ImVector<ImGuiStackLevelInfo>::operator[](int)
02034190 0000007c W ImVector<ImVec2>::reserve(int)
0203420c 000000a8 W ImVector<ImVec2>::push_back(ImVec2 const&)
020342b4 0000007c W ImVector<unsigned int>::reserve(int)
02034330 0000009c W ImVector<unsigned int>::push_back(unsigned int const&)
020343cc 00000044 T ImGui::PushFocusScope(unsigned int)
02034410 00000074 W ImVector<unsigned int>::resize(int)
02034484 0000007c W ImVector<ImGuiInputEvent>::reserve(int)
02034500 000000d0 W ImVector<ImGuiInputEvent>::push_back(ImGuiInputEvent const&)
020345d0 000000b8 T ImGuiIO::AddInputCharacter(unsigned int)
02034688 000000ec T ImGuiIO::AddInputCharacterUTF16(unsigned short)
02034774 000002a8 T ImGuiIO::AddKeyAnalogEvent(ImGuiKey, bool, float)
02034a1c 00000048 T ImGuiIO::AddKeyEvent(ImGuiKey, bool)
02034a64 00000168 T ImGuiIO::AddMousePosEvent(float, float)
02034bcc 00000154 T ImGuiIO::AddMouseButtonEvent(int, bool)
02034d20 00000074 W ImVector<ImGuiInputEvent>::resize(int)
02034d94 0000007c W ImVector<ImGuiStorage::ImGuiStoragePair>::reserve(int)
02034e10 00000144 W ImVector<ImGuiStorage::ImGuiStoragePair>::insert(ImGuiStorage::ImGuiStoragePair const*, ImGuiStorage::ImGuiStoragePair const&)
02034f54 00000084 T ImGuiStorage::GetIntRef(unsigned int, int)
02034fd8 00000088 T ImGuiStorage::SetVoidPtr(unsigned int, void*)
02035060 0000007c W ImVector<int>::reserve(int)
020350dc 0000009c W ImVector<int>::push_back(int const&)
02035178 0000011c T ImGuiTextIndex::append(char const*, int, int)
02035294 00000104 T ImGui::DebugLogV(char const*, __va_list_tag*)
02035398 00000084 T ImGui::DebugLog(char const*, ...)
0203541c 000001f8 T ImGui::SetActiveID(unsigned int, ImGuiWindow*)
02035614 00000028 T ImGui::ClearActiveID()
0203563c 00000304 T ImGui::ItemHoverable(ImRect const&, unsigned int, int)
02035940 000000ec t LockWheelingWindow(ImGuiWindow*, float)
02035a2c 000005e0 t ImGui::UpdateMouseWheel()
0203600c 00000300 t DebugPrintInputEvent(char const*, ImGuiInputEvent const*)
0203630c 00000480 T ImGui::UpdateInputEvents(bool)
0203678c 000000a0 T ImGui::SetNavWindow(ImGuiWindow*)
0203682c 000003a0 t ImGui::NavProcessItem()
02036bcc 0000022c T ImGui::ItemAdd(ImRect const&, unsigned int, ImRect const*, int)
02036df8 00000120 T ImGui::SetFocusID(unsigned int, ImGuiWindow*)
02036f18 0000018c T ImGui::NavInitWindow(ImGuiWindow*, bool)
020370a4 000000f0 t ImGui::NavRestoreLayer(ImGuiNavLayer)
02037194 00000494 t ImGui::NavUpdatePageUpPageDown()
02037628 00000804 t ImGui::NavUpdateCreateMoveRequest()
02037e2c 000000e0 T ImGui::NavInitRequestApplyResult()
02037f0c 00000444 T ImGui::NavMoveRequestApplyResult()
02038350 0000017c T ImGui::DestroyPlatformWindow(ImGuiViewportP*)
020384cc 0000019c t ImGui::DestroyViewport(ImGuiViewportP*)
02038668 000000c4 t ImGui::DockContextAddNode(ImGuiContext*, unsigned int)
0203872c 00000264 t ImGui::DockContextBuildNodesFromSettings(ImGuiContext*, ImGuiDockNodeSettings*, int)
02038990 000000f8 t ImGui::DockSettingsRenameNodeReferences(unsigned int, unsigned int)
02038a88 000002c4 t ImGui::DockNodeAddWindow(ImGuiDockNode*, ImGuiWindow*, bool)
02038d4c 00000104 t ImGui::DockContextBuildAddWindowsToNodes(ImGuiContext*, unsigned int)
02038e50 00000168 t ImGui::DockNodeMoveWindows(ImGuiDockNode*, ImGuiDockNode*)
02038fb8 000002fc t ImGui::DockNodeTreeMerge(ImGuiContext*, ImGuiDockNode*, ImGuiDockNode*)
020392b4 000001d8 t ImGui::DockContextRemoveNode(ImGuiContext*, ImGuiDockNode*, bool)
0203948c 000002cc t ImGui::DockNodeRemoveWindow(ImGuiDockNode*, ImGuiWindow*, unsigned int)
02039758 00000318 t ImGui::DockNodeUpdateFlagsAndCollapse(ImGuiDockNode*)
02039a70 000001a8 t ImGui::DockNodeUpdateForRootNode(ImGuiDockNode*)
02039c18 00000120 T ImGui::SetWindowDock(ImGuiWindow*, unsigned int, int)
02039d38 0000039c t ImGui::DockNodeTreeSplit(ImGuiContext*, ImGuiDockNode*, ImGuiAxis, int, float, ImGuiDockNode*)
0203a0d4 000000d0 T ImGui::DockContextProcessUndockWindow(ImGuiContext*, ImGuiWindow*, bool)
0203a1a4 00000218 t ImGui::DockContextBindNodeToWindow(ImGuiContext*, ImGuiWindow*)
0203a3bc 000001bc T ImGui::DockBuilderRemoveNodeDockedWindows(unsigned int, bool)
0203a578 00000620 t ImGui::DockContextProcessDock(ImGuiContext*, ImGuiDockRequest*)
0203ab98 00000274 T ImGui::DockContextProcessUndockNode(ImGuiContext*, ImGuiDockNode*)
0203ae0c 000000c0 T ImGui::PushItemFlag(int, bool)
0203aecc 00000084 T ImGui::BeginDisabled(bool)
0203af50 00000074 W ImVector<int>::resize(int)
0203afc4 0000007c W ImVector<ImGuiColorMod>::reserve(int)
0203b040 000000c0 W ImVector<ImGuiColorMod>::push_back(ImGuiColorMod const&)
0203b100 000000b8 T ImGui::PushStyleColor(int, unsigned int)
0203b1b8 000008a4 t ImGui::DockNodePreviewDockRender(ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, ImGuiDockPreviewData const*)
0203ba5c 000000ac T ImGui::PushStyleColor(int, ImVec4 const&)
0203bb08 0000007c W ImVector<ImGuiStyleMod>::reserve(int)
0203bb84 000000b0 W ImVector<ImGuiStyleMod>::push_back(ImGuiStyleMod const&)
0203bc34 000000c4 T ImGui::PushStyleVar(int, ImVec2 const&)
0203bcf8 0000007c W ImVector<ImGuiViewportP*>::reserve(int)
0203bd74 0000009c W ImVector<ImGuiViewportP*>::push_back(ImGuiViewportP* const&)
0203be10 0000033c t ImGui::AddUpdateViewport(ImGuiWindow*, unsigned int, ImVec2 const&, ImVec2 const&, int)
0203c14c 000005a0 t ImGui::WindowSelectViewport(ImGuiWindow*)
0203c6ec 0000007c W ImVector<ImGuiViewport*>::reserve(int)
0203c768 0000009c W ImVector<ImGuiViewport*>::push_back(ImGuiViewport* const&)
0203c804 00000074 W ImVector<ImGuiViewport*>::resize(int)
0203c878 00000154 t ImGui::UpdateViewportsEndFrame()
0203c9cc 00000050 W ImVector<ImGuiTabBar>::operator[](int)
0203ca1c 00000050 W ImVector<ImGuiTabBar>::clear()
0203ca6c 0000008c W ImPool<ImGuiTabBar>::Clear()
0203caf8 0000004c W ImPool<ImGuiTabBar>::~ImPool()
0203caf8 0000004c W ImPool<ImGuiTabBar>::~ImPool()
0203cb44 00000050 W ImVector<ImGuiTable>::operator[](int)
0203cb94 000000a4 t SetCurrentWindow(ImGuiWindow*)
0203cc38 00000240 T ImGui::End()
0203ce78 00000104 t ImGui::ErrorCheckEndFrameSanityChecks()
0203cf7c 00000058 T ImGui::EndTooltip()
0203cfd4 000000d4 T ImGui::EndDragDropSource()
0203d0a8 000000f8 T ImGui::EndPopup()
0203d1a0 0000004c W ImPool<ImGuiTable>::TryGetMapData(int)
0203d1ec 00000050 W ImVector<ImGuiTable>::clear()
0203d23c 0000008c W ImPool<ImGuiTable>::Clear()
0203d2c8 0000004c W ImPool<ImGuiTable>::~ImPool()
0203d2c8 0000004c W ImPool<ImGuiTable>::~ImPool()
0203d314 00000c08 W ImGuiContext::ImGuiContext(ImFontAtlas*)
0203d314 00000c08 W ImGuiContext::ImGuiContext(ImFontAtlas*)
0203df1c 0000007c W ImVector<ImGuiWindowStackData>::reserve(int)
0203df98 00000074 W ImVector<ImGuiWindowStackData>::resize(int)
0203e00c 000000a4 W ImVector<ImGuiWindowStackData>::push_back(ImGuiWindowStackData const&)
0203e0b0 0000007c W ImVector<ImGuiPopupData>::reserve(int)
0203e12c 00000074 W ImVector<ImGuiPopupData>::resize(int)
0203e1a0 0000015c T ImGui::ClosePopupToLevel(int, bool)
0203e2fc 000001a4 T ImGui::ClosePopupsOverWindow(ImGuiWindow*, bool)
0203e4a0 00000278 T ImGui::FocusWindow(ImGuiWindow*, int)
0203e718 000000f0 T ImGui::StartMouseMovingWindow(ImGuiWindow*)
0203e808 000000b8 t ImGui::DockNodeStartMouseMovingWindow(ImGuiDockNode*, ImGuiWindow*)
0203e8c0 00000238 T ImGui::UpdateMouseMovingWindowNewFrame()
0203eaf8 00000108 T ImGui::FocusTopMostWindowUnderOne(ImGuiWindow*, ImGuiWindow*, ImGuiViewport*, int)
0203ec00 0000077c t ImGui::UpdateViewportsNewFrame()
0203f37c 00000200 T ImGui::UpdateMouseMovingWindowEndFrame()
0203f57c 00000244 t ImGui::NavUpdateCancelRequest()
0203f7c0 00000168 T ImGui::CloseCurrentPopup()
0203f928 000000a4 W ImVector<ImGuiPopupData>::push_back(ImGuiPopupData const&)
0203f9cc 00000180 T ImGui::OpenPopupEx(unsigned int, int)
0203fb4c 0000007c W ImVector<ImGuiGroupData>::reserve(int)
0203fbc8 00000074 W ImVector<ImGuiGroupData>::resize(int)
0203fc3c 0000007c W ImVector<ImDrawList*>::reserve(int)
0203fcb8 00000074 W ImVector<ImDrawList*>::resize(int)
0203fd2c 000000cc t InitViewportDrawData(ImGuiViewportP*)
0203fdf8 000000cc t FlattenDrawDataIntoSingleLayer(ImDrawDataBuilder*)
0203fec4 00000138 W ImVector<ImGuiWindow*>::insert(ImGuiWindow* const*, ImGuiWindow* const&)
0203fffc 0000003c W ImVector<ImGuiWindow*>::push_front(ImGuiWindow* const&)
02040038 0000007c W ImVector<float>::reserve(int)
020400b4 00000074 W ImVector<float>::resize(int)
02040128 0000007c W ImVector<ImFont*>::reserve(int)
020401a4 0000009c W ImVector<ImFont*>::push_back(ImFont* const&)
02040240 0000007c W ImVector<ImGuiKeyRoutingData>::reserve(int)
020402bc 00000074 W ImVector<ImGuiKeyRoutingData>::resize(int)
02040330 000000b8 W ImVector<ImGuiKeyRoutingData>::push_back(ImGuiKeyRoutingData const&)
020403e8 00000198 t ImGui::UpdateKeyRoutingTable(ImGuiKeyRoutingTable*)
02040580 000006a4 t ImGui::UpdateKeyboardInputs()
02040c24 00000158 T ImGui::GetShortcutRoutingData(int)
02040d7c 0000012c T ImGui::SetShortcutRouting(int, unsigned int, int)
02040ea8 000000b4 T ImGui::Shortcut(int, unsigned int, int)
02040f5c 00000984 t ImGui::NavUpdateWindowing()
020418e0 000009c8 t ImGui::NavUpdate()
020422a8 00000078 W ImVector<unsigned char>::reserve(int)
02042320 00000074 W ImVector<unsigned char>::resize(int)
02042394 00000228 T ImGui::SetDragDropPayload(char const*, void const*, unsigned int, int)
020425bc 0000007c W ImVector<ImGuiSettingsHandler>::reserve(int)
02042638 000000a4 W ImVector<ImGuiSettingsHandler>::push_back(ImGuiSettingsHandler const&)
020426dc 00000074 T ImGui::AddSettingsHandler(ImGuiSettingsHandler const*)
02042750 000000ac T ImGui::DockContextInitialize(ImGuiContext*)
020427fc 000001c0 T ImGui::Initialize()
020429bc 00000074 T ImGui::CreateContext(ImFontAtlas*)
02042a30 0000007c W ImVector<ImGuiDockRequest>::reserve(int)
02042aac 00000074 W ImVector<ImGuiDockRequest>::resize(int)
02042b20 000000a4 W ImVector<ImGuiDockRequest>::push_back(ImGuiDockRequest const&)
02042bc4 000000a4 T ImGui::DockContextQueueDock(ImGuiContext*, ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, int, float, bool)
02042c68 000004a4 T ImGui::BeginDockableDragDropTarget(ImGuiWindow*)
0204310c 00000068 T ImGui::DockContextQueueUndockWindow(ImGuiContext*, ImGuiWindow*)
02043174 00000068 T ImGui::DockContextQueueUndockNode(ImGuiContext*, ImGuiDockNode*)
020431dc 00000158 T ImGui::StartMouseMovingWindowOrNode(ImGuiWindow*, ImGuiDockNode*, bool)
02043334 0000007c W ImVector<ImGuiDockContextPruneNodeData>::reserve(int)
020433b0 00000044 W ImPool<ImGuiDockContextPruneNodeData>::Reserve(int)
020433f4 00000050 W ImVector<ImGuiDockContextPruneNodeData>::operator[](int)
02043444 00000050 W ImPool<ImGuiDockContextPruneNodeData>::GetByKey(unsigned int)
02043494 0000007c W ImVector<ImGuiDockNode*>::reserve(int)
02043510 0000009c W ImVector<ImGuiDockNode*>::push_back(ImGuiDockNode* const&)
020435ac 00000124 t DockNodeTreeUpdateSplitterFindTouchingNode(ImGuiDockNode*, ImGuiAxis, int, ImVector<ImGuiDockNode*>*)
020436d0 00000308 T ImGui::DockBuilderRemoveNodeChildNodes(unsigned int)
020439d8 0000006c T ImGui::DockContextClearNodes(ImGuiContext*, unsigned int, bool)
02043a44 00000040 t ImGui::DockSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
02043a84 0000007c T ImGui::DockContextRebuildNodes(ImGuiContext*)
02043b00 00000164 T ImGui::DockContextNewFrameUpdateUndocking(ImGuiContext*)
02043c64 0000007c W ImVector<ImGuiStackLevelInfo>::reserve(int)
02043ce0 00000074 W ImVector<ImGuiStackLevelInfo>::resize(int)
02043d54 000001b0 t ImGui::UpdateDebugToolStackQueries()
02043f04 000000d0 W ImVector<ImGuiStackLevelInfo>::resize(int, ImGuiStackLevelInfo const&)
02043fd4 0000029c T ImGui::DebugHookIdInfo(unsigned int, int, void const*, void const*)
02044270 0000009c T ImGuiWindow::GetID(char const*, char const*)
0204430c 000003ec T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
0204430c 000003ec T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
020446f8 000000e4 t CreateNewWindow(char const*, int)
020447dc 00000aa8 t ImGui::RenderWindowDecorations(ImGuiWindow*, ImRect const&, bool, bool, int, unsigned int const*, float)
02045284 000004ec t ImGui::RenderWindowTitleBarContents(ImGuiWindow*, ImRect const&, char const*, bool*)
02045770 00000050 T ImGui::PushID(char const*)
020457c0 00000034 T ImGui::GetID(char const*)
020457f4 00000088 T ImGui::IsPopupOpen(char const*, int)
0204587c 00000094 T ImGui::OpenPopup(char const*, int)
02045910 000004d8 T ImGui::BeginDocked(ImGuiWindow*, bool*)
02045de8 00000078 T ImGuiWindow::GetID(int)
02045e60 00000fd0 t ImGui::UpdateWindowManualResize(ImGuiWindow*, ImVec2 const&, int*, int*, int, unsigned int*, ImRect const&)
02046e30 00002a1c T ImGui::Begin(char const*, bool*, int)
0204984c 00000244 t ImGui::NavUpdateWindowingOverlay()
02049a90 00000070 t ImGui::NavEndFrame()
02049b00 00000160 T ImGui::BeginTooltipEx(int, int)
02049c60 00000028 T ImGui::BeginTooltip()
02049c88 000001b4 t ImGui::UpdateDebugToolItemPicker()
02049e3c 0000005c T ImGui::SetTooltipV(char const*, __va_list_tag*)
02049e98 00000084 T ImGui::SetTooltip(char const*, ...)
02049f1c 000003a8 T ImGui::EndFrame()
0204a2c4 000000a8 T ImGui::SetItemTooltip(char const*, ...)
0204a36c 000000d8 T ImGui::BeginPopupEx(unsigned int, int)
0204a444 00000070 T ImGui::BeginPopup(char const*, int)
0204a4b4 00000124 t ImGui::DockNodeWindowMenuUpdate(ImGuiDockNode*, ImGuiTabBar*)
0204a5d8 0000005c T ImGui::BeginTooltipHidden()
0204a634 00000328 T ImGui::BeginDragDropSource(int)
0204a95c 000002b4 T ImGui::BeginDockableDragDropSource(ImGuiWindow*)
0204ac10 0000004c T ImGui::PushID(int)
0204ac5c 00000714 t ImGui::DockNodeTreeUpdateSplitter(ImGuiDockNode*)
0204b370 00000060 T ImGui::PushOverrideID(unsigned int)
0204b3d0 00000c94 t ImGui::DockNodeUpdateTabBar(ImGuiDockNode*, ImGuiWindow*)
0204c064 00000e78 t ImGui::DockNodeUpdate(ImGuiDockNode*)
0204cedc 00000130 T ImGui::DockContextNewFrameUpdateDocking(ImGuiContext*)
0204d00c 00000b58 T ImGui::NewFrame()
0204db64 00000084 T ImGui::GetIDWithSeed(char const*, char const*, unsigned int)
0204dbe8 0000007c W ImVector<ImDrawCmd>::reserve(int)
0204dc64 000000a4 W ImVector<ImDrawCmd>::push_back(ImDrawCmd const&)
0204dd08 00000130 W ImVector<ImDrawCmd>::insert(ImDrawCmd const*, ImDrawCmd const&)
0204de38 0000003c W ImVector<ImDrawCmd>::push_front(ImDrawCmd const&)
0204de74 00000268 t ImGui::RenderDimmedBackgroundBehindWindow(ImGuiWindow*, unsigned int)
0204e0dc 000003a4 t ImGui::RenderDimmedBackgrounds()
0204e480 0000033c T ImGui::Render()
0204e7bc 00000050 W ImVector<ImGuiDockContextPruneNodeData>::clear()
0204e80c 00000088 W ImPool<ImGuiDockContextPruneNodeData>::Clear()
0204e894 0000004c W ImPool<ImGuiDockContextPruneNodeData>::~ImPool()
0204e894 0000004c W ImPool<ImGuiDockContextPruneNodeData>::~ImPool()
0204e8e0 00000074 W ImVector<ImGuiDockContextPruneNodeData>::resize(int)
0204e954 000000a0 W ImPool<ImGuiDockContextPruneNodeData>::Add()
0204e9f4 0000005c W ImPool<ImGuiDockContextPruneNodeData>::GetOrAddByKey(unsigned int)
0204ea50 0000038c t ImGui::DockContextPruneUnusedSettingsNodes(ImGuiContext*)
0204eddc 00000058 t ImGui::DockSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
0204ee34 00000074 W ImVector<ImVec2>::resize(int)
0204eea8 00000034 t ImUpperPowerOfTwo(int)
0204eedc 00000064 t ImLerp(ImVec4 const&, ImVec4 const&, float)
0204ef40 000000bc t ImFloor(float)
0204effc 00000030 t stbrp_setup_allow_out_of_mem
0204f02c 000000c8 t stbrp_init_target
0204f0f4 00000058 t rect_height_compare(void const*, void const*)
0204f14c 00000034 t rect_original_order(void const*, void const*)
0204f180 00000030 t stbtt__buf_get8(stbtt__buf*)
0204f1b0 00000028 t stbtt__buf_peek8(stbtt__buf*)
0204f1d8 00000018 t ttUSHORT(unsigned char*)
0204f1f0 00000018 t ttSHORT(unsigned char*)
0204f208 0000002c t ttULONG(unsigned char*)
0204f234 0000002c t ttLONG(unsigned char*)
0204f260 00000138 t stbtt__isfont(unsigned char*)
0204f398 000000cc t stbtt__find_table(unsigned char*, unsigned int, char const*)
0204f464 000000f8 t stbtt_GetFontOffsetForIndex_internal(unsigned char*, int)
0204f55c 00000018 t stbtt_setvertex(stbtt_vertex*, unsigned char, int, int, int, int)
0204f574 0000012c t stbtt__close_shape(stbtt_vertex*, int, int, int, int, int, int, int, int, int)
0204f6a0 0000007c t stbtt__track_vertex(stbtt__csctx*, int, int)
0204f71c 000000f4 t stbtt__csctx_v(stbtt__csctx*, unsigned char, int, int, int, int, int, int)
0204f810 00000078 t stbtt__csctx_close_shape(stbtt__csctx*)
0204f888 000000a0 t stbtt__csctx_rmove_to(stbtt__csctx*, float, float)
0204f928 0000006c t stbtt__csctx_rline_to(stbtt__csctx*, float, float)
0204f994 000000ac t stbtt__csctx_rccurve_to(stbtt__csctx*, float, float, float, float, float, float)
0204fa40 00000124 t stbtt_GetGlyphHMetrics
0204fb64 000000a8 t stbtt_GetFontVMetrics
0204fc0c 00000090 t stbtt_ScaleForPixelHeight
0204fc9c 00000064 t stbtt_ScaleForMappingEmToPixels
0204fd00 00000010 t stbtt__hheap_free(stbtt__hheap*, void*)
0204fd10 00000014 t stbtt__sized_triangle_area(float, float)
0204fd24 000000ec t stbtt__sort_edges_ins_sort(stbtt__edge*, int)
0204fe10 00000274 t stbtt__sort_edges_quicksort(stbtt__edge*, int)
02050084 00000044 t stbtt__sort_edges(stbtt__edge*, int)
020500c8 0000001c t stbtt__add_point(stbtt__point*, int, float, float)
020500e4 00000198 t stbtt__tesselate_curve(stbtt__point*, int*, float, float, float, float, float, float, float, int)
0205027c 00000068 t stbtt__oversample_shift(int)
020502e4 00000294 t stbtt_GetPackedQuad
02050578 00000020 t stbtt_GetFontOffsetForIndex
02050598 00000018 t Decode85Byte(char)
020505b0 000000e0 t Decode85(unsigned char const*, unsigned char*)
02050690 0000003c t CalcWordWrapNextLineStartA(char const*, char const*)
020506cc 0000002c t stb_decompress_length(unsigned char const*)
020506f8 0000011c t stb_adler32(unsigned int, unsigned char*, unsigned int)
02050814 0000000c t GetDefaultCompressedFontDataTTFBase85()
02050820 00000044 t FixRectCornerFlags(int)
02050864 00000098 t stb__match(unsigned char const*, unsigned int)
020508fc 0000004c t stbtt__new_buf(void const*, unsigned int)
02050948 00000094 t stbtt__buf_range(stbtt__buf const*, int, int)
020509dc 00000098 t stbtt__buf_get(stbtt__buf*, int)
02050a74 000000ec t stbtt__cff_int(stbtt__buf*)
02050b60 00000048 t stbtt__buf_seek(stbtt__buf*, int)
02050ba8 00000028 t stbtt__buf_skip(stbtt__buf*, int)
02050bd0 0000003c t stbtt__cff_index_count(stbtt__buf*)
02050c0c 000000a4 t stbtt__cff_skip_operand(stbtt__buf*)
02050cb0 000000e8 t stbtt__dict_get(stbtt__buf*, int)
02050d98 00000088 t stbtt__dict_get_ints(stbtt__buf*, int, int, unsigned int*)
02050e20 00000120 t stbtt__cff_index_get(stbtt__buf, int)
02050f40 000000c4 t stbtt__get_subr(stbtt__buf, int)
02051004 000000dc t stbtt__cff_get_index(stbtt__buf*)
020510e0 000000fc t stbtt__get_subrs(stbtt__buf, stbtt__buf)
020511dc 000001b8 t stbtt__cid_get_glyph_subrs(stbtt_fontinfo const*, int)
02051394 00000c24 t stbtt__run_charstring(stbtt_fontinfo const*, int, stbtt__csctx*)
02051fb8 0000011c t stbtt__GetGlyphInfoT2(stbtt_fontinfo const*, int, int*, int*, int*, int*)
020520d4 000005a4 t stbtt_InitFont_internal(stbtt_fontinfo*, unsigned char*, int)
02052678 00000020 t stbtt_InitFont
02052698 00000444 t stbtt_FindGlyphIndex
02052adc 00000144 t stbtt__GetGlyfOffset(stbtt_fontinfo const*, int)
02052c20 00000118 t stbtt_GetGlyphBox
02052d38 0000011c t stbrp__skyline_find_min_y(stbrp_context*, stbrp_node*, int, int, int*)
02052e54 000002f0 t stbrp__skyline_find_best_pos(stbrp_context*, int, int)
02053144 00000120 t stbrp__skyline_pack_rectangle(stbrp_context*, int, int)
02053264 00000098 t stbtt__sized_trapezoid_area(float, float, float)
020532fc 0000002c t stbtt__position_trapezoid_area(float, float, float, float, float)
02053328 0000038c t stbtt__handle_clipped_edge(float*, int, stbtt__active_edge*, float, float, float, float)
020536b4 000008c8 t stbtt__fill_active_edges_new(float*, float*, int, stbtt__active_edge*, float)
02053f7c 000002c8 t stbtt__h_prefilter(unsigned char*, int, int, int, unsigned int)
02054244 000002e0 t stbtt__v_prefilter(unsigned char*, int, int, int, unsigned int)
02054524 00000200 t stbtt_GetGlyphBitmapBoxSubpixel
02054724 0000002c t stbtt_GetGlyphBitmapBox
02054750 000000e8 t stbtt__GetGlyphShapeT2(stbtt_fontinfo const*, int, stbtt_vertex**)
02054838 000000d8 t stbtt__hheap_alloc(stbtt__hheap*, unsigned int, void*)
02054910 00000140 t stbtt__new_active(stbtt__hheap*, stbtt__edge*, int, float, void*)
02054a50 000000a0 t stb__lit(unsigned char const*, unsigned int)
02054af0 00000300 t stb_decompress_token(unsigned char const*)
02054df0 00000210 t stb_decompress(unsigned char*, unsigned char const*, unsigned int)
02055000 00000150 t stbtt_PackBegin
02055150 00000044 t stbtt__hheap_cleanup(stbtt__hheap*, void*)
02055194 000003a4 t stbtt__rasterize_sorted_edges(stbtt__bitmap*, stbtt__edge*, int, int, int, int, void*)
02055538 00000264 t stbtt__rasterize(stbtt__bitmap*, stbtt__point*, int*, int, float, float, float, float, int, int, int, void*)
0205579c 00000038 t stbtt_PackEnd
020557d4 00000aac t stbtt__GetGlyphShapeTT(stbtt_fontinfo const*, int, stbtt_vertex**)
02056280 00000034 t stbtt_GetGlyphShape
020562b4 00000254 t stbtt__tesselate_cubic(stbtt__point*, int*, float, float, float, float, float, float, float, float, float, int)
02056508 000004f8 t stbtt_FlattenCurves(stbtt_vertex*, int, float, int**, int*, void*)
02056a00 00000118 t stbtt_Rasterize
02056b18 0000013c t stbtt_MakeGlyphBitmapSubpixel
02056c54 000005ac t stbtt_PackFontRangesRenderIntoRects
02057200 000001a4 t stbrp_pack_rects
020573a4 00000040 W ImDrawCmd::ImDrawCmd()
020573a4 00000040 W ImDrawCmd::ImDrawCmd()
020573e4 0000003c W ImFontAtlasCustomRect::ImFontAtlasCustomRect()
020573e4 0000003c W ImFontAtlasCustomRect::ImFontAtlasCustomRect()
02057420 0000005c W ImBitVector::TestBit(int) const
0205747c 00000064 W ImBitVector::SetBit(int)
020574e0 00000c98 T ImGui::StyleColorsDark(ImGuiStyle*)
02058178 0000011c T ImDrawListSharedData::ImDrawListSharedData()
02058178 0000011c T ImDrawListSharedData::ImDrawListSharedData()
02058294 00000150 T ImDrawListSharedData::SetCircleTessellationMaxError(float)
020583e4 000000d8 T ImDrawList::_CalcCircleAutoSegmentCount(float) const
020584bc 00000134 T ImDrawList::PrimRect(ImVec2 const&, ImVec2 const&, unsigned int)
020585f0 00000168 T ImDrawList::PrimRectUV(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
02058758 00000088 T ImFontConfig::ImFontConfig()
02058758 00000088 T ImFontConfig::ImFontConfig()
020587e0 0000009c T ImFontAtlas::ImFontAtlas()
020587e0 0000009c T ImFontAtlas::ImFontAtlas()
0205887c 00000084 T ImFontAtlas::ClearTexData()
02058900 00000168 T ImFontAtlas::CalcCustomRectUV(ImFontAtlasCustomRect const*, ImVec2*, ImVec2*) const
02058a68 000000a8 T ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char*, float)
02058b10 00000048 T ImFontAtlasBuildMultiplyRectAlpha8(unsigned char const*, unsigned char*, int, int, int, int, int)
02058b58 00000018 T ImFontAtlasGetBuilderForStbTruetype()
02058b70 00000048 T ImFontAtlasUpdateConfigDataPointers(ImFontAtlas*)
02058bb8 000000f4 T ImFontAtlasBuildRender8bppRectFromString(ImFontAtlas*, int, int, int, int, char const*, char, unsigned char)
02058cac 00000100 T ImFontAtlasBuildRender32bppRectFromString(ImFontAtlas*, int, int, int, int, char const*, char, unsigned int)
02058dac 0000000c T ImFontAtlas::GetGlyphRangesDefault()
02058db8 00000088 T ImFont::ImFont()
02058db8 00000088 T ImFont::ImFont()
02058e40 00000050 T ImFont::FindGlyph(unsigned short) const
02058e90 0000005c T ImFont::SetGlyphVisible(unsigned short, bool)
02058eec 0000004c T ImFont::FindGlyphNoFallback(unsigned short) const
02058f38 0000008c t FindFirstExistingGlyph(ImFont*, unsigned short const*, int)
02058fc4 00000238 T ImFont::CalcWordWrapPositionA(float, char const*, char const*, float) const
020591fc 00000278 T ImFont::CalcTextSizeA(float, float, float, char const*, char const*, char const**) const
02059474 000000f0 T ImGui::CalcRoundingFlagsForRectInRect(ImRect const&, ImRect const&, float)
02059564 00000050 W ImVector<ImFontAtlasCustomRect>::operator[](int)
020595b4 0000004c W ImFontAtlas::GetCustomRectByIndex(int)
02059600 00000208 T ImFontAtlas::GetMouseCursorTexData(int, ImVec2*, ImVec2*, ImVec2*, ImVec2*)
02059808 000002d4 t ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas*)
02059adc 000002c0 t ImFontAtlasBuildRenderLinesTexData(ImFontAtlas*)
02059d9c 00000050 W ImVector<ImDrawCmd>::clear()
02059dec 00000050 W ImVector<ImDrawVert>::clear()
02059e3c 00000050 W ImVector<ImVec4>::clear()
02059e8c 00000050 W ImVector<void*>::clear()
02059edc 00000068 T ImDrawList::_PopUnusedDrawCmd()
02059f44 00000044 W ImVector<ImVec4>::pop_back()
02059f88 00000044 W ImVector<void*>::pop_back()
02059fcc 00000060 W ImVector<ImVec2>::reserve_discard(int)
0205a02c 000002f4 T ImDrawList::_PathArcToFastEx(ImVec2 const&, float, int, int, int)
0205a320 00000048 T ImDrawList::PathArcToFast(ImVec2 const&, float, int, int)
0205a368 000002cc T ImDrawList::PathRect(ImVec2 const&, ImVec2 const&, float, int)
0205a634 00000150 T ImDrawList::_PathArcToN(ImVec2 const&, float, float, float, int)
0205a784 00000400 T ImDrawList::PathArcTo(ImVec2 const&, float, float, float, int)
0205ab84 00000050 W ImVector<ImDrawChannel>::operator[](int)
0205abd4 000000c8 T ImDrawListSplitter::ClearFreeMemory()
0205ac9c 00000070 T ImDrawList::_ClearFreeMemory()
0205ad0c 0000007c W ImVector<ImDrawChannel>::reserve(int)
0205ad88 00000074 W ImVector<ImDrawChannel>::resize(int)
0205adfc 000000b4 W ImVector<ImDrawCmd>::erase(ImDrawCmd const*)
0205aeb0 00000050 W ImVector<ImDrawList*>::operator[](int)
0205af00 0000004c W ImVector<ImFontConfig>::back()
0205af4c 00000050 W ImVector<ImFontBuildSrcData>::operator[](int)
0205af9c 00000050 W ImVector<ImFontConfig>::operator[](int)
0205afec 00000050 W ImVector<ImFontBuildDstData>::operator[](int)
0205b03c 000000c0 t UnpackBitVectorToFlatIndexList(ImBitVector const*, ImVector<int>*)
0205b0fc 00000050 W ImVector<ImFontBuildDstData>::clear()
0205b14c 00000050 W ImVector<stbrp_rect>::operator[](int)
0205b19c 00000050 W ImVector<stbtt_packedchar>::operator[](int)
0205b1ec 00000050 W ImVector<stbrp_rect>::clear()
0205b23c 00000048 W ImFontBuildSrcData::~ImFontBuildSrcData()
0205b23c 00000048 W ImFontBuildSrcData::~ImFontBuildSrcData()
0205b284 00000050 W ImVector<ImFontGlyph>::clear()
0205b2d4 00000078 T ImFont::ClearOutputData()
0205b34c 000000ac T ImFontAtlasBuildSetupFont(ImFontAtlas*, ImFont*, ImFontConfig*, float, float)
0205b3f8 0000005c T ImFont::~ImFont()
0205b3f8 0000005c T ImFont::~ImFont()
0205b454 00000050 W ImVector<ImFontGlyph>::operator[](int)
0205b4a4 0000004c W ImVector<ImFontGlyph>::back()
0205b4f0 00000048 W ImBitVector::Create(int)
0205b538 00000074 W ImVector<ImDrawCmd>::resize(int)
0205b5ac 000000bc T ImDrawList::AddDrawCmd()
0205b668 00000178 T ImDrawList::_OnChangedClipRect()
0205b7e0 00000084 T ImDrawList::PopClipRect()
0205b864 0000012c T ImDrawList::_OnChangedTextureID()
0205b990 00000064 T ImDrawList::PopTextureID()
0205b9f4 00000088 T ImDrawList::_OnChangedVtxOffset()
0205ba7c 000001bc T ImDrawListSplitter::SetCurrentChannel(ImDrawList*, int)
0205bc38 00000390 T ImDrawListSplitter::Merge(ImDrawList*)
0205bfc8 0000014c T ImDrawListSplitter::Split(ImDrawList*, int)
0205c114 000000ac W ImVector<unsigned short>::resize(int, unsigned short const&)
0205c1c0 00000074 W ImVector<ImDrawVert>::resize(int)
0205c234 000000d4 T ImDrawList::PrimReserve(int, int)
0205c308 00000ef8 T ImDrawList::AddPolyline(ImVec2 const*, int, unsigned int, int, float)
0205d200 000000f0 T ImDrawList::AddLine(ImVec2 const&, ImVec2 const&, unsigned int, float)
0205d2f0 00000144 T ImDrawList::AddRect(ImVec2 const&, ImVec2 const&, unsigned int, float, int, float)
0205d434 00000140 T ImGui::RenderCheckMark(ImDrawList*, ImVec2, unsigned int, float)
0205d574 00000458 T ImDrawList::AddConvexPolyFilled(ImVec2 const*, int, unsigned int)
0205d9cc 00000090 T ImDrawList::AddTriangleFilled(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0205da5c 00000230 T ImGui::RenderArrow(ImDrawList*, ImVec2, unsigned int, int, float)
0205dc8c 000001a4 T ImGui::RenderArrowPointingAt(ImDrawList*, ImVec2, ImVec2, int, unsigned int)
0205de30 000000f4 T ImDrawList::AddCircleFilled(ImVec2 const&, float, unsigned int, int)
0205df24 0000004c T ImGui::RenderBullet(ImDrawList*, ImVec2, unsigned int)
0205df70 000000b0 T ImDrawList::AddRectFilled(ImVec2 const&, ImVec2 const&, unsigned int, float, int)
0205e020 00000160 T ImGui::RenderArrowDockMenu(ImDrawList*, ImVec2, float, unsigned int)
0205e180 00000398 T ImGui::RenderRectFilledWithHole(ImDrawList*, ImRect const&, ImRect const&, unsigned int, float)
0205e518 000001b8 T ImFont::RenderChar(ImDrawList*, float, ImVec2 const&, unsigned int, unsigned short) const
0205e6d0 000005f8 T ImFont::RenderText(ImDrawList*, float, ImVec2 const&, unsigned int, ImVec4 const&, char const*, char const*, float, bool) const
0205ecc8 000001f0 T ImDrawList::AddText(ImFont const*, float, ImVec2 const&, unsigned int, char const*, char const*, float, ImVec4 const*)
0205eeb8 0000007c W ImVector<ImVec4>::reserve(int)
0205ef34 00000074 W ImVector<ImVec4>::resize(int)
0205efa8 000000b8 W ImVector<ImVec4>::push_back(ImVec4 const&)
0205f060 0000011c T ImDrawList::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
0205f17c 00000050 T ImDrawList::PushClipRectFullScreen()
0205f1cc 0000007c W ImVector<void*>::reserve(int)
0205f248 00000074 W ImVector<void*>::resize(int)
0205f2bc 000000f4 T ImDrawList::_ResetForNewFrame()
0205f3b0 0000009c W ImVector<void*>::push_back(void* const&)
0205f44c 00000048 T ImDrawList::PushTextureID(void*)
0205f494 000000f8 T ImDrawList::AddImage(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0205f58c 00000080 T ImDrawData::Clear()
0205f60c 0000009c W ImVector<ImDrawList*>::push_back(ImDrawList* const&)
0205f6a8 000001bc T ImGui::AddDrawListToDrawDataEx(ImDrawData*, ImVector<ImDrawList*>*, ImDrawList*)
0205f864 0000007c W ImVector<ImFontConfig>::reserve(int)
0205f8e0 000000a4 W ImVector<ImFontConfig>::push_back(ImFontConfig const&)
0205f984 000001dc T ImFontAtlas::AddFont(ImFontConfig const*)
0205fb60 00000138 T ImFontAtlas::AddFontFromMemoryTTF(void*, int, float, ImFontConfig const*, unsigned short const*)
0205fc98 00000108 T ImFontAtlas::AddFontFromMemoryCompressedTTF(void const*, int, float, ImFontConfig const*, unsigned short const*)
0205fda0 000000d4 T ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(char const*, float, ImFontConfig const*, unsigned short const*)
0205fe74 00000154 T ImFontAtlas::AddFontDefault(ImFontConfig const*)
0205ffc8 00000090 T ImFontAtlas::Build()
02060058 000000a4 T ImFontAtlas::GetTexDataAsAlpha8(unsigned char**, int*, int*, int*)
020600fc 00000124 T ImFontAtlas::GetTexDataAsRGBA32(unsigned char**, int*, int*, int*)
02060220 0000007c W ImVector<ImFontAtlasCustomRect>::reserve(int)
0206029c 000000d0 W ImVector<ImFontAtlasCustomRect>::push_back(ImFontAtlasCustomRect const&)
0206036c 000000bc T ImFontAtlas::AddCustomRectRegular(int, int)
02060428 00000114 T ImFontAtlasBuildInit(ImFontAtlas*)
0206053c 0000007c W ImVector<ImFontBuildSrcData>::reserve(int)
020605b8 00000074 W ImVector<ImFontBuildSrcData>::resize(int)
0206062c 0000007c W ImVector<ImFontBuildDstData>::reserve(int)
020606a8 00000074 W ImVector<ImFontBuildDstData>::resize(int)
0206071c 0000007c W ImVector<stbrp_rect>::reserve(int)
02060798 00000074 W ImVector<stbrp_rect>::resize(int)
0206080c 0000029c T ImFontAtlasBuildPackCustomRects(ImFontAtlas*, void*)
02060aa8 0000007c W ImVector<stbtt_packedchar>::reserve(int)
02060b24 00000074 W ImVector<stbtt_packedchar>::resize(int)
02060b98 00000050 W ImVector<ImFontBuildSrcData>::clear()
02060be8 00000060 W ImVector<ImFontBuildSrcData>::clear_destruct()
02060c48 0000007c W ImVector<ImFontGlyph>::reserve(int)
02060cc4 00000074 W ImVector<ImFontGlyph>::resize(int)
02060d38 000002fc T ImFont::AddGlyph(ImFontConfig const*, unsigned short, float, float, float, float, float, float, float, float, float)
02061034 000000ac W ImVector<float>::resize(int, float const&)
020610e0 000000ac T ImFont::GrowIndex(int)
0206118c 00000464 T ImFont::BuildLookupTable()
020615f0 000001dc T ImFontAtlasBuildFinish(ImFontAtlas*)
020617cc 00000e90 t ImFontAtlasBuildWithStbTruetype(ImFontAtlas*)
0206265c 0000000c t TableSettingsCalcChunkSize(int)
02062668 0000008c t TableSettingsInit(ImGuiTableSettings*, unsigned int, int, int)
020626f4 00000330 t TableSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
02062a24 00000054 W ImGui::ItemSize(ImRect const&, float)
02062a78 0000008c T ImGui::TableSettingsAddSettingsHandler()
02062b04 0000003c T ImGui::TableGcCompactTransientBuffers(ImGuiTableTempData*)
02062b40 0000009c T ImGui::SetWindowClipRectBeforeSetChannel(ImGuiWindow*, ImRect const&)
02062bdc 00000078 T ImGui::TablePushBackgroundChannel()
02062c54 00000014 T ImGui::GetColumnOffsetFromNorm(ImGuiOldColumns const*, float)
02062c68 00000014 T ImGui::GetColumnNormFromOffset(ImGuiOldColumns const*, float)
02062c7c 00000084 T ImGui::PushColumnsBackground()
02062d00 00000068 T ImGui::PopColumnsBackground()
02062d68 00000058 W ImPool<ImGuiTable>::GetIndex(ImGuiTable const*) const
02062dc0 00000070 T ImGui::TablePopBackgroundChannel()
02062e30 00000060 W ImChunkStream<ImGuiTableSettings>::alloc_chunk(unsigned int)
02062e90 00000070 T ImGui::TableSettingsCreate(unsigned int, int)
02062f00 00000070 T ImGui::TableSettingsFindByID(unsigned int)
02062f70 000000a8 t TableSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
02063018 0000031c t TableSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
02063334 00000174 T ImGui::TableGcCompactSettings()
020634a8 00000050 W ImVector<ImGuiTableColumnSortSpecs>::clear()
020634f8 000000e0 T ImGui::TableGcCompactTransientBuffers(ImGuiTable*)
020635d8 00000050 W ImVector<ImGuiOldColumnData>::operator[](int)
02063628 000000a8 T ImGui::GetColumnOffset(int)
020636d0 00000120 t GetDraggedColumnOffset(ImGuiOldColumns*, int)
020637f0 000000b4 t GetColumnWidthEx(ImGuiOldColumns*, int, bool)
020638a4 000001c4 T ImGui::SetColumnOffset(int, float)
02063a68 00000484 T ImGui::EndColumns()
02063eec 00000070 t TableSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
02063f5c 00000070 t TableSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
02063fcc 00000080 t ImTrunc(ImVec2 const&)
0206404c 00000040 t ShrinkWidthItemComparer(void const*, void const*)
0206408c 0000006c t CalcMaxPopupHeightFromItemCount(int)
020640f8 00000070 t TabItemComparerBySection(void const*, void const*)
02064168 00000010 t TabItemComparerByBeginOrder(void const*, void const*)
02064178 00000028 t TabBarCalcScrollableWidth(ImGuiTabBar*, ImGuiTabBarSection*)
020641a0 0000001c t ImGui::TabBarCalcMaxTabWidth()
020641bc 00000040 t ImGui::TabBarScrollClamp(ImGuiTabBar*, float)
020641fc 00000084 t ImGui::TabBarCalcTabID(ImGuiTabBar*, char const*, ImGuiWindow*)
02064280 00000044 W ImGuiInputTextState::CursorClamp()
020642c4 00000058 W ImGuiTabItem::ImGuiTabItem()
020642c4 00000058 W ImGuiTabItem::ImGuiTabItem()
0206431c 00000578 T ImGui::TextEx(char const*, char const*, int)
02064894 00000064 T ImGui::TextV(char const*, __va_list_tag*)
020648f8 00000084 T ImGui::Text(char const*, ...)
0206497c 00000054 T ImGui::TextColoredV(ImVec4 const&, char const*, __va_list_tag*)
020649d0 00000080 T ImGui::TextColored(ImVec4 const&, char const*, ...)
02064a50 000007cc T ImGui::ButtonBehavior(ImRect const&, unsigned int, bool*, bool*, int)
0206521c 0000031c T ImGui::ButtonEx(char const*, ImVec2 const&, int)
02065538 00000024 T ImGui::Button(char const*, ImVec2 const&)
0206555c 000002bc T ImGui::ArrowButtonEx(char const*, int, ImVec2, int)
02065818 00000318 T ImGui::CloseButton(unsigned int, ImVec2 const&)
02065b30 00000290 T ImGui::CollapseButton(unsigned int, ImVec2 const&, ImGuiDockNode*)
02065dc0 00000040 T ImGui::GetWindowScrollbarID(ImGuiWindow*, ImGuiAxis)
02065e00 00000164 T ImGui::GetWindowScrollbarRect(ImGuiWindow*, ImGuiAxis)
02065f64 00000870 T ImGui::ScrollbarEx(ImRect const&, unsigned int, ImGuiAxis, long long*, long long, long long, int)
020667d4 000001a8 T ImGui::Scrollbar(ImGuiAxis)
0206697c 000003a0 T ImGui::SplitterBehavior(ImRect const&, unsigned int, ImGuiAxis, float*, float*, float, float, float, float, unsigned int)
02066d1c 00000294 T ImGui::ShrinkWidths(ImGuiShrinkWidthItem*, int, float)
02066fb0 000002c8 T ImGui::BeginComboPopup(unsigned int, ImRect const&, int)
02067278 00000768 T ImGui::BeginCombo(char const*, char const*, int)
020679e0 00000020 T ImGui::EndCombo()
02067a00 0000069c T ImGui::Selectable(char const*, bool, int, ImVec2 const&)
0206809c 000000a0 T ImGuiMenuColumns::CalcNextTotalWidth(bool)
0206813c 00000078 T ImGuiMenuColumns::Update(float, bool)
020681b4 00000128 T ImGuiMenuColumns::DeclColumns(float, float, float, float)
020682dc 00000088 T ImGuiTabBar::ImGuiTabBar()
020682dc 00000088 T ImGuiTabBar::ImGuiTabBar()
02068364 00000070 T ImGui::TabBarGetTabName(ImGuiTabBar*, ImGuiTabItem*)
020683d4 0000000c T ImGui::TabBarQueueFocus(ImGuiTabBar*, ImGuiTabItem*)
020683e0 00000074 T ImGui::TabBarCloseTab(ImGuiTabBar*, ImGuiTabItem*)
02068454 0000007c T ImGui::TabBarQueueReorder(ImGuiTabBar*, ImGuiTabItem*, int)
020684d0 000000dc T ImGui::TabItemCalcSize(char const*, bool)
020685ac 00000048 T ImGui::TabItemCalcSize(ImGuiWindow*)
020685f4 00000410 T ImGui::TabItemLabelAndCloseButton(ImDrawList*, ImRect const&, int, ImVec2, char const*, unsigned int, unsigned int, bool, bool*, bool*)
02068a04 000000b8 T ImGui::InputTextDeactivateHook(unsigned int)
02068abc 000000d0 t IsRootOfOpenMenuSet()
02068b8c 0000068c T ImGui::MenuItemEx(char const*, char const*, char const*, bool, bool)
02069218 00000030 T ImGui::MenuItem(char const*, char const*, bool, bool)
02069248 00000064 W ImPool<ImGuiTabBar>::GetIndex(ImGuiTabBar const*) const
020692ac 00000060 t GetTabBarRefFromTabBar(ImGuiTabBar*)
0206930c 00000044 W ImVector<ImGuiPtrOrIndex>::pop_back()
02069350 00000050 W ImVector<ImGuiPtrOrIndex>::back()
020693a0 000001c8 t ImGui::TabBarTabListPopupButton(ImGuiTabBar*)
02069568 0000009c T ImGui::TabBarFindTabByID(ImGuiTabBar*, unsigned int)
02069604 00000188 t ImGui::TabBarScrollToTab(ImGuiTabBar*, unsigned int, ImGuiTabBarSection*)
0206978c 000002cc t ImGui::TabBarScrollingButtons(ImGuiTabBar*)
02069a58 0000009c T ImGui::TabBarFindMostRecentlySelectedTabForActiveWindow(ImGuiTabBar*)
02069af4 00000204 T ImGui::TabBarQueueReorderFromMousePos(ImGuiTabBar*, ImGuiTabItem*, ImVec2)
02069cf8 00000164 T ImGui::TabBarProcessReorder(ImGuiTabBar*)
02069e5c 00000050 W ImVector<ImGuiShrinkWidthItem>::operator[](int)
02069eac 000000b4 W ImVector<ImGuiTabItem>::erase(ImGuiTabItem const*)
02069f60 00000090 T ImGui::TabBarRemoveTab(ImGuiTabBar*, unsigned int)
02069ff0 000002ac T ImGui::TabItemBackground(ImDrawList*, ImRect const&, int, unsigned int)
0206a29c 00000040 t GetTabBarFromTabBarRef(ImGuiPtrOrIndex const&)
0206a2dc 0000007c W ImVector<ImGuiPtrOrIndex>::reserve(int)
0206a358 000000a8 W ImVector<ImGuiPtrOrIndex>::push_back(ImGuiPtrOrIndex const&)
0206a400 000002d0 T ImGui::BeginTabBarEx(ImGuiTabBar*, ImRect const&, int)
0206a6d0 0000007c W ImVector<ImGuiTabItem>::reserve(int)
0206a74c 00000074 W ImVector<ImGuiTabItem>::resize(int)
0206a7c0 000000a4 W ImVector<ImGuiTabItem>::push_back(ImGuiTabItem const&)
0206a864 00000100 T ImGui::TabBarAddTab(ImGuiTabBar*, int, ImGuiWindow*)
0206a964 0000007c W ImVector<ImGuiShrinkWidthItem>::reserve(int)
0206a9e0 00000074 W ImVector<ImGuiShrinkWidthItem>::resize(int)
0206aa54 00000c08 t ImGui::TabBarLayout(ImGuiTabBar*)
0206b65c 00000168 T ImGui::EndTabBar()
0206b7c4 00000f58 T ImGui::TabItemEx(ImGuiTabBar*, char const*, bool*, int, ImGuiWindow*)
0206c71c 00000030 t ImGui_ImplGX2_GetBackendData()
0206c74c 000001d4 t ImGui_ImplGX2_SetupRenderState(ImDrawData*, int, int)
0206c9b0 0000009c T ImGui_ImplGX2_Init()
0206ca4c 000001e0 T ImGui_ImplGX2_CreateFontsTexture()
0206cc7c 00000050 W ImVector<ImDrawCmd>::operator[](int) const
0206cccc 00000544 T ImGui_ImplGX2_RenderDrawData(ImDrawData*)
0206d270 00000028 W void IM_DELETE<WHBGfxShaderGroup>(WHBGfxShaderGroup*)
0206d298 000000fc T ImGui_ImplGX2_CreateDeviceObjects()
0206d394 0000005c T ImGui_ImplGX2_NewFrame()
0206d3f0 00000030 t ImGui_ImplWiiU_GetBackendData()
0206d420 00000140 t ImGui_ImplWiiU_UpdateTouchInput(ImGui_ImplWiiU_ControllerInput*)
0206d570 0000095c t ImGui_ImplWiiU_UpdateControllerInput(ImGui_ImplWiiU_ControllerInput*)
0206decc 00000068 W nn::swkbd::ConfigArg::ConfigArg()
0206decc 00000068 W nn::swkbd::ConfigArg::ConfigArg()
0206df34 00000078 W nn::swkbd::AppearArg::AppearArg()
0206df34 00000078 W nn::swkbd::AppearArg::AppearArg()
0206dfac 00000058 W ImGui_ImplWiiU_Data::ImGui_ImplWiiU_Data()
0206dfac 00000058 W ImGui_ImplWiiU_Data::ImGui_ImplWiiU_Data()
0206e004 00000148 T ImGui_ImplWiiU_Init()
0206e15c 000000ac T ImGui_ImplWiiU_DrawKeyboardOverlay(ImGui_ImplWiiU_KeyboardOverlayType)
0206e208 00000068 W ImGuiInputTextState::ClearText()
0206e270 00000168 t ImGui_ImplWiiU_UpdateKeyboardInput(ImGui_ImplWiiU_ControllerInput*)
0206e3e8 0000014c T ImGui_ImplWiiU_ProcessInput(ImGui_ImplWiiU_ControllerInput*)
0206e534 00000070 W RootTask* rio::TaskMgr::createTask<RootTask>()
0206e5a4 00000080 W bool rio::Initialize<RootTask>(rio::InitializeArg const&)
0206e634 00000048 T main
0206e67c 000000a4 T Model::Model()
0206e67c 000000a4 T Model::Model()
0206e720 00000040 T Model::~Model()
0206e720 00000040 T Model::~Model()
0206e760 0000002c T Model::initialize_(FFLCharModelDesc const*)
0206e78c 00000080 T Model::updateMtxSRT_()
0206e80c 00000098 T Model::setViewUniform_(rio::BaseMtx34<float> const&, rio::BaseMtx34<float> const&, rio::BaseMtx44<float> const&)
0206e8b4 000000c0 T Model::drawOpaNormal_()
0206e984 00000098 T Model::drawOpaSpecial_()
0206ea2c 00000058 T Model::drawOpa(rio::BaseMtx34<float> const&, rio::BaseMtx44<float> const&)
0206ea84 000000c8 T Model::drawXluNormal_()
0206eb5c 00000160 T Model::drawXluSpecial_()
0206eccc 00000060 T Model::drawXlu(rio::BaseMtx34<float> const&, rio::BaseMtx44<float> const&)
0206ed2c 00000030 T Model::initializeCpu_()
0206ed5c 0000004c T Model::initializeGpu_(Shader const&)
0206eda8 00000030 T Model::setCharModelSource_(FFLMiddleDB const*, unsigned short)
0206edd8 00000048 W RootTask::~RootTask()
0206edd8 00000048 W RootTask::~RootTask()
0206ee20 00000054 W RootTask::~RootTask()
0206ee74 0000008c T RootTask::exit_()
0206ef00 000000b4 T RootTask::RootTask()
0206ef00 000000b4 T RootTask::RootTask()
0206efb4 000000f8 T RootTask::initImgui()
0206f0ac 000000ac W bool Model::initialize<FFLMiddleDB>(Model::InitArg<FFLMiddleDB> const&, Shader const&)
0206f168 000000f4 T RootTask::createModel_(unsigned short)
0206f25c 0000037c T RootTask::calc_()
0206f5d8 00000384 T RootTask::prepare_()
0206f98c 00000004 t (anonymous namespace)::getColorUniform(FFLColor const&)
0206f990 0000017c t (anonymous namespace)::safeNormalizeVec3(rio::BaseVec3<float>*)
0206fb0c 00000134 t (anonymous namespace)::gramSchmidtOrthonormalizeMtx34(rio::BaseMtx34<float>*)
0206fc40 00000118 T Shader::Shader()
0206fc40 00000118 T Shader::Shader()
0206fd58 00000050 T Shader::~Shader()
0206fd58 00000050 T Shader::~Shader()
0206fda8 000003a0 T Shader::initialize()
02070168 000000dc T Shader::bind(bool) const
02070254 00000028 T Shader::applyAlphaTest(bool, rio::Graphics::CompareFunc, float) const
0207028c 00000020 T Shader::applyAlphaTestCallback_(void*, bool, rio::Graphics::CompareFunc, float)
020702ac 00000078 T Shader::setCulling(FFLCullMode)
02070324 00000058 T Shader::bindTexture_(FFLModulateParam const&)
0207037c 0000003c T Shader::setConstColor_(unsigned int, FFLColor const&)
020703b8 00000030 T Shader::setModulateMode_(FFLModulateMode)
020703e8 000000b4 T Shader::setModulate_(FFLModulateParam const&)
0207049c 000000f4 T Shader::setMaterial_(FFLDrawParam const&)
02070590 000000e0 T Shader::draw_(FFLDrawParam const&)
02070690 00000020 T Shader::drawCallback_(void*, FFLDrawParam const&)
020706b0 00000060 T Shader::setMatrix_(rio::BaseMtx44<float> const&)
02070710 00000020 T Shader::setMatrixCallback_(void*, rio::BaseMtx44<float> const&)
02070730 00000170 W rio::Matrix34<float>::setInverseTranspose(rio::Matrix34<float> const&)
020708a0 0000011c T Shader::setViewUniform(rio::BaseMtx34<float> const&, rio::BaseMtx34<float> const&, rio::BaseMtx44<float> const&) const
020709bc 00000054 T getCafeVPADDevice(ImGui_ImplWiiU_ControllerInput*)
02070a10 00000088 T getCafeKPADDevice(ImGui_ImplWiiU_ControllerInput*)
02070a98 00000048 W __init_wut
02070ae0 00000038 W __fini_wut
02070b18 00000028 W __preinit_user
02070b40 0000000c T __wut_malloc_lock
02070b5c 0000000c T __wut_malloc_unlock
02070b78 0000000c T __init_wut_malloc_lock
02070b94 00000034 T __wut__abort
02070be8 00000150 T __wut__assert_func
02070d68 00000004 T _sbrk_r
02070d6c 00000008 T __syscall_lock_init
02070d74 00000004 T __syscall_lock_acquire
02070d78 00000004 T __syscall_lock_release
02070d7c 00000004 T __syscall_lock_close
02070d80 00000008 T __syscall_lock_init_recursive
02070d88 00000004 T __syscall_malloc_lock
02070d8c 00000004 T __syscall_malloc_unlock
02070d90 00000004 T __syscall_getreent
02070d94 0000003c T __syscall_exit
02070dd0 00000010 T __syscall_abort
02070de0 00000010 T __syscall_assert_func
02070df0 00000014 T __init_wut_newlib
02070e04 00000004 T __fini_wut_newlib
02070e08 000000a8 t __wut_thread_cleanup
02070eb0 00000104 T __wut_getreent
02070fd4 000000c8 T __wut_sbrk_r
020710ac 00000088 T __init_wut_sbrk_heap
02071154 00000060 T __fini_wut_sbrk_heap
020711c4 00000008 W wut_set_thread_specific
020711dc 00000008 W wut_get_thread_specific
020711f4 00000004 T __wut_alloc_from_defaultheap
020711f8 00000010 T __wut_alloc_from_defaultheap_ex
02071208 00000004 T __wut_free_to_defaultheap
0207120c 00000034 T __init_wut_defaultheap
02071240 00000044 t crashReportThread
02071284 000000c4 t disassemblyPrintCallback
02071348 000000c4 t writeRegister
0207140c 00000594 t handleException
02071a30 00000010 t handleProgram
02071a40 00000010 t handleISI
02071a50 00000010 t handleDSI
02071a60 00000010 t handleAlignment
02071a70 00000070 T WHBInitCrashHandler
02071af0 0000024c T WHBGfxLoadGFDPixelShader
02071d8c 0000004c T WHBGfxFreePixelShader
02071de8 0000024c T WHBGfxLoadGFDVertexShader
02072084 0000004c T WHBGfxFreeVertexShader
020720e0 0000021c T WHBGfxInitShaderAttribute
020722fc 00000080 T WHBGfxInitFetchShader
020723ac 000000b4 T WHBGfxFreeShaderGroup
02072470 000000ac T WHBGfxLoadGFDShaderGroup
0207251c 00000070 T WHBAddLogHandler
0207258c 00000068 T WHBRemoveLogHandler
020725f4 000000f0 T WHBLogPrint
020726e4 000001bc T WHBLogPrintf
020728a0 00000068 t cafeLogHandler
02072918 0000000c T WHBLogCafeInit
02072924 0000000c T WHBLogCafeDeinit
02072930 0000004c t udpLogHandler
0207297c 000000c4 T WHBLogUdpInit
02072a60 0000004c T WHBLogUdpDeinit
02072aac 00000094 t setLastError
02072b40 000000c4 t _GFDCheckHeaderVersions
02072c04 00000478 t _GFDGetGenericBlock
0207307c 000000f4 t _GFDGetBlockCount.part.0
02073170 0000011c t _GFDGetBlockDataSize
0207328c 00000058 T GFDGetPixelShaderCount
020732e4 00000010 T GFDGetPixelShaderHeaderSize
020732f4 00000010 T GFDGetPixelShaderProgramSize
02073304 00000058 T GFDGetPixelShader
0207335c 00000058 T GFDGetVertexShaderCount
020733b4 00000010 T GFDGetVertexShaderHeaderSize
020733c4 00000010 T GFDGetVertexShaderProgramSize
020733d4 00000048 T GFDGetVertexShader
0207341c 00000008 T __gthr_impl_active
02073424 00000004 T __gthr_impl_once
02073428 00000030 T __gthr_impl_key_delete
02073458 00000030 T __gthr_impl_getspecific
02073488 00000030 T __gthr_impl_setspecific
020734b8 00000004 T __gthr_impl_mutex_init_function
020734bc 00000004 T __gthr_impl_mutex_destroy
020734c0 00000004 T __gthr_impl_mutex_lock
020734c4 00000004 T __gthr_impl_mutex_unlock
020734c8 00000004 T __gthr_impl_recursive_mutex_init_function
020734cc 00000004 T __gthr_impl_recursive_mutex_lock
020734d0 00000004 T __gthr_impl_recursive_mutex_unlock
020734d4 00000004 T __gthr_impl_cond_init_function
020734d8 00000004 T __gthr_impl_cond_broadcast
020734dc 00000004 T __gthr_impl_cond_wait_recursive
020734e0 00000004 T __init_wut_stdcpp
020734e4 00000004 T __fini_wut_stdcpp
020734e8 0000006c T __wut_key_delete(__wut_key_t)
02073554 00000074 T __wut_getspecific(__wut_key_t)
020735c8 00000088 T __wut_setspecific(__wut_key_t, void const*)
02073650 00000004 T __wut_mutex_init_function(OSMutex*)
02073664 00000024 T __wut_mutex_lock(OSMutex*)
02073698 00000024 T __wut_mutex_unlock(OSMutex*)
020736cc 00000008 T __wut_mutex_destroy(OSMutex*)
020736d4 000000ac T __wut_once(unsigned int volatile*, void (*)())
020737b0 00000024 T __wut_recursive_mutex_init_function(OSMutex*)
020737e4 00000024 T __wut_recursive_mutex_lock(OSMutex*)
02073818 00000024 T __wut_recursive_mutex_unlock(OSMutex*)
0207384c 000001d0 T __init_wut_devoptab
02073a6c 0000008c T __fini_wut_devoptab
02073b18 000000a0 T __wut_fsa_dirclose
02073be8 000001ac T __wut_fsa_dirnext
02073dc4 00000168 T __wut_fsa_diropen
02073f6c 000000a0 T __wut_fsa_dirreset
0207403c 000000d4 T __wut_fsa_fstat
02074140 0000009c T __wut_fsa_fsync
0207420c 000000e0 T __wut_fsa_mkdir
020742fc 000004a4 T __wut_fsa_open
02074810 000001b4 T __wut_fsa_read
020749f4 00000114 T __wut_fsa_rename
02074b18 000000c4 T __wut_fsa_rmdir
02074bec 00000184 T __wut_fsa_seek
02074db0 00000118 T __wut_fsa_stat
02074ed8 00000168 T __wut_fsa_statvfs
02075050 000000c8 T __wut_fsa_ftruncate
02075158 000000c4 T __wut_fsa_unlink
0207522c 00000040 T __wut_fsa_hashstring
0207526c 0000035c T __wut_fsa_fixpath
020755c8 00000080 T __wut_fsa_translate_stat_mode
02075648 00000144 T __wut_fsa_translate_stat
0207578c 00000028 T __wut_fsa_translate_error
020757b4 000001d4 T __wut_fsa_write
020759b8 00000070 t nn::swkbd::allocForDynLoad(int, int, void**)
02075a38 00000010 t nn::swkbd::freeForDynLoad(void*)
02075a58 00000610 T nn::swkbd::Create(nn::swkbd::CreateArg const&)
02076108 00000010 T nn::swkbd::AppearInputForm(nn::swkbd::AppearArg const&)
02076118 00000010 T nn::swkbd::CalcSubThreadFont()
02076128 00000010 T nn::swkbd::CalcSubThreadPredict()
02076138 00000010 T nn::swkbd::Calc(nn::swkbd::ControllerInfo const&)
02076148 00000010 T nn::swkbd::DisappearInputForm()
02076158 00000010 T nn::swkbd::DrawDRC()
02076168 00000010 T nn::swkbd::DrawTV()
02076178 00000010 T nn::swkbd::GetInputFormString()
02076188 00000010 T nn::swkbd::GetStateInputForm()
02076198 00000008 T nn::swkbd::GetWorkMemorySize(unsigned int)
020761a0 00000010 T nn::swkbd::IsDecideCancelButton(bool*)
020761b0 00000010 T nn::swkbd::IsDecideOkButton(bool*)
020761c0 00000010 T nn::swkbd::IsNeedCalcSubThreadFont()
020761d0 00000010 T nn::swkbd::IsNeedCalcSubThreadPredict()
020761e0 000000cc T __wut_lock_init
020762cc 000000c0 T __wut_lock_close
0207639c 00000054 T __wut_lock_acquire
02076400 00000054 T __wut_lock_release
02076464 000000a8 T sendto
0207651c 00000094 T setsockopt
020765c0 00000058 T shutdown
02076628 000000d0 T socket
02076708 00000038 W __init_wut_socket
02076780 00000030 W __fini_wut_socket
020767e0 0000008c T __wut_get_nsysnet_fd
0207686c 00000088 T __wut_get_nsysnet_result
02076904 00000010 T __wut_socket_open
02076914 00000044 T __wut_socket_read
02076968 00000044 T __wut_socket_write
020769bc 0000001c T GfxHeapAllocMEM2
020769d8 00000010 T GfxHeapFreeMEM2
020769e8 00000004 T __wut_cond_init_function(OSCondition*)
020769fc 00000024 T __wut_cond_broadcast(OSCondition*)
02076a30 00000024 T __wut_cond_wait_recursive(OSCondition*, OSMutex*)
02076a64 00000120 T __wut_fsa_chdir
02076b94 000000e0 T __wut_fsa_chmod
02076c84 0000009c T __wut_fsa_close
02076d50 00000038 T __wut_socket_close
02076d98 0000017c t updatewindow
02076f14 0000005c t inflateStateCheck
02076f70 000000b8 T inflateResetKeep
02077028 00000114 T inflateReset2
0207713c 00000144 T inflateInit2_
02077280 00001f40 T inflate
020791c0 00000088 T inflateEnd
02079248 00000640 T inflate_table
02079888 00000008 T zcalloc
02079890 00000008 T zcfree
02079898 000003ec T adler32_z
02079c84 00000004 T adler32
02079c88 00000444 T crc32_z
0207a0cc 00000004 T crc32
0207a0d0 0000070c T inflate_fast
0207a7dc 0000007c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0207a858 00000018 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0207a870 00000010 T __cxxabiv1::__class_type_info::~__class_type_info()
0207a870 00000010 T __cxxabiv1::__class_type_info::~__class_type_info()
0207a880 00000040 T __cxxabiv1::__class_type_info::~__class_type_info()
0207a8c0 00000094 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0207a954 00000104 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0207aa58 00000138 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0207ab90 00000004 T operator delete(void*)
0207ab94 00000004 T operator delete(void*, unsigned int)
0207ab98 00000004 T operator delete[](void*)
0207ab9c 000000c4 T __cxa_begin_catch
0207ac60 000000c0 T __cxa_end_catch
0207ad20 00000068 t eh_globals_dtor(void*)
0207ad88 0000004c T __cxa_get_globals_fast
0207add4 000000bc T __cxa_get_globals
0207ae90 000000a0 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
0207af30 0000013c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0207b06c 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0207b0d4 0000011c t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0207b1f0 00000138 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
0207b328 000007a4 T __gxx_personality_v0
0207bacc 000000f8 T __cxa_call_unexpected
0207bbc4 00000020 T __cxxabiv1::__terminate(void (*)())
0207bbe4 00000024 T std::terminate()
0207bc08 00000018 T __cxxabiv1::__unexpected(void (*)())
0207bc20 00000024 T std::unexpected()
0207bc44 00000018 T std::get_terminate()
0207bc5c 00000018 T std::get_unexpected()
0207bc74 0000008c t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
0207bd00 00000070 T __cxa_init_primary_exception
0207bd70 00000068 T __cxa_throw
0207bdd8 0000008c T __cxa_rethrow
0207be64 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0207be70 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0207be7c 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0207be88 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0207be94 00000010 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0207be94 00000010 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0207bea4 00000040 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0207bee4 00000010 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0207bee4 00000010 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0207bef4 00000040 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0207bf34 00000010 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0207bf34 00000010 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0207bf44 00000040 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0207bf84 00000010 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0207bf84 00000010 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0207bf94 00000040 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0207bfd4 00000064 t (anonymous namespace)::init_static_cond()
0207c038 00000064 t (anonymous namespace)::init()
0207c09c 00000264 T __cxa_guard_acquire
0207c300 00000118 T __cxa_guard_release
0207c418 00000010 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0207c418 00000010 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0207c428 00000040 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0207c468 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0207c468 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0207c478 00000080 T operator new(unsigned int)
0207c4f8 00000004 T operator new[](unsigned int)
0207c4fc 00000010 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0207c4fc 00000010 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0207c50c 00000040 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0207c54c 000001d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0207c720 000000b4 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0207c7d4 00000094 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0207c868 00000004 T std::type_info::~type_info()
0207c868 00000004 T std::type_info::~type_info()
0207c86c 00000008 T std::type_info::__is_pointer_p() const
0207c86c 00000008 T std::type_info::__is_function_p() const
0207c874 00000010 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0207c874 00000010 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0207c884 00000040 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0207c8c4 00000188 T __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0207ca4c 00000748 T __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0207d194 000002f8 T __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0207d48c 0000006c T std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
0207d4f8 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0207d560 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0207d578 00000020 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
0207d598 00000148 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0207d6e0 0000015c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
0207d83c 000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0207d83c 000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0207d8ec 0000014c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0207da38 000000d8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0207db10 000001b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
0207dcc0 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned int, char)
0207dcf8 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
0207ddf8 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0207de2c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0207de98 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0207dfbc 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int) const
0207e014 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char, unsigned int) const
0207e084 000000d4 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
0207e158 00000040 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0207e158 00000040 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0207e198 000000b4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0207e24c 0000000c T std::bad_alloc::what() const
0207e258 00000010 T std::bad_alloc::~bad_alloc()
0207e258 00000010 T std::bad_alloc::~bad_alloc()
0207e268 00000040 T std::bad_alloc::~bad_alloc()
0207e2a8 0000000c T std::bad_array_new_length::what() const
0207e2b4 00000010 T std::bad_array_new_length::~bad_array_new_length()
0207e2b4 00000010 T std::bad_array_new_length::~bad_array_new_length()
0207e2c4 00000040 T std::bad_array_new_length::~bad_array_new_length()
0207e304 00000144 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0207e448 000000fc t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0207e544 00000064 T __cxa_allocate_exception
0207e5a8 00000030 T __cxa_free_exception
0207e5d8 00000058 T __cxa_call_terminate
0207e630 00000004 T std::exception::~exception()
0207e630 00000004 T std::exception::~exception()
0207e634 00000004 T std::bad_exception::~bad_exception()
0207e634 00000004 T std::bad_exception::~bad_exception()
0207e638 0000000c T transaction clone for std::exception::what() const
0207e638 0000000c T std::exception::what() const
0207e644 0000000c T transaction clone for std::bad_exception::what() const
0207e644 0000000c T std::bad_exception::what() const
0207e650 00000008 T std::bad_exception::~bad_exception()
0207e658 00000018 T std::get_new_handler()
0207e670 00000008 T std::logic_error::what() const
0207e670 00000008 T std::runtime_error::what() const
0207e678 000000c8 T std::out_of_range::~out_of_range()
0207e740 000000cc T std::length_error::~length_error()
0207e740 000000cc T std::length_error::~length_error()
0207e80c 000000cc T std::logic_error::~logic_error()
0207e80c 000000cc T std::logic_error::~logic_error()
0207e8d8 000000cc T std::out_of_range::~out_of_range()
0207e8d8 000000cc T std::out_of_range::~out_of_range()
0207e9a4 000000c8 T std::logic_error::~logic_error()
0207ea6c 000000c8 T std::length_error::~length_error()
0207eb34 00000118 T std::logic_error::logic_error(char const*)
0207eb34 00000118 T std::logic_error::logic_error(char const*)
0207ec4c 00000038 T std::length_error::length_error(char const*)
0207ec4c 00000038 T std::length_error::length_error(char const*)
0207ec84 00000038 T std::out_of_range::out_of_range(char const*)
0207ec84 00000038 T std::out_of_range::out_of_range(char const*)
0207ecbc 000000ac W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0207ed68 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
0207ed6c 00000114 T ceilf
0207ee80 00000078 T fminf
0207eef8 00000088 T acosf
0207ef80 00000110 T floorf
0207f090 000000e0 T cosf
0207f170 0000031c T __ieee754_acosf
0207f48c 00000074 T sqrtf
0207f500 00000004 T atan2f
0207f504 00000078 T fmaxf
0207f57c 00000088 T tanf
0207f604 0000000c T nanf
0207f610 00000188 T __kernel_cosf
0207f798 000000e4 T sinf
0207f87c 00000058 T __fpclassifyf
0207f8d4 00000158 T __ieee754_sqrtf
0207fa2c 00000270 T __ieee754_atan2f
0207fc9c 00000290 T atanf
0207ff2c 000000cc T __kernel_sinf
0207fff8 00000418 T __ieee754_rem_pio2f
02080410 000002e4 T __kernel_tanf
020806f4 00000020 T fabsf
02080714 0000000c T nan
02080720 00000ee0 T __kernel_rem_pio2f
02081600 00000174 T scalbnf
02081774 00000040 T __fixsfdi
020817b4 00000040 T __fixdfdi
020817f4 000000fc T __fixunssfdi
020818f0 000000fc T __fixunsdfdi
020819ec 0000009c T __floatdisf
02081a88 00000050 T __floatdidf
02081ad8 000003ec T __divdi3
02081ec4 000003bc T __udivdi3
02082280 0000001c T __gthread_active_p
0208229c 0000001c T __gthread_once
020822b8 0000001c T __gthread_key_create
020822d4 00000044 T __gthread_key_delete
02082318 00000044 T __gthread_getspecific
0208235c 00000044 T __gthread_setspecific
020823a0 00000014 T __gthread_mutex_init_function
020823b4 0000001c T __gthread_mutex_destroy
020823d0 0000001c T __gthread_mutex_lock
020823ec 0000001c T __gthread_mutex_unlock
02082408 0000001c T __gthread_recursive_mutex_init_function
02082424 0000001c T __gthread_recursive_mutex_lock
02082440 0000001c T __gthread_recursive_mutex_unlock
0208245c 00000014 T __gthread_cond_init_function
02082470 0000001c T __gthread_cond_broadcast
0208248c 0000001c T __gthread_cond_wait_recursive
020824a8 00000048 T __eabi
020824f0 000001d0 t init_dwarf_reg_size_table
020826c0 000001d0 t uw_install_context_1
02082890 0000018c t read_encoded_value
02082a1c 0000087c t execute_stack_op
02083298 00000394 t uw_update_context_1
0208362c 000008ec t execute_cfa_program_specialized
02083f18 00000924 t execute_cfa_program_generic
0208483c 00000534 t uw_frame_state_for
02084d70 000002d0 t uw_init_context_1
02085040 000001c4 t _Unwind_RaiseException_Phase2
02085204 000001f4 t _Unwind_ForcedUnwind_Phase2
020853f8 00000068 T _Unwind_SetGR
02085460 00000014 T _Unwind_GetIPInfo
02085474 00000008 T _Unwind_SetIP
0208547c 00000008 T _Unwind_GetLanguageSpecificData
02085484 00000008 T _Unwind_GetRegionStart
0208548c 00000008 T _Unwind_GetDataRelBase
02085494 00000008 T _Unwind_GetTextRelBase
0208549c 00000004 t _Unwind_DebugHook
020854a0 000002f4 T _Unwind_RaiseException
02085794 000001dc T _Unwind_Resume
02085970 000001e0 T _Unwind_Resume_or_Rethrow
02085b50 0000001c T _Unwind_DeleteException
02085b6c 00000020 t fde_unencoded_compare
02085b8c 00000074 t fde_unencoded_extract
02085c00 00000140 t frame_downheap
02085d40 0000000c t init_object_mutex
02085d4c 0000013c t read_encoded_value_with_base
02085e88 0000028c t fde_radixsort
02086114 0000015c t __deregister_frame_info_bases.part.0
02086270 0000014c t get_cie_encoding
020863bc 000000fc t fde_mixed_encoding_extract
020864b8 0000024c t classify_object_over_fdes.constprop.0
02086704 00000108 t fde_single_encoding_extract
0208680c 000000d0 t fde_single_encoding_compare
020868dc 0000015c t fde_mixed_encoding_compare
02086a38 000002bc t add_fdes.isra.0
02086cf4 00000310 t linear_search_fdes
02087004 000006b0 t search_object
020876b4 0000009c T __register_frame_info
02087750 00000020 T __deregister_frame_info
02087770 00000260 T _Unwind_Find_FDE
020879d0 00000024 T __assert_func
020879f4 000001b4 T chdir
02087ba8 00000278 T _concatenate_path
02087e20 00000020 T __getreent
02087e40 000000e0 T __release_handle
02087f20 00000120 T __alloc_handle
02088040 00000090 T __get_handle
020880d0 00000178 T _close_r
02088248 00000008 t null_write
02088250 00000018 T setDefaultDevice
02088268 0000014c T FindDevice
020883b4 00000044 T RemoveDevice
020883f8 00000118 T AddDevice
02088510 00000014 T __libc_lock_init
02088524 00000014 T __libc_lock_acquire
02088538 00000014 T __libc_lock_release
0208854c 00000014 T __libc_lock_close
02088560 00000014 T __libc_lock_init_recursive
02088574 00000014 T __malloc_lock
02088588 00000014 T __malloc_unlock
0208859c 00000028 T _exit
020885c4 00000108 T strncpy
020886cc 0000009c T strcmp
02088768 00000060 T rand
020887c8 00000038 T getenv
02088800 00000198 T memset
02088998 0000042c T _fread_r
02088dc4 00000060 T fread
02088e24 000000ec T _vsnprintf_r
02088f10 00000060 T vsnprintf
02088f70 00001024 T qsort
02089f94 00000054 T ftell
02089fe8 00000084 t sulp
0208a06c 0000151c T _strtod_l
0208b588 0000008c T _strtod_r
0208b614 00000190 T __smakebuf_r
0208b7a4 000000dc T sscanf
0208b880 00000030 T strdup
0208b8b0 0000004c T __locale_mb_cur_max
0208b8fc 00000154 T strchr
0208ba50 0000233c T _svfprintf_r
0208dd8c 0000016c t rshift
0208def8 00000954 T __gethex
0208e84c 00000140 t critical_factorization
0208e98c 00000408 t two_way_long_needle
0208ed94 000002c0 T strstr
0208f054 00000124 T memcpy
0208f178 00000210 t _strtoul_l.isra.0
0208f388 00000060 T _strtoul_r
0208f3e8 00000064 T strtoul
0208f44c 00000300 T __utf8_mbtowc
0208f74c 00000030 T close
0208f77c 00000244 T _ftello_r
0208f9c0 000002f4 T __sflush_r
0208fcb4 00000108 T _fflush_r
0208fdbc 00000058 T fflush
0208fe14 000000dc T strncmp
0208fef0 00000110 T _wcrtomb_r
02090000 000001bc T memmove
020901bc 00000040 T calloc
020901fc 00000088 T vsprintf
02090284 00000020 T __errno
020902a4 00000100 T _calloc_r
020903a4 00000080 T strlen
02090424 0000006c T _strdup_r
02090490 000001dc T _memalign_r
0209066c 0000085c T _malloc_r
02090ec8 0000030c t quorem
020911d4 00001470 T _dtoa_r
02092644 00000138 T _malloc_trim_r
0209277c 00000330 T _free_r
02092aac 00001ee8 T __ssvfscanf_r
02094994 00000010 T _fseek_r
020949a4 00000054 T fseek
020949f8 0000013c T memcmp
02094b34 00000238 t _strtol_l.isra.0
02094d6c 00000060 T _strtol_r
02094dcc 000001e0 T _fclose_r
02094fac 00000030 T fclose
02094fdc 00000108 T __utf8_wctomb
020950e4 00000078 T strrchr
0209515c 000006c0 T _fseeko_r
0209581c 00000184 T snprintf
020959a0 00000120 T stpncpy
02095ac0 00000058 T malloc
02095b18 00000030 T free
02095b48 00000074 T __sread
02095bbc 00000008 T __seofread
02095bc4 000000b8 T __swrite
02095c7c 00000070 T __sseek
02095cec 00000008 T __sclose
02095cf4 0000010c T _reclaim_reent
02095e00 00000008 T iswspace
02095e08 0000012c T _mbrtowc_r
02095f34 00000040 t lflush
02095f74 000001fc T __srefill_r
02096170 00000144 T _findenv_r
020962b4 000001a8 T _fwrite_r
0209645c 00000060 T fwrite
020964bc 0000001c t stdio_exit_handler
020964d8 00000088 t cleanup_stdio
02096560 00000184 t global_stdio_init.part.0
020966e4 000001d0 T __sfp
020968b4 000000a4 T __sinit
02096958 00000040 T __sfp_lock_acquire
02096998 0000000c T __sfp_lock_release
020969a4 000005b0 T __sfvwrite_r
02096f54 000001b0 T memchr
02097104 00000014 T atexit
02097118 0000010c T __ssprint_r
02097224 000000d0 T sprintf
020972f4 000000c8 T strnlen
020973bc 0000009c T printf
02097458 000000f4 T _sungetc_r
0209754c 00000080 T __ssrefill_r
020975cc 000000c8 T _sfread_r
02097694 00000054 T __match
020976e8 0000056c T __hexnan
02097c54 000000f0 T __submore
02097d44 00000158 T _fopen_r
02097e9c 00000040 T fopen
02097edc 00000040 T memalign
02097f1c 00000090 T frexp
02097fac 000002f8 t _strtoll_l.isra.0
020982a4 00000060 T _strtoll_r
02098304 00000040 T __env_lock
02098344 0000000c T __env_unlock
02098350 000000e0 T _Balloc
02098430 00000024 T _Bfree
02098454 00000154 T __multadd
020985a8 00000158 T __s2b
02098700 0000007c T __hi0bits
0209877c 000000b4 T __lo0bits
02098830 00000108 T __i2b
02098938 00000310 T __multiply
02098c48 0000017c T __pow5mult
02098dc4 0000026c T __lshift
02099030 000000dc T __mcmp
0209910c 00000318 T __mdiff
02099424 00000094 T __ulp
020994b8 000001a4 T __b2d
0209965c 000001a0 T __d2b
020997fc 000000e8 T __ratio
020998e4 00000118 T __copybits
020999fc 000000e4 T __any_on
02099ae0 00000168 T __sccl
02099c48 000000b4 T _fwalk_sglue
02099cfc 0000004c T _localeconv_r
02099d48 00002478 T _vfprintf_r
0209c1c0 00000100 t __sbprintf
0209c2c0 00000010 T _wcsrtombs_r
0209c2d0 00000060 T iswspace_l
0209c330 000002fc t _strtoull_l.isra.0
0209c62c 00000060 T _strtoull_r
0209c68c 00000188 T __ssputs_r
0209c814 00000040 T realloc
0209c854 000000b8 T __sflags
0209c90c 0000016c T __swsetup_r
0209ca78 00000214 T _wcsnrtombs_l
0209cc8c 000000d8 T _wcsnrtombs_r
0209cd64 00000200 T __call_exitprocs
0209cf64 0000012c T __register_exitproc
0209d090 00000584 T _realloc_r
0209d614 00000094 T category
0209d6a8 00000060 T __sprint_r
0209d708 00000038 T __flockfile
0209d740 00000008 T __funlockfile
0209d748 000000b0 T _fstat_r
0209d7f8 00000008 T _isatty_r
0209d800 000000e0 T _lseek_r
0209d8e0 00000128 T _open_r
0209da08 000000c4 T _read_r
0209dacc 000000c4 T _write_r
0209db90 00000390 T __umoddi3
0209df20 00000058 T _restfpr_14_x
0209df24 00000054 T _restfpr_15_x
0209df28 00000050 T _restfpr_16_x
0209df2c 0000004c T _restfpr_17_x
0209df30 00000048 T _restfpr_18_x
0209df34 00000044 T _restfpr_19_x
0209df38 00000040 T _restfpr_20_x
0209df3c 0000003c T _restfpr_21_x
0209df40 00000038 T _restfpr_22_x
0209df44 00000034 T _restfpr_23_x
0209df48 00000030 T _restfpr_24_x
0209df4c 0000002c T _restfpr_25_x
0209df50 00000028 T _restfpr_26_x
0209df54 00000024 T _restfpr_27_x
0209df58 00000020 T _restfpr_28_x
0209df5c 0000001c T _restfpr_29_x
0209df60 00000018 T _restfpr_30_x
0209df64 00000014 T _restfpr_31_x
0209df78 00000058 T _restgpr_14_x
0209df7c 00000054 T _restgpr_15_x
0209df80 00000050 T _restgpr_16_x
0209df84 0000004c T _restgpr_17_x
0209df88 00000048 T _restgpr_18_x
0209df8c 00000044 T _restgpr_19_x
0209df90 00000040 T _restgpr_20_x
0209df94 0000003c T _restgpr_21_x
0209df98 00000038 T _restgpr_22_x
0209df9c 00000034 T _restgpr_23_x
0209dfa0 00000030 T _restgpr_24_x
0209dfa4 0000002c T _restgpr_25_x
0209dfa8 00000028 T _restgpr_26_x
0209dfac 00000024 T _restgpr_27_x
0209dfb0 00000020 T _restgpr_28_x
0209dfb4 0000001c T _restgpr_29_x
0209dfb8 00000018 T _restgpr_30_x
0209dfbc 00000014 T _restgpr_31_x
0209dfd0 t __do_global_ctors_aux
0209e020 T __fini
10000000 D __SBSS2_END__
10000000 D __SDATA2_START__
10000000 00000018 d FFLiiGetEyebrowRotateOffset(int)::ROTATE
10000018 0000003e d FFLiiGetEyeRotateOffset(int)::ROTATE
10008000 d _SDA2_BASE_
1000e54c d .LC2
10010994 00000020 d FFLiCopySurfaceDrawer::SetupCPU()::TEXCOORD_BUFFER
100109b4 00000020 d FFLiCopySurfaceDrawer::SetupCPU()::POSITION_BUFFER
10010a00 00000090 d FFLiCopySurfaceShaderObj_PS_shaderPtr
10010b00 00000128 d FFLiCopySurfaceShaderObj_VS_shaderPtr
10010c4c 0000000c d (anonymous namespace)::SHAPE_TYPE_INFO_1
10010c58 0000000c d (anonymous namespace)::SHAPE_TYPE_INFO_0
10010c94 00000008 d (anonymous namespace)::MODEL_TYPE
10010c9c 0000000c d (anonymous namespace)::SHAPE_TYPE_INFO_1
10010ca8 0000000c d (anonymous namespace)::SHAPE_TYPE_INFO_0
10010cb4 00000024 d (anonymous namespace)::UPDATE_BOUNDING_BOX
10011128 0000000a d (anonymous namespace)::GetDefaultCreateID(FFLCreateID*, unsigned int)::defaultCreateID
10011132 00000144 d MII_DATA_CORE_RFL
10011278 00000013 V typeinfo name for rio::FileHandle
1001128c 00000010 V vtable for rio::FileHandle
100112e4 0000006c d (anonymous namespace)::RANDOM_GLASS_TYPE
10011350 00000090 d (anonymous namespace)::RANDOM_PARTS_ARRAY_EYE_COLOR
100113e0 000001b0 d (anonymous namespace)::RANDOM_PARTS_ARRAY_HAIR_COLOR
10011590 00000120 d (anonymous namespace)::RANDOM_PARTS_ARRAY_FACELINE_COLOR
100116b0 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_FACE_MAKEUP
10011a10 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_FACE_LINE
10011d70 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_MOUTH_TYPE
100120d0 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_NOSE_TYPE
10012430 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_EYEBROW_TYPE
10012790 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_EYE_TYPE
10012af0 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_HAIR_TYPE
10012e50 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_FACE_TYPE
100131b0 00000034 d MONTH_OF_DAY
100131e4 00000020 d (anonymous namespace)::InitAttributes(FFLAttributeBufferParam*, unsigned int)::TEXCOORD_BUFFER
10013204 00000008 d (anonymous namespace)::InitPrimitive(FFLPrimitiveParam*)::INDEX_BUFFER
1001324c 0000017c d (anonymous namespace)::CORRECT_PARAM
100133c8 00000010 d FFLiRenderMaskTextures(FFLiMaskTextures*, FFLiMaskTexturesTempObject*, FFLiShaderCallback const*, FFLiCopySurface*)::BLACK
100133d8 00000060 d (anonymous namespace)::RFL_FACE_LINE_AND_MAKE
10013438 00000038 d SWAP_ENDIAN_DESC
10013470 00000010 d FILL_COLOR
100134ac 000000e4 d (anonymous namespace)::EYE_MOUTH_TYPE_ELEMENT
10013590 0000003c d (anonymous namespace)::InitAttributesForFill(FFLAttributeBufferParam*)::ATTRIBUTES
100135cc 00000040 d (anonymous namespace)::InitAttributesForFill(FFLAttributeBufferParam*)::POSITION_BUFFER
1001360c 0000003c d (anonymous namespace)::InitAttributes(FFLAttributeBufferParam*, FFLiOriginPosition, rio::BaseMtx44<float> const*)::ATTRIBUTES
10013648 00000008 d (anonymous namespace)::InitPrimitive(FFLPrimitiveParam*)::INDEX_BUFFER
1001377c 00000010 d (anonymous namespace)::RESOUCE_FILE_NAME
100137a0 00000018 d FFLiLoadShape(void**, FFLDrawParam*, FFLBoundingBox*, FFLiCharModel*, FFLiShapePartsType, unsigned short, FFLiResourceLoader*)::INVALID_BOUNDING_BOX
100137b8 00000006 d FFLiSystemContext::Init(unsigned int)::DEFAULT_CREATE_ID_BASE
100137c0 00000050 d FFLiUtilShader::BuildShader(FFLiUtilShader::FetchShader*, GX2VertexShader const*, FFLiUtilShader::AttributeStreamDesc const*, unsigned int, bool)::compMap
10013810 00000014 V typeinfo name for FFLiZlibInterface
10013824 00000013 V typeinfo name for FFLiZlibInflator
10013838 0000000c V typeinfo for FFLiZlibInflator
10013844 00000014 V vtable for FFLiZlibInterface
10013858 00000014 V vtable for FFLiZlibInflator
100138ac 00000017 V typeinfo name for rio::ControllerBase
100138c4 00000013 V typeinfo name for rio::Controller
100138d8 00000018 V typeinfo for rio::Controller
100138f0 00000024 V vtable for rio::Controller
10013914 0000000d V typeinfo name for rio::ITask
10013924 00000016 V typeinfo name for rio::ControllerMgr
1001393c 0000000c V typeinfo for rio::ControllerMgr
10013948 00000020 V vtable for rio::ITask
10013968 00000020 V vtable for rio::ControllerMgr
10013988 0000001a V typeinfo name for rio::CafeDRCController
100139a4 0000000c V typeinfo for rio::CafeDRCController
100139b0 00000024 V vtable for rio::CafeDRCController
100139d4 0000001d V typeinfo name for rio::CafeRemoteController
100139f4 0000000c V typeinfo for rio::CafeRemoteController
10013a00 00000024 V vtable for rio::CafeRemoteController
10013a24 00000016 V typeinfo name for rio::ControlDevice
10013a3c 00000017 V typeinfo name for rio::CafeVPadDevice
10013a54 0000000c V typeinfo for rio::CafeVPadDevice
10013a60 00000014 V vtable for rio::ControlDevice
10013a74 00000014 V vtable for rio::CafeVPadDevice
10013a88 00000017 V typeinfo name for rio::CafeWPadDevice
10013aa0 0000000c V typeinfo for rio::CafeWPadDevice
10013aac 00000014 V vtable for rio::CafeWPadDevice
10013ac0 0000001a V typeinfo name for rio::ContentFileDevice
10013adc 0000000c V typeinfo for rio::ContentFileDevice
10013ae8 00000040 V vtable for rio::ContentFileDevice
10013b28 00000015 V typeinfo name for rio::LinkListNode
10013b40 00000024 V typeinfo name for rio::TListNode<rio::FileDevice*>
10013b64 0000000c V typeinfo for rio::TListNode<rio::FileDevice*>
10013b70 00000013 V typeinfo name for rio::FileDevice
10013b84 00000018 V typeinfo for rio::FileDevice
10013b9c 00000040 V vtable for rio::FileDevice
10013bdc 00000019 V typeinfo name for rio::NativeFileDevice
10013bf8 0000000c V typeinfo for rio::NativeFileDevice
10013c04 00000040 V vtable for rio::NativeFileDevice
10013c44 0000000e V typeinfo name for rio::Camera
10013c54 00000015 V typeinfo name for rio::LookAtCamera
10013c6c 0000000c V typeinfo for rio::LookAtCamera
10013c78 0000000c V vtable for rio::LookAtCamera
10013c84 00000022 V rio::PrimitiveRenderer::getWireCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cIdx
10013ca6 00000048 V rio::PrimitiveRenderer::getCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cIdx
10013cf0 00000120 V rio::PrimitiveRenderer::getCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cVtx
10013e10 00000048 V rio::PrimitiveRenderer::getLineVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cVtx
10013e58 0000000c V rio::PrimitiveRenderer::getQuadVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cIdx
10013e64 00000090 V rio::PrimitiveRenderer::getQuadVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cVtx
10013ef4 00000008 d rio::PrimitiveRenderer::initialize_(char const*)::idx
10013efc 00000013 V typeinfo name for rio::Projection
10013f10 0000001e V typeinfo name for rio::PerspectiveProjection
10013f30 0000000c V typeinfo for rio::PerspectiveProjection
10013f3c 00000018 V typeinfo name for rio::OrthoProjection
10013f54 0000000c V typeinfo for rio::OrthoProjection
10013f60 0000000c V vtable for rio::Projection
10013f6c 0000000c V vtable for rio::PerspectiveProjection
10013f78 0000000c V vtable for rio::OrthoProjection
10013f9c 00000015 V typeinfo name for rio::RenderTarget
10013fb4 0000001a V typeinfo name for rio::RenderTargetColor
10013fd0 0000000c V typeinfo for rio::RenderTargetColor
10013fdc 0000001a V typeinfo name for rio::RenderTargetDepth
10013ff8 0000000c V typeinfo for rio::RenderTargetDepth
10014004 00000014 V vtable for rio::RenderTarget
10014018 00000014 V vtable for rio::RenderTargetColor
1001402c 00000014 V vtable for rio::RenderTargetDepth
10014040 000000d8 d rio::TextureFormatUtil::getDefaultCompMap(rio::TextureFormat)::compMap
10014118 00000020 d rio::RenderState::applyCullingAndPolygonModeAndPolygonOffset() const::cCullSettings
10014138 00000020 d rio::RenderState::apply() const::cCullSettings
10014158 00000050 d rio::VertexArray::process()::sFormatMask
1001428c 00000040 D rio::Matrix44<float>::ident
100142cc 00000030 D rio::Matrix34<float>::ident
10014350 00000268 d GKeyNames
100145b8 00000070 d resize_border_def
10014628 00000060 d resize_grip_def
10014688 00000058 d GLocalizationEntriesEnUS
100146e0 00000168 d GStyleVarInfo
10014848 00000018 d GWindowDockStyleColors
10014860 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shifte
10014874 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shiftc
10014888 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::mins
1001489c 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::masks
100148b0 00000020 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::lengths
100148d0 00000400 d GCrc32LookupTable
10014f74 00002ecd d proggy_clean_ttf_compressed_data_base85
10017e42 00000006 d ImFontAtlas::GetGlyphRangesDefault()::ranges
10017e48 000000d8 d FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA
10017f20 00000cdf d FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS
10018cb0 0000000c d cInitializeArg
10018cc8 0000000a V typeinfo name for RootTask
10018cd4 0000000c V typeinfo for RootTask
10018ce0 0000000c V vtable for rio::Camera
10018cec 00000020 V vtable for RootTask
10018d0c 0000000c d RootTask::calc_()::CENTER_POS
10018d24 00000024 d Shader::setMatrix_(rio::BaseMtx44<float> const&)::ident33
10018d48 00000010 d (anonymous namespace)::cRimColor
10018d58 0000000c d (anonymous namespace)::cLightDir
10018d64 00000010 d (anonymous namespace)::cLightSpecular
10018d74 00000010 d (anonymous namespace)::cLightDiffuse
10018d84 00000010 d (anonymous namespace)::cLightAmbient
10018d94 000001f8 d (anonymous namespace)::cMaterialParam
10018f8c 0000001a d __FUNCTION__.0
10018fa8 00000019 d __FUNCTION__.1
10018fc4 00000014 d __FUNCTION__.0
10018fd8 00000012 d __FUNCTION__.1
10018fec 00000022 d __FUNCTION__.2
10019010 00000016 d __FUNCTION__.3
10019028 00000018 d __FUNCTION__.4
10019040 00000080 d __wut_fsa_devoptab
100190c0 00000042 d CSWTCH.24
10019104 00000034 d __wut_nsysnet_error_code_map
100191b4 00000080 d distfix.0
10019234 00000800 d lenfix.1
10019a34 00000026 d order.2
10019a5c 00000040 d dext.0
10019a9c 00000040 d dbase.1
10019adc 0000003e d lext.2
10019b1c 0000003e d lbase.3
10019b5c 00001000 d crc_braid_big_table
1001ab5c 00000400 d crc_big_table
1001af5c 00000400 d crc_table
1001b35c 00000022 V typeinfo name for __cxxabiv1::__class_type_info
1001b380 0000000c V typeinfo for __cxxabiv1::__class_type_info
1001b38c 0000002c V vtable for __cxxabiv1::__class_type_info
1001b3ec 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
1001b414 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
1001b420 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
1001b44c 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
1001b458 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
1001b484 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
1001b490 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
1001b4b8 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
1001b4c4 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
1001b4d8 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
1001b4ec 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
1001b500 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
1001b514 00000023 V typeinfo name for __gnu_cxx::recursive_init_error
1001b538 0000000c V typeinfo for __gnu_cxx::recursive_init_error
1001b544 00000014 V vtable for __gnu_cxx::recursive_init_error
1001b558 00000025 V typeinfo name for __cxxabiv1::__si_class_type_info
1001b580 0000000c V typeinfo for __cxxabiv1::__si_class_type_info
1001b58c 0000002c V vtable for __cxxabiv1::__si_class_type_info
1001b5b8 0000000d V typeinfo name for std::type_info
1001b5c8 00000026 V typeinfo name for __cxxabiv1::__vmi_class_type_info
1001b5f0 0000000c V typeinfo for __cxxabiv1::__vmi_class_type_info
1001b5fc 0000002c V vtable for __cxxabiv1::__vmi_class_type_info
1001b628 0000000d V typeinfo name for std::bad_alloc
1001b638 0000000c V typeinfo for std::bad_alloc
1001b644 00000014 V vtable for std::bad_alloc
1001b658 00000019 V typeinfo name for std::bad_array_new_length
1001b674 0000000c V typeinfo for std::bad_array_new_length
1001b680 00000014 V vtable for std::bad_array_new_length
1001b694 0000000d V typeinfo name for std::exception
1001b6a4 00000012 V typeinfo name for std::bad_exception
1001b6b8 0000000c V typeinfo for std::bad_exception
1001b6c4 00000020 V typeinfo name for __cxxabiv1::__forced_unwind
1001b6e4 00000024 V typeinfo name for __cxxabiv1::__foreign_exception
1001b708 00000014 V vtable for std::bad_exception
1001b71c 00000010 V typeinfo name for std::logic_error
1001b72c 0000000c V typeinfo for std::logic_error
1001b738 00000011 V typeinfo name for std::length_error
1001b74c 0000000c V typeinfo for std::length_error
1001b758 00000011 V typeinfo name for std::out_of_range
1001b76c 0000000c V typeinfo for std::out_of_range
1001b778 00000014 V vtable for std::logic_error
1001b78c 00000014 V vtable for std::length_error
1001b7a0 00000014 V vtable for std::out_of_range
1001b7b4 00000004 d tiny
1001b7b8 00000004 d one
1001b7bc 0000000c d CSWTCH.9
1001b7c8 0000000c d CSWTCH.8
1001b7d4 00000010 d atanlo
1001b7e4 00000010 d atanhi
1001b7f4 00000080 d npio2_hw
1001b874 00000318 d two_over_pi
1001bb8c 0000002c d PIo2
1001bbb8 0000000c d init_jk
1001c0a8 00000008 d terminator.0
1001c0b0 00000080 D dotab_stdnull
1001c200 00000014 d fpinan.0
1001c214 00000014 d fpi.1
1001c228 00000028 d tinytens
1001c43c 00000010 d zeroes.0
1001c44c 00000010 d blanks.1
1001c45c 00000100 D __hexdig
1001c82c 00000022 d basefix.0
1001c850 00000101 D _ctype_
1001c954 0000000c d p05.0
1001c960 00000028 D __mprec_bigtens
1001c988 000000c8 D __mprec_tens
1001cbbc 00000010 d zeroes.0
1001cbcc 00000010 d blanks.1
1001cbdc 000035dc d categories
100208f0 d __CTOR_LIST__
100208f8 D __CTOR_LIST__
10020904 D __CTOR_END__
10020904 d __CTOR_END__
10020908 d __DTOR_LIST__
1002090c D __DTOR_LIST__
10020914 D __DTOR_END__
10020934 D __EH_FRAME_BEGIN__
10020934 d __EH_FRAME_BEGIN__
1003d564 D __EH_FRAME_END__
1003d564 d __FRAME_END__
1003d568 00000020 d (anonymous namespace)::FETCH_SHADER_DESC
1003d588 000000e8 d FFLiCopySurfaceShaderObj_PS
1003d670 0000000c D FFLiCopySurfaceShaderObj_PS_sampler_vars
1003d67c 00000134 d FFLiCopySurfaceShaderObj_VS
1003d7b0 00000020 D FFLiCopySurfaceShaderObj_VS_attrib_vars
1003d7d0 00000030 d (anonymous namespace)::GetModelTypeShapePartsInfo(unsigned int)::modelTypeShapePartsInfo
1003d800 00000004 d GImAllocatorFreeFunc
1003d804 00000004 d GImAllocatorAllocFunc
1003d808 000006c4 D shader_gsh
1003decc 00000004 d sSocket
1003ded0 00000080 d __wut_socket_devoptab
1003df54 00000400 d _current_working_directory
1003e354 00001000 d handles
1003f354 0000000c d __stderr_handle
1003f360 0000000c d __stdout_handle
1003f36c 0000000c d __stdin_handle
1003f378 0000008c D devoptab_list
1003f404 00000004 d defaultDevice
1003f408 0000016c D __global_locale
1003f578 00000120 D _impure_data
1003f698 00000408 D __malloc_av_
1003faa0 0000000c D __sglue
1003faac D __SDATA_START__
1003faac 00000008 V typeinfo for rio::FileHandle
1003fab4 00000008 V typeinfo for FFLiZlibInterface
1003fabc 00000008 V typeinfo for rio::ControllerBase
1003fac4 00000008 V typeinfo for rio::ITask
1003facc 00000008 V typeinfo for rio::ControlDevice
1003fad4 00000008 V typeinfo for rio::LinkListNode
1003fadc 00000008 V typeinfo for rio::Camera
1003fae4 00000004 V rio::PrimitiveRenderer::getLineVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cIdx
1003fae8 00000008 V typeinfo for rio::Projection
1003faf0 00000008 V typeinfo for rio::RenderTarget
1003faf8 00000004 D rio::Shader::sCurrentShaderMode
1003fafc 00000004 D __cxxabiv1::__unexpected_handler
1003fb00 00000008 V typeinfo for std::type_info
1003fb08 00000008 V typeinfo for std::exception
1003fb10 00000008 V typeinfo for __cxxabiv1::__forced_unwind
1003fb18 00000008 V typeinfo for __cxxabiv1::__foreign_exception
1003fb20 00000004 D __cxxabiv1::__terminate_handler
1003fb24 00000004 D _impure_ptr
1003fb28 00000004 D __malloc_sbrk_base
1003fb2c 00000004 D __malloc_trim_threshold
1003fb30 00000004 D environ
1003fb40 00000004 B rio::sRootTask
1003fb44 00000004 B rio::AudioMgr::sInstance
1003fb48 00000008 B rio::ControllerBase::cInvalidPointerS32
1003fb50 00000008 B rio::ControllerBase::cInvalidPointer
1003fb58 00000004 B rio::ControllerMgr::sInstance
1003fb5c 00000004 B rio::FileDeviceMgr::sInstance
1003fb60 00000004 B rio::PrimitiveRenderer::sInstance
1003fb64 00000004 B rio::Window::sInstance
1003fb68 00000004 B rio::lyr::Renderer::sInstance
1003fb6c 00000004 B rio::mdl::res::ModelCacher::sInstance
1003fb70 00000004 B rio::TaskMgr::sInstance
1003fb74 00000001 B ImGuiTextBuffer::EmptyString
1003fb78 00000004 B GImGui
1003fb7c 00000004 B __wut_exit
1003fb80 00000001 B __eh_globals_init::_S_init
1003fb84 00000004 B __malloc_max_total_mem
1003fb88 00000004 B __malloc_max_sbrked_mem
1003fb8c 00000004 B __malloc_top_pad
1003fb90 00000004 B __stdio_exit_handler
1003fb94 00000004 B __atexit
1003fb98 00000004 B __atexit_recursive_mutex
1003fb9c B __SBSS_END__
1003fb9c b completed.2
1003fba0 b dtor_idx.1
1003fba4 b object.0
1003fbbc 00000001 b (anonymous namespace)::s_IsIntializedColorContainer
1003fbc0 000006e0 b (anonymous namespace)::s_ColorContainer
100402a0 00000004 b (anonymous namespace)::g_FFLManager
100402a8 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MOLE
100402b0 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MOLE
100402b8 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_X_ADD_MOLE
100402c0 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_X_ADD_MOLE
100402c8 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MUSTACHE
100402d0 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MUSTACHE
100402d8 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MOUTH
100402e0 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MOUTH
100402e8 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_EYEBROW
100402f0 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_EYEBROW
100402f8 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_EYE
10040300 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_EYE
10040304 00000004 b GImAllocatorUserData
10040308 00000004 b stb__dout
1004030c 00000004 b stb__barrier_in_b
10040310 00000004 b stb__barrier_out_b
10040314 00000004 b stb__barrier_out_e
10040318 00000004 b ImFontAtlasGetBuilderForStbTruetype()::io
10040320 00000010 b sMallocSpinLock
10040330 00000004 b sHeapSize
10040334 00000004 b sHeapMaxSize
10040338 00000004 b sHeapBase
1004033c 00000004 b sHeapHandle
10040340 000006a0 b sCrashThread
100409e0 00001000 b sCrashThreadStack
100419e0 00000004 b sRegistersLength
100419e4 00001000 b sRegistersBuffer
100429e4 00000004 b sStackTraceLength
100429e8 00001000 b sStackTraceBuffer
100439e8 00000004 b sDisassemblyLength
100439ec 00001000 b sDisassemblyBuffer
100449ec 00000040 b sHandlers
10044a2c 00000010 b sSendAddr
10044a3c 00000400 b sLastError
10044e3c 0000002c b key_mutex
10044e68 00000400 b key_table
10045268 000003b8 B __wut_fsa_device_data
10045620 00000004 b nn::swkbd::sSetVersion
10045624 00000004 b nn::swkbd::sSetUserSoundObj
10045628 00000004 b nn::swkbd::sSetUserControllerEventObj
1004562c 00000004 b nn::swkbd::sSetSelectFrom
10045630 00000004 b nn::swkbd::sSetReceiver
10045634 00000004 b nn::swkbd::sSetInputFormString
10045638 00000004 b nn::swkbd::sSetEnableOkButton
1004563c 00000004 b nn::swkbd::sSetCursorPos
10045640 00000004 b nn::swkbd::sSetControllerRemo
10045644 00000004 b nn::swkbd::sMuteAllSound
10045648 00000004 b nn::swkbd::sIsSelectCursorActive
1004564c 00000004 b nn::swkbd::sIsNeedCalcSubThreadPredict
10045650 00000004 b nn::swkbd::sIsNeedCalcSubThreadFont
10045654 00000004 b nn::swkbd::sIsKeyboardTarget
10045658 00000004 b nn::swkbd::sIsDecideOkButton
1004565c 00000004 b nn::swkbd::sIsDecideCancelButton
10045660 00000004 b nn::swkbd::sIsCoveredWithSubWindow
10045664 00000004 b nn::swkbd::sInitLearnDic
10045668 00000004 b nn::swkbd::sInactivateSelectCursor
1004566c 00000004 b nn::swkbd::sGetStateKeyboard
10045670 00000004 b nn::swkbd::sGetStateInputForm
10045674 00000004 b nn::swkbd::sGetKeyboardCondition
10045678 00000004 b nn::swkbd::sGetInputFormString
1004567c 00000004 b nn::swkbd::sGetDrawStringInfo
10045680 00000004 b nn::swkbd::sDrawTV
10045684 00000004 b nn::swkbd::sDrawDRC
10045688 00000004 b nn::swkbd::sDisappearKeyboard
1004568c 00000004 b nn::swkbd::sDisappearInputForm
10045690 00000004 b nn::swkbd::sDestroy
10045694 00000004 b nn::swkbd::sCreate
10045698 00000004 b nn::swkbd::sConfirmUnfixAll
1004569c 00000004 b nn::swkbd::sCalc
100456a0 00000004 b nn::swkbd::sCalcSubThreadPredict
100456a4 00000004 b nn::swkbd::sCalcSubThreadFont
100456a8 00000004 b nn::swkbd::sAppearKeyboard
100456ac 00000004 b nn::swkbd::sAppearInputForm
100456b0 00000004 b nn::swkbd::sModuleHandle
100456b4 00000004 b nn::swkbd::sHeapHandle
100456b8 00000004 b sLibcLockUsedMask
100456bc 000002c0 b sLibcLocks
1004597c 00000004 b init
10045980 00000008 b (anonymous namespace)::eh_globals
10045988 00000004 b (anonymous namespace)::get_static_cond()::once
1004598c 0000001c b (anonymous namespace)::fake_cond
100459a8 00000004 b (anonymous namespace)::static_cond
100459ac 00000004 b (anonymous namespace)::get_static_mutex()::once
100459b0 0000002c b (anonymous namespace)::fake_mutex
100459dc 00000004 b (anonymous namespace)::static_mutex
100459e0 00000038 b (anonymous namespace)::emergency_pool
10045a18 00000004 b (anonymous namespace)::__new_handler
10045a1c 00000010 V std::string::_Rep::_S_empty_rep_storage
10045a2c 00000004 b once_regsizes.0
10045a30 00000070 b dwarf_reg_size_table
10045aa0 00000004 b once.1
10045aa4 0000002c b object_mutex
10045ad0 00000004 b seen_objects
10045ad4 00000004 b unseen_objects
10045ad8 00000400 b temp_cwd
10045ed8 00000004 b __hndl_lock
10045edc 00000028 B __malloc_current_mallinfo
10045f04 00000004 b __sfp_recursive_mutex
10045f08 00000150 B __sf
10046058 00000004 b __env_recursive_mutex
1004605c 00000004 b initial_env
10046060 00000190 B __atexit0
10047aac d _SDA_BASE_
c0000058 T DisassemblePPCRange
c0000060 T FSAAddClient
c0000068 T FSAChangeDir
c0000070 T FSAChangeMode
c0000078 T FSACloseDir
c0000080 T FSACloseFile
c0000088 T FSADelClient
c0000090 T FSAFlushFile
c0000098 T FSAGetDeviceInfo
c00000a0 T FSAGetFreeSpaceSize
c00000a8 T FSAGetStat
c00000b0 T FSAGetStatFile
c00000b8 T FSAInit
c00000c0 T FSAMakeDir
c00000c8 T FSAMount
c00000d0 T FSAOpenDir
c00000d8 T FSAOpenFileEx
c00000e0 T FSAReadDir
c00000e8 T FSAReadFile
c00000f0 T FSARemove
c00000f8 T FSARename
c0000100 T FSARewindDir
c0000108 T FSASetPosFile
c0000110 T FSATruncateFile
c0000118 T FSAUnmount
c0000120 T FSAWriteFile
c0000128 T FSAddClient
c0000130 T FSCloseFile
c0000138 T FSDelClient
c0000140 T FSGetStat
c0000148 T FSGetStatFile
c0000150 T FSInit
c0000158 T FSInitCmdBlock
c0000160 T FSOpenFile
c0000168 T FSReadFile
c0000170 T FSSetPosFile
c0000178 T FSShutdown
c0000180 T FSWriteFile
c0000188 T MEMAllocFromExpHeapEx
c0000190 T MEMAllocFromFrmHeapEx
c0000198 T MEMCreateExpHeapEx
c00001a0 T MEMDestroyExpHeap
c00001a8 T MEMFreeToExpHeap
c00001b0 T MEMFreeToFrmHeap
c00001b8 T MEMGetAllocatableSizeForExpHeapEx
c00001c0 T MEMGetBaseHeapHandle
c00001c8 T OSBlockMove
c00001d0 T OSBlockSet
c00001d8 T OSBlockThreadsOnExit
c00001e0 T OSCompareAndSwapAtomic
c00001e8 T OSCompareAndSwapAtomicEx
c00001f0 T OSCreateThread
c00001f8 T OSDynLoad_Acquire
c0000200 T OSDynLoad_FindExport
c0000208 T OSDynLoad_GetAllocator
c0000210 T OSDynLoad_Release
c0000218 T OSDynLoad_SetAllocator
c0000220 T OSFatal
c0000228 T OSGetCoreId
c0000230 T OSGetCurrentThread
c0000238 T OSGetSymbolName
c0000240 T OSGetSystemInfo
c0000248 T OSGetSystemTime
c0000250 T OSGetThreadSpecific
c0000258 T OSGetTime
c0000260 T OSGetUPID
c0000268 T OSInitCond
c0000270 T OSInitMutex
c0000278 T OSInitMutexEx
c0000280 T OSInitSpinLock
c0000288 T OSIsDebuggerInitialized
c0000290 T OSIsDebuggerPresent
c0000298 T OSLockMutex
c00002a0 T OSPanic
c00002a8 T OSReport
c00002b0 T OSResumeThread
c00002b8 T OSSavesDone_ReadyToRelease
c00002c0 T OSSetExceptionCallbackEx
c00002c8 T OSSetThreadCleanupCallback
c00002d0 T OSSetThreadSpecific
c00002d8 T OSSignalCond
c00002e0 T OSSuspendThread
c00002e8 T OSSwapAtomic
c00002f0 T OSTicksToCalendarTime
c00002f8 T OSUninterruptibleSpinLock_Acquire
c0000300 T OSUninterruptibleSpinLock_Release
c0000308 T OSUnlockMutex
c0000310 T OSWaitCond
c0000318 T _Exit
c0000320 T __os_snprintf
c0000328 T __rplwrap_exit
c0000340 T GX2CalcDRCSize
c0000348 T GX2CalcFetchShaderSizeEx
c0000350 T GX2CalcSurfaceSizeAndAlignment
c0000358 T GX2CalcTVSize
c0000360 T GX2ClearColor
c0000368 T GX2ClearDepthStencilEx
c0000370 T GX2CopyColorBufferToScanBuffer
c0000378 T GX2DrawDone
c0000380 T GX2DrawEx
c0000388 T GX2DrawIndexedEx
c0000390 T GX2Flush
c0000398 T GX2GetSystemTVScanMode
c00003a0 T GX2Init
c00003a8 T GX2InitColorBufferRegs
c00003b0 T GX2InitDepthBufferHiZEnable
c00003b8 T GX2InitDepthBufferRegs
c00003c0 T GX2InitFetchShaderEx
c00003c8 T GX2InitSampler
c00003d0 T GX2InitSamplerBorderType
c00003d8 T GX2InitSamplerClamping
c00003e0 T GX2InitSamplerDepthCompare
c00003e8 T GX2InitSamplerLOD
c00003f0 T GX2InitSamplerXYFilter
c00003f8 T GX2InitSamplerZMFilter
c0000400 T GX2InitTextureRegs
c0000408 T GX2Invalidate
c0000410 T GX2RCreateBuffer
c0000418 T GX2RCreateSurface
c0000420 T GX2RDestroyBufferEx
c0000428 T GX2RLockBufferEx
c0000430 T GX2RLockSurfaceEx
c0000438 T GX2RUnlockBufferEx
c0000440 T GX2RUnlockSurfaceEx
c0000448 T GX2SetAlphaTest
c0000450 T GX2SetAlphaToMask
c0000458 T GX2SetAttribBuffer
c0000460 T GX2SetBlendConstantColor
c0000468 T GX2SetBlendControl
c0000470 T GX2SetColorBuffer
c0000478 T GX2SetColorControl
c0000480 T GX2SetContextState
c0000488 T GX2SetCullOnlyControl
c0000490 T GX2SetDRCBuffer
c0000498 T GX2SetDRCEnable
c00004a0 T GX2SetDRCScale
c00004a8 T GX2SetDefaultState
c00004b0 T GX2SetDepthBuffer
c00004b8 T GX2SetDepthOnlyControl
c00004c0 T GX2SetDepthStencilControl
c00004c8 T GX2SetFetchShader
c00004d0 T GX2SetPixelSampler
c00004d8 T GX2SetPixelSamplerBorderColor
c00004e0 T GX2SetPixelShader
c00004e8 T GX2SetPixelTexture
c00004f0 T GX2SetPixelUniformReg
c00004f8 T GX2SetPolygonControl
c0000500 T GX2SetScissor
c0000508 T GX2SetShaderModeEx
c0000510 T GX2SetStencilMask
c0000518 T GX2SetSwapInterval
c0000520 T GX2SetTVBuffer
c0000528 T GX2SetTVEnable
c0000530 T GX2SetTVScale
c0000538 T GX2SetTargetChannelMasks
c0000540 T GX2SetVertexShader
c0000548 T GX2SetVertexUniformReg
c0000550 T GX2SetViewport
c0000558 T GX2SetupContextStateEx
c0000560 T GX2SwapScanBuffers
c0000568 T GX2WaitForFlip
c0000580 T ACClose
c0000588 T ACConnectAsync
c0000590 T ACFinalize
c0000598 T ACInitialize
c00005b0 T Finalize__Q2_2nn3actFv
c00005b8 T GetTransferableIdEx__Q2_2nn3actFPULUiUc
c00005c0 T Initialize__Q2_2nn3actFv
c00005e0 T SAVEGetSharedDataTitlePath
c00005e8 T SAVEGetSharedSaveDataPath
c00005f0 T SAVEInit
c00005f8 T SAVEShutdown
c0000610 T htonl
c0000618 T htons
c0000620 T set_multicast_state
c0000628 T socket_lib_finish
c0000630 T socket_lib_init
c0000638 T __rplwrap_recv
c0000640 T __rplwrap_send
c0000648 T __rplwrap_sendto
c0000650 T __rplwrap_setsockopt
c0000658 T __rplwrap_shutdown
c0000660 T __rplwrap_socket
c0000668 T __rplwrap_socketclose
c0000670 T __rplwrap_socketlasterr
c0000698 T KPADGetMplsWorkSize
c00006a0 T KPADInitEx
c00006a8 T KPADReadEx
c00006b0 T KPADSetMplsWorkarea
c00006b8 T KPADShutdown
c00006d0 T ProcUIDrawDoneRelease
c00006d8 T ProcUIInit
c00006e0 T ProcUIProcessMessages
c00006e8 T ProcUIShutdown
c0000700 T _SYSGetSystemApplicationTitleId
c0000720 T VPADGetTPCalibratedPoint
c0000728 T VPADRead
c0000748 R MEMAllocFromDefaultHeap
c0000750 R MEMAllocFromDefaultHeapEx
c0000758 R MEMFreeToDefaultHeap
