         w __cxa_pure_virtual
         w __gthr_impl_key_create
02000000 T __rpx_start
02000038 t init_wut
02000060 T __init
02000084 00000034 T __cxa_throw_bad_array_new_length
020000b8 00000034 W __gnu_cxx::__throw_concurrence_lock_error()
020000ec 00000034 W __gnu_cxx::__throw_concurrence_unlock_error()
02000120 00000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
02000154 00000034 T std::__throw_bad_alloc()
02000188 00000034 T std::__throw_bad_array_new_length()
020001bc 00000058 T std::__throw_logic_error(char const*)
02000214 00000058 T std::__throw_length_error(char const*)
0200026c 00000058 T std::__throw_out_of_range(char const*)
020002c4 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
020002d4 000001e8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
020004bc 00000034 T abort
020004f0 00000048 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
02000538 0000005c t _GLOBAL__sub_D__ZN9__gnu_cxx9__freeresEv
02000594 0000003c T exit
020005d0 00000050 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
02000620 0000021c t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0200083c 0000000c t register_fini
02000848 t __do_global_dtors_aux
02000914 t frame_dummy
02000938 00000004 T FFLiBugEndianSwap(void*, unsigned int)
0200093c 0000000c T FFLiBugCanSwapSize(unsigned int)
02000948 00000008 T FFLiBugVgtFixedIndexPtr(void*)
02000950 00000008 T FFLiBugVgtFixedIndexOriginalPtr(void*)
02000958 00000008 T FFLiBugCanVgtFixedIndexSize(unsigned int)
02000960 00000018 t (anonymous namespace)::CompareMiiVersion(FFLiCharInfo const*, FFLiCharInfo const*)
02000978 00000018 t (anonymous namespace)::CompareCopyable(FFLiCharInfo const*, FFLiCharInfo const*)
02000990 00000018 t (anonymous namespace)::CompareLocalOnly(FFLiCharInfo const*, FFLiCharInfo const*)
020009a8 00000018 t (anonymous namespace)::CompareRegionMove(FFLiCharInfo const*, FFLiCharInfo const*)
020009c0 00000018 t (anonymous namespace)::CompareBirthPlatform(FFLiCharInfo const*, FFLiCharInfo const*)
020009d8 00000014 T FFLiiGetEyeRotateOffset(int)
020009ec 00000014 T FFLiiGetEyebrowRotateOffset(int)
02000a00 00000034 T FFLiiGetAdjustedMouthH(float, int)
02000a34 00000028 T FFLiiGetAdjustedEyeH(float, int)
02000a5c 0000002c T FFLiIsValidCharacterForName(unsigned short)
02000a88 00000088 t (anonymous namespace)::VerifyName(unsigned short const*, int)
02000b10 000006b4 T FFLiCompareCharInfoWithAdditionalInfo(int*, int, FFLiCharInfo const*, FFLiCharInfo const*, FFLAdditionalInfo const*, FFLAdditionalInfo const*)
020011c4 0000002c W bool FFLiRange<int>(int, int, int)
020011f0 000006e0 T FFLiVerifyCharInfoWithReason
020018d0 00000028 T FFLiiVerifyCharInfo(FFLiCharInfo const*, int)
020018f8 00000020 T FFLiVerifyCharInfo
02001918 00000084 T FFLiCopySurface::FFLiCopySurface()
02001918 00000084 T FFLiCopySurface::FFLiCopySurface()
0200199c 00000038 T FFLiCopySurface::~FFLiCopySurface()
0200199c 00000038 T FFLiCopySurface::~FFLiCopySurface()
020019d4 00000034 T FFLiCopySurface::SetupGPU()
02001a08 00000090 T FFLiCopySurface::Begin()
02001ae8 0000003c T FFLiCopySurface::End()
02001b44 0000010c T FFLiCopySurface::SetupSrcSurface(GX2Surface const*, unsigned int)
02001c70 0000021c T FFLiCopySurface::SetupDstSurface(GX2Surface*, unsigned int)
02001edc 000000d4 T FFLiCopySurface::Execute(GX2Surface*, unsigned int, GX2Surface const*, unsigned int)
02001fc0 000000c8 W rio::MemUtil::copy(void*, void const*, unsigned int)
020020a8 00000060 W rio::MemUtil::free(void*)
02002118 00000010 T FFLiCopySurfaceDrawer::FFLiCopySurfaceDrawer()
02002118 00000010 T FFLiCopySurfaceDrawer::FFLiCopySurfaceDrawer()
02002128 00000058 T FFLiCopySurfaceDrawer::~FFLiCopySurfaceDrawer()
02002128 00000058 T FFLiCopySurfaceDrawer::~FFLiCopySurfaceDrawer()
02002180 0000008c T FFLiCopySurfaceDrawer::SetupCPU()
0200220c 00000048 T FFLiCopySurfaceDrawer::SetupGPU()
02002264 0000005c T FFLiCopySurfaceDrawer::SetAttributeBuffer(unsigned int, unsigned int)
020022d0 00000030 T FFLiCopySurfaceDrawer::Draw()
02002310 0000002c t FFLiInvalidateShader(void*, unsigned int)
0200234c 00000028 t InvalidateFetchShader(GX2FetchShader*)
02002374 00000028 t InvalidateVertexShader(GX2VertexShader*)
0200239c 00000028 t InvalidatePixelShader(GX2PixelShader*)
020023c4 0000007c T FFLiCopySurfaceShader::FFLiCopySurfaceShader()
020023c4 0000007c T FFLiCopySurfaceShader::FFLiCopySurfaceShader()
02002440 00000020 T FFLiCopySurfaceShader::~FFLiCopySurfaceShader()
02002440 00000020 T FFLiCopySurfaceShader::~FFLiCopySurfaceShader()
02002460 0000008c T FFLiCopySurfaceShader::SetupCPU()
020024fc 0000003c T FFLiCopySurfaceShader::SetupGPU()
02002538 0000003c T FFLiCopySurfaceShader::Bind() const
020025a4 0000008c T FFLiCopySurfaceShader::SetTexture(GX2Texture const*, unsigned int)
02002660 00000058 T FFLiGetCRC16(void const*, unsigned int)
020026b8 00000044 T FFLiPutCRC16(void*, unsigned int)
020026fc 00000028 T FFLiIsValidCRC16(void const*, unsigned int)
02002724 00000078 W rio::MemUtil::set(void*, unsigned char, unsigned int)
020027bc 00000028 T FFLiResourceCache::FFLiResourceCache()
020027bc 00000028 T FFLiResourceCache::FFLiResourceCache()
020027e4 00000004 T FFLiResourceCache::~FFLiResourceCache()
020027e4 00000004 T FFLiResourceCache::~FFLiResourceCache()
020027e8 000000b8 T FFLiResourceCache::Attach(void*, unsigned int, FFLResourceType)
020028b0 00000014 T FFLiResourceCache::IsValid(FFLResourceType) const
020028c4 00000064 T FFLiResourceCache::IsAttached() const
02002928 0000000c T FFLiResourceCache::Header(FFLResourceType) const
02002934 0000001c t (anonymous namespace)::GetElement(unsigned int*, void const*, unsigned int, unsigned int)
02002950 0000014c T FFLiGetResourceShapeElement(unsigned int*, void const*, FFLiShapePartsType, FFLiResourceShapeElementType)
02002a9c 00000044 W unsigned int FFLiSwapEndianImpl<unsigned int>(unsigned int)
02002ae0 00000068 W void FFLiSwapEndianArrayImpl<unsigned int>(unsigned int*, unsigned int)
02002b48 00000044 W unsigned short FFLiSwapEndianImpl<unsigned short>(unsigned short)
02002b8c 00000068 W void FFLiSwapEndianArrayImpl<unsigned short>(unsigned short*, unsigned int)
02002bf4 00000028 T FFLiGetResourceSurfaceFormat(FFLiTextureFormat)
02002c1c 00000024 T FFLiResourceTextureFooter::SurfaceFormat() const
02002c40 0000000c T FFLiResourceTextureFooter::GetFooterImpl(void const*, unsigned int)
02002c4c 0000000c T FFLiResourceTextureFooter::GetImagePtrImpl(unsigned int) const
02002c58 00000024 T FFLiResourceTextureFooter::GetMipPtrImpl(unsigned int) const
02002c7c 00000004 t (anonymous namespace)::GetCharModel(FFLCharModel*)
02002c80 00000004 t (anonymous namespace)::GetCharModel(FFLCharModel const*)
02002c84 00000044 T FFLInitCharModelCPUStep
02002cc8 00000034 T FFLInitCharModelGPUStepWithCallback
02002cfc 0000004c T FFLInitCharModelGPUStep
02002d48 00000024 T FFLDeleteCharModel
02002d6c 00000024 T FFLGetDrawParamOpaFaceline
02002d90 00000024 T FFLGetDrawParamOpaBeard
02002db4 00000024 T FFLGetDrawParamOpaNose
02002dd8 00000024 T FFLGetDrawParamOpaForehead
02002dfc 00000024 T FFLGetDrawParamOpaHair
02002e20 00000024 T FFLGetDrawParamOpaCap
02002e44 000000f4 T FFLDrawOpaWithCallback
02002f38 0000004c T FFLDrawOpa
02002f84 00000024 T FFLGetDrawParamXluMask
02002fa8 00000024 T FFLGetDrawParamXluNoseLine
02002fcc 00000024 T FFLGetDrawParamXluGlass
02002ff0 000000ac T FFLDrawXluWithCallback
0200309c 0000004c T FFLDrawXlu
020030e8 00000048 T FFLiEnableSpecialMii
02003130 00000020 T FFLInitResEx
02003150 00000020 T FFLInitResGPUStep
02003170 00000020 T FFLExit
02003190 00000020 T FFLIsAvailable
020031b0 00000020 t (anonymous namespace)::GetShapeTypeInfo(FFLModelType)
020031d0 000000c4 T FFLiInitCharModelCPUStep(FFLiCharModel*, FFLCharModelSource const*, FFLCharModelDesc const*)
02003294 00000084 T FFLiInitCharModelGPUStep(FFLiCharModel*, FFLShaderCallback const*)
02003318 00000020 T FFLiDeleteCharModel(FFLiCharModel*)
02003338 00000008 T FFLiGetDrawParamOpaFacelineFromCharModel(FFLiCharModel const*)
02003340 00000008 T FFLiGetDrawParamOpaBeardFromCharModel(FFLiCharModel const*)
02003348 00000008 T FFLiGetDrawParamOpaNoseFromCharModel(FFLiCharModel const*)
02003350 00000050 T FFLiGetDrawParamOpaForeheadFromCharModel(FFLiCharModel const*)
020033a0 00000050 T FFLiGetDrawParamOpaHairFromCharModel(FFLiCharModel const*)
020033f0 00000060 T FFLiGetDrawParamOpaCapFromCharModel(FFLiCharModel const*)
02003450 00000008 T FFLiGetDrawParamXluMaskFromCharModel(FFLiCharModel const*)
02003458 00000018 T FFLiGetDrawParamXluNoseLineFromCharModel(FFLiCharModel const*)
02003470 00000018 T FFLiGetDrawParamXluGlassFromCharModel(FFLiCharModel const*)
02003488 00000030 T FFLiCharModelCreateParam::FFLiCharModelCreateParam(FFLiDatabaseManager*, FFLiResourceManager*, FFLiShaderCallback*)
02003488 00000030 T FFLiCharModelCreateParam::FFLiCharModelCreateParam(FFLiDatabaseManager*, FFLiResourceManager*, FFLiShaderCallback*)
020034b8 00000024 T FFLiCharModelCreateParam::~FFLiCharModelCreateParam()
020034b8 00000024 T FFLiCharModelCreateParam::~FFLiCharModelCreateParam()
020034dc 00000008 T FFLiCharModelCreateParam::GetResolution(FFLResolution)
020034e4 00000008 T FFLiCharModelCreateParam::IsEnabledMipMap(FFLResolution)
020034ec 00000058 T FFLiCharModelCreateParam::CheckModelDesc(FFLCharModelDesc const*)
02003544 0000002c t IsNaN(float)
02003570 00000034 t (anonymous namespace)::ModelFlagToModelType(unsigned int)
020035a4 0000007c t (anonymous namespace)::ConvertShapePartsTypeToShapeType(FFLiShapePartsType)
02003620 0000002c t (anonymous namespace)::GetModelTypeShapePartsInfo(unsigned int)
0200364c 00000034 t (anonymous namespace)::AddVec3(FFLVec3*, FFLVec3)
02003680 00000020 t (anonymous namespace)::GetShapeTypeInfo(FFLModelType)
020036a0 00000054 t (anonymous namespace)::DeleteShape(FFLiCharModel*, FFLiShapePartsType)
020036f4 00000024 t (anonymous namespace)::DeleteShape_Mask(FFLiCharModel*)
02003718 00000024 t (anonymous namespace)::DeleteShape_Noseline(FFLiCharModel*)
0200373c 00000024 t (anonymous namespace)::DeleteShape_Nose(FFLiCharModel*)
02003760 00000030 t (anonymous namespace)::DeleteShape_Beard(FFLiCharModel*)
02003790 00000084 t (anonymous namespace)::DeleteShape_Hair(FFLiCharModel*, unsigned int)
02003814 00000024 t (anonymous namespace)::DeleteShape_Faceline(FFLiCharModel*)
02003838 00000030 t (anonymous namespace)::DeleteShape_Glass(FFLiCharModel*)
02003868 00000060 t (anonymous namespace)::DeleteShapes(FFLiCharModel*)
020038c8 00000054 t (anonymous namespace)::DeleteTexture_Noseline(FFLiCharModel*, bool)
0200391c 00000060 t (anonymous namespace)::DeleteTexture_Cap(FFLiCharModel*, bool)
0200397c 00000114 t (anonymous namespace)::InitTextures(FFLiCharModel*, FFLiResourceLoader*)
02003a90 00000030 t (anonymous namespace)::DeleteTexture_Glass(FFLiCharModel*, bool)
02003ac0 00000118 t (anonymous namespace)::AdjustPartsTransform(FFLiCharModel*, FFLiCoordinate const*)
02003bd8 000001b8 t (anonymous namespace)::SetupDrawParam(FFLiCharModel*)
02003d90 00000094 t (anonymous namespace)::DeleteTextures(FFLiCharModel*)
02003e34 00000058 t (anonymous namespace)::InvalidateTexture(GX2Texture const&)
02003e9c 00000058 t (anonymous namespace)::InvalidateTextures(FFLiCharModel*)
02003ef4 0000000c T FFLiCharModelCreator::FFLiCharModelCreator(FFLiCharModelCreateParam*, FFLiManager*)
02003ef4 0000000c T FFLiCharModelCreator::FFLiCharModelCreator(FFLiCharModelCreateParam*, FFLiManager*)
02003f00 00000004 T FFLiCharModelCreator::~FFLiCharModelCreator()
02003f00 00000004 T FFLiCharModelCreator::~FFLiCharModelCreator()
02003f04 00000094 T FFLiCharModelCreator::Delete(FFLiCharModel*)
02003fa8 00000058 T FFLiCharModelCreator::InvalidateShapes(FFLiCharModel*)
02004000 00000098 T FFLiCharModelCreator::AfterExecuteGPUStep(FFLiCharModel*)
020040a8 0000011c T FFLiCharModelCreator::ExecuteGPUStep(FFLiCharModel*, FFLShaderCallback const*)
020041c4 00000014 W float FFLiMin<float>(float, float)
020041d8 00000014 W float FFLiMax<float>(float, float)
020041ec 00000104 t (anonymous namespace)::UpdateBoundingBox(FFLBoundingBox*, FFLBoundingBox const*)
020042f0 0000008c t (anonymous namespace)::CalcluateBoundingBox(FFLBoundingBox*, FFLBoundingBox const*, FFLiShapePartsType)
0200437c 00000120 t (anonymous namespace)::InitShape(FFLiCharModel*, FFLiShapePartsType, unsigned int, float, float, FFLVec3 const*, bool, FFLiResourceLoader*, FFLiCoordinate const*)
0200449c 00000470 t (anonymous namespace)::InitShapes(FFLiCharModel*, FFLiResourceLoader*, FFLiCoordinate const*)
0200490c 0000038c T FFLiCharModelCreator::ExecuteCPUStep(FFLiCharModel*, FFLCharModelSource const*, FFLCharModelDesc const*)
02004c98 0000008c t (anonymous namespace)::SrgbFetchValue(float)
02004d24 00000080 t (anonymous namespace)::DegammaColorContainer((anonymous namespace)::FFLiColorContainer&)
02004da4 0000000c t (anonymous namespace)::GetFacelineColor((anonymous namespace)::FFLiColorContainer const&, int)
02004db0 00000010 t (anonymous namespace)::GetBeardColor((anonymous namespace)::FFLiColorContainer const&, int)
02004dc0 00000010 t (anonymous namespace)::GetEyebrowColor((anonymous namespace)::FFLiColorContainer const&, int)
02004dd0 00000010 t (anonymous namespace)::GetMustacheColor((anonymous namespace)::FFLiColorContainer const&, int)
02004de0 00000010 t (anonymous namespace)::GetHairColor((anonymous namespace)::FFLiColorContainer const&, int)
02004df0 00000008 t (anonymous namespace)::GetEyeColorR((anonymous namespace)::FFLiColorContainer const&, int)
02004df8 00000008 t (anonymous namespace)::GetEyeColorG((anonymous namespace)::FFLiColorContainer const&, int)
02004e00 00000010 t (anonymous namespace)::GetEyeColorB((anonymous namespace)::FFLiColorContainer const&, int)
02004e10 00000010 t (anonymous namespace)::GetGlassColor((anonymous namespace)::FFLiColorContainer const&, int)
02004e20 00000010 t (anonymous namespace)::GetMouthColorR((anonymous namespace)::FFLiColorContainer const&, int)
02004e30 00000010 t (anonymous namespace)::GetMouthColorG((anonymous namespace)::FFLiColorContainer const&, int)
02004e40 00000008 t (anonymous namespace)::GetMouthColorB((anonymous namespace)::FFLiColorContainer const&, int)
02004e48 00000008 t (anonymous namespace)::GetMoleColor((anonymous namespace)::FFLiColorContainer const&)
02004e50 00000008 t (anonymous namespace)::GetFaceLine((anonymous namespace)::FFLiColorContainer const&)
02004e58 00000010 t (anonymous namespace)::GetCapColor((anonymous namespace)::FFLiColorContainer const&, int)
02004e68 00000008 t (anonymous namespace)::GetNoselineColor((anonymous namespace)::FFLiColorContainer const&)
02004e70 00000248 t (anonymous namespace)::SetupColorContainer((anonymous namespace)::FFLiColorContainer&)
020050b8 00000064 t (anonymous namespace)::InitializeColorContainerIfUninitialized()
0200511c 00000028 t (anonymous namespace)::GetColorContainer()
02005144 00000028 t (anonymous namespace)::GetSrgbFetchColorContainer()
0200516c 00000008 T FFLiUseOffScreenSrgbFetch()
02005174 00000034 T FFLiGetSrgbFetchFacelineColor(int)
020051a8 00000034 T FFLiGetSrgbFetchBeardColor(int)
020051dc 00000034 T FFLiGetSrgbFetchEyebrowColor(int)
02005210 00000034 T FFLiGetSrgbFetchMustacheColor(int)
02005244 00000034 T FFLiGetSrgbFetchEyeColorR(int)
02005278 00000034 T FFLiGetSrgbFetchEyeColorG(int)
020052ac 00000034 T FFLiGetSrgbFetchEyeColorB(int)
020052e0 00000034 T FFLiGetSrgbFetchMouthColorR(int)
02005314 00000034 T FFLiGetSrgbFetchMouthColorG(int)
02005348 00000034 T FFLiGetSrgbFetchMouthColorB(int)
0200537c 00000024 T FFLiGetSrgbFetchMoleColor()
020053a0 00000034 T FFLiGetFacelineColor(int)
020053d4 00000034 T FFLiGetHairColor(int)
02005408 00000034 T FFLiGetGlassColor(int)
0200543c 00000024 T FFLiGetFaceLine()
02005460 00000034 T FFLiGetCapColor(int)
02005494 00000024 T FFLiGetNoselineColor()
020054b8 00000034 T FFLiCoordinate::FFLiCoordinate()
020054b8 00000034 T FFLiCoordinate::FFLiCoordinate()
020054ec 00000004 T FFLiCoordinate::~FFLiCoordinate()
020054ec 00000004 T FFLiCoordinate::~FFLiCoordinate()
020054f0 00000008 T FFLiCoordinate::FlipValue(FFLVec3*, float)
020054f8 00000008 T FFLiCoordinate::FlipValue(FFLVec4*, float)
02005500 0000002c T FFLiCoordinate::FlipValue(FFLiSnorm10_10_10_2*, unsigned int)
0200552c 0000001c T FFLiCoordinate::FlipValue(FFLiSnorm8_8_8_8*, signed char)
02005548 00000078 T FFLiCoordinate::IsDefault() const
020055c0 000000f8 W void FFLiCoordinate::TransformCommon<FFLVec3, float>(FFLVec3*) const
020056b8 00000068 T FFLiCoordinate::Transform(FFLVec3*) const
02005720 00000020 T FFLiCoordinate::Transform(FFLVec4*) const
02005740 00000020 T FFLiCoordinate::TransformWithoutScale(FFLVec3*) const
02005760 00000124 W void FFLiCoordinate::TransformCommon<FFLiSnorm10_10_10_2, unsigned int>(FFLiSnorm10_10_10_2*) const
02005884 00000020 T FFLiCoordinate::TransformWithoutScale(FFLiSnorm10_10_10_2*) const
020058a4 000000f4 W void FFLiCoordinate::TransformCommon<FFLiSnorm8_8_8_8, signed char>(FFLiSnorm8_8_8_8*) const
02005998 00000020 T FFLiCoordinate::TransformWithoutScale(FFLiSnorm8_8_8_8*) const
020059b8 0000007c T FFLiIsNullMiiID
02005a34 0000001c T FFLiGetTemporaryMiiID
02005a50 0000000c T FFLiIsNormalMiiID
02005a5c 00000028 T FFLiIsSpecialMiiID
02005a84 0000002c T FFLiIsNTRMiiID
02005ab0 0000000c T FFLiIsTemporaryMiiID
02005abc 0000005c T FFLiIsValidMiiID
02005b18 000000cc T FFLiIsSameMiiID
02005be4 00000028 t (anonymous namespace)::GetDefaultCreateID(FFLCreateID*, unsigned int)
02005c0c 00000008 t GetMiiDataNum()
02005c14 00000004 T FFLiDatabaseDefault::~FFLiDatabaseDefault()
02005c14 00000004 T FFLiDatabaseDefault::~FFLiDatabaseDefault()
02005c18 00000068 T FFLiDatabaseDefault::InitElement(FFLiMiiDataOfficial*, FFLiMiiDataCoreRFL const*, unsigned int)
02005c80 00000064 T FFLiDatabaseDefault::FFLiDatabaseDefault()
02005c80 00000064 T FFLiDatabaseDefault::FFLiDatabaseDefault()
02005ce4 0000006c T FFLiDatabaseDefault::Get(FFLiCharInfo*, unsigned int) const
02005d50 00000034 t CheckFFLiFsResult(FFLiFsResult const&)
02005d84 0000002c t ConvertFFLiFsResultToFFLResult(FFLiFsResult const&, FFLResult)
02005db0 0000002c t CheckFileNotFound(rio::RawErrorCode)
02005ddc 00000024 t (anonymous namespace)::GetDatabasePath(char*, unsigned int, unsigned long long, char const*)
02005e00 0000003c W rio::FileHandle::~FileHandle()
02005e00 0000003c W rio::FileHandle::~FileHandle()
02005e3c 00000038 W rio::FileHandle::~FileHandle()
02005e74 00000080 T FFLiDatabaseFileAccessor::FFLiDatabaseFileAccessor(FFLiDatabaseFile*, FFLiFileWriteBuffer*)
02005e74 00000080 T FFLiDatabaseFileAccessor::FFLiDatabaseFileAccessor(FFLiDatabaseFile*, FFLiFileWriteBuffer*)
02005ef4 00000004 T FFLiDatabaseFileAccessor::~FFLiDatabaseFileAccessor()
02005ef4 00000004 T FFLiDatabaseFileAccessor::~FFLiDatabaseFileAccessor()
02005ef8 00000040 T FFLiDatabaseFileAccessor::Init()
02005f38 000000b0 T FFLiDatabaseFileAccessor::AfterConstruct(unsigned long long)
02005fe8 00000064 T FFLiDatabaseFileAccessor::AdjustRegularListOfficial()
0200604c 0000001c T FFLiDatabaseFileAccessor::BeforeDestruct()
02006068 00000008 T FFLiDatabaseFileAccessor::GetPathOfficial() const
02006070 00000008 T FFLiDatabaseFileAccessor::GetPathBackup() const
02006078 00000008 T FFLiDatabaseFileAccessor::GetPathHidden() const
02006080 00000010 W unsigned int FFLiMin<unsigned int>(unsigned int, unsigned int)
02006090 000000f0 t (anonymous namespace)::WriteFileImpl(rio::FileHandle&, void const*, unsigned int, FFLiFileWriteBuffer*)
02006180 00000094 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
02006214 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
02006214 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
02006284 000001e8 t (anonymous namespace)::ReadFile(void*, unsigned int, char const*)
0200647c 00000058 t (anonymous namespace)::LoadDatabaseHidden(FFLiDatabaseFileHidden*, char const*)
020064d4 00000058 t (anonymous namespace)::LoadDatabaseOfficial(FFLiDatabaseFileOfficial*, char const*)
0200652c 000001d4 t (anonymous namespace)::WriteFile(void const*, unsigned int, FFLiFileWriteBuffer*, char const*)
02006710 00000030 t (anonymous namespace)::SaveDatabaseHidden(FFLiDatabaseFileHidden const&, FFLiFileWriteBuffer*, char const*)
02006740 00000030 t (anonymous namespace)::SaveDatabaseOfficial(FFLiDatabaseFileOfficial const&, FFLiFileWriteBuffer*, char const*)
02006770 00000094 T FFLiDatabaseFileAccessor::IsExistFile(char const*)
02006804 00000308 T FFLiDatabaseFileAccessor::BootLoadImpl()
02006b0c 00000040 T FFLiDatabaseFileAccessor::BootLoad()
02006b4c 00000014 t ParamIsInvalid(FFLiMiddleDBTimeUpdateParam const&)
02006b60 00000014 t ParamGetHidden(FFLiMiddleDBTimeUpdateParam const&)
02006b74 00000008 t GetMiiDataNum()
02006b7c 000000ac t (anonymous namespace)::ShuffleIndices(unsigned short*, unsigned short)
02006c28 00000010 T FFLiOrderData::Init()
02006c38 00000008 T FFLiOrderData::NextIndex() const
02006c40 00000008 T FFLiOrderData::PrevIndex() const
02006c48 00000068 t ParamAdvance(FFLiMiddleDBTimeUpdateParam&)
02006cb0 000000a4 t ParamFindNext(FFLiMiddleDBTimeUpdateParam&)
02006d54 00000014 T FFLiDatabaseFileHidden::GetImpl(unsigned short) const
02006d68 000000cc T FFLiDatabaseFileHidden::NumOfGenderWithIndex(unsigned short*, FFLGender) const
02006e34 00000120 T FFLiDatabaseFileHidden::UpdateMiddleDBRandom(FFLiMiddleDB*) const
02006f54 00000138 T FFLiDatabaseFileHidden::UpdateMiddleDBTime(FFLiMiddleDB*, bool) const
0200708c 00000028 T FFLiDatabaseFileHidden::IsValidCrc() const
020070b4 00000064 T FFLiDatabaseFileHidden::UpdateCrc()
02007128 0000009c T FFLiDatabaseFileHidden::Init()
020071c4 0000001c T FFLiDatabaseFileHidden::IsValidIdentifier() const
020071e0 0000004c T FFLiDatabaseFileHidden::IsValid() const
0200722c 00000090 T FFLiDatabaseFileHidden::UpdateMiddleDB(FFLiMiddleDB*) const
020072bc 00000008 t GetMiiDataNum()
020072c4 00000080 t (anonymous namespace)::IsExistCreateID(FFLCreateID const&, FFLiDatabaseFileOfficial::AdjustRegularBuffer const&)
02007344 00000028 t (anonymous namespace)::SetNullCreateID(FFLCreateID&)
0200736c 00000010 T FFLiDatabaseFileOfficial::GetImpl(unsigned short) const
0200737c 00000028 T FFLiDatabaseFileOfficial::IsValidCrc() const
020073a4 00000064 T FFLiDatabaseFileOfficial::UpdateCrc()
02007418 00000084 T FFLiDatabaseFileOfficial::Init()
0200749c 0000001c T FFLiDatabaseFileOfficial::IsValidIdentifier() const
020074b8 0000004c T FFLiDatabaseFileOfficial::IsValid() const
02007504 00000108 T FFLiDatabaseFileOfficial::Get(FFLiCharInfo*, unsigned short, bool, bool) const
0200760c 000000c8 T FFLiDatabaseFileOfficial::Search(unsigned short*, FFLCreateID const&) const
020076d4 0000011c T FFLiDatabaseFileOfficial::AdjustRegularList(FFLiDatabaseFileOfficial::AdjustRegularBuffer*)
020077f0 00000084 t (anonymous namespace)::ReplaceNameIfAccord(unsigned short*, unsigned int)
02007874 00000040 t (anonymous namespace)::ReplaceNameAndCreatorIfAccord(FFLiCharInfo*)
020078b4 000000b4 T FFLiDatabaseManager::FFLiDatabaseManager(FFLiDatabaseFile*, FFLiFileWriteBuffer*, FFLiSystemContext*)
020078b4 000000b4 T FFLiDatabaseManager::FFLiDatabaseManager(FFLiDatabaseFile*, FFLiFileWriteBuffer*, FFLiSystemContext*)
02007968 00000040 T FFLiDatabaseManager::~FFLiDatabaseManager()
02007968 00000040 T FFLiDatabaseManager::~FFLiDatabaseManager()
020079a8 00000054 T FFLiDatabaseManager::AfterConstruct()
020079fc 00000024 T FFLiDatabaseManager::BeforeDestruct()
02007a20 0000001c T FFLiDatabaseManager::EnableSpecialMii(unsigned int)
02007a3c 00000008 T FFLiDatabaseManager::IsEnabledSpecialMii() const
02007a44 00000070 T FFLiDatabaseManager::GetCharInfoFromOfficial(FFLiCharInfo*, unsigned short)
02007ab4 00000038 T FFLiDatabaseManager::GetCharInfoFromDefault(FFLiCharInfo*, unsigned short)
02007aec 0000009c T FFLiDatabaseManager::GetCharInfoFromStoreData(FFLiCharInfo*, FFLDataSource, FFLiStoreDataCFL const*, unsigned short)
02007b88 00000180 T FFLiDatabaseManager::PickupCharInfo(FFLiCharInfo*, FFLDataSource, void const*, unsigned short)
02007d08 00000080 T FFLiDatabaseManager::UpdateMiddleDB(FFLiMiddleDB*)
02007d88 0000003c t (anonymous namespace)::GetRandomParts((anonymous namespace)::RandomPartsArray const&, FFLiRandomContext*)
02007dc4 00000064 t (anonymous namespace)::GetRandomGlassType(FFLAge, FFLiRandomContext*)
02007e28 00000008 T FFLiDatabaseRandom::FFLiDatabaseRandom(FFLiRandomContext*)
02007e28 00000008 T FFLiDatabaseRandom::FFLiDatabaseRandom(FFLiRandomContext*)
02007e30 00000004 T FFLiDatabaseRandom::~FFLiDatabaseRandom()
02007e30 00000004 T FFLiDatabaseRandom::~FFLiDatabaseRandom()
02007e34 0000011c T FFLiDatabaseRandom::DetermineParam(FFLGender*, FFLAge*, FFLRace*)
02007f50 000005dc T FFLiDatabaseRandom::Get(FFLiCharInfo*, FFLGender, FFLAge, FFLRace)
0200852c 000000ec T FFLiDatabaseRandom::UpdateMiddleDB(FFLiMiddleDB*)
02008618 00000020 T FFLiGetTick()
02008648 00000068 T FFLiGetDateTimeNow(FFLiDateTime*)
020086c0 0000009c T FFLiGetNowDateTime(int*, int*, int*, int*, int*, int*)
0200875c 00000074 T FFLiIsLeapYear(int)
020087d0 00000028 T FFLiGetMonthOfDay(int)
020087f8 000000e0 T FFLiDateToDays(int, int, int)
020088d8 0000006c T FFLiGetSecondsFrom_2000_01_01()
02008944 00000008 t (anonymous namespace)::GetWidth(unsigned int)
0200894c 00000004 t (anonymous namespace)::GetHeight(unsigned int)
02008950 00000018 t (anonymous namespace)::GetTextureFormat(bool)
02008968 00000030 t (anonymous namespace)::GetNumMips(unsigned int, unsigned int, bool)
02008998 00000024 t (anonymous namespace)::DeleteTexture_FaceMake(FFLiFacelineTextureTempObject*, bool)
020089bc 00000020 t (anonymous namespace)::DeleteTexture_FaceLine(FFLiFacelineTextureTempObject*, bool)
020089dc 00000034 t (anonymous namespace)::DeleteTexture_FaceBeard(FFLiFacelineTextureTempObject*, FFLiCharInfo const*, bool)
02008a10 00000020 t (anonymous namespace)::EndianSwap(void*, unsigned int)
02008a30 00000030 t (anonymous namespace)::InvalidatePrimitive(FFLPrimitiveParam*)
02008a70 0000006c t (anonymous namespace)::InvalidateAttributes(FFLAttributeBufferParam*)
02008aec 00000038 t (anonymous namespace)::InvalidateDrawParam(FFLDrawParam*)
02008b24 00000058 t (anonymous namespace)::InvalidateTexture(GX2Texture const&)
02008b8c 00000074 W rio::MemUtil::alloc(unsigned int, unsigned int)
02008c10 00000020 t (anonymous namespace)::Allocate(unsigned int, unsigned int)
02008c30 00000070 t (anonymous namespace)::InitPrimitive(FFLPrimitiveParam*)
02008ca0 000000e0 t (anonymous namespace)::InitAttributes(FFLAttributeBufferParam*, unsigned int)
02008d80 00000050 t (anonymous namespace)::InitDrawParamWithoutModulate(FFLDrawParam*, unsigned int)
02008dd0 00000020 t (anonymous namespace)::Free(void*)
02008df0 00000028 t (anonymous namespace)::DeletePrimitive(FFLPrimitiveParam*)
02008e18 00000038 t (anonymous namespace)::DeleteAttributes(FFLAttributeBufferParam*)
02008e50 00000038 t (anonymous namespace)::DeleteDrawParam(FFLDrawParam*)
02008e88 00000094 T FFLiInitFacelineTexture(FFLiRenderTexture*, unsigned int, bool)
02008f1c 00000020 T FFLiDeleteFacelineTexture(FFLiRenderTexture*)
02008f3c 00000184 T FFLiInitTempObjectFacelineTexture(FFLiFacelineTextureTempObject*, FFLiRenderTexture*, FFLiCharInfo const*, unsigned int, bool, FFLiResourceLoader*)
020090c0 000000c0 T FFLiDeleteTempObjectFacelineTexture(FFLiFacelineTextureTempObject*, FFLiCharInfo const*, FFLResourceType)
02009190 00000240 T FFLiRenderFacelineTexture(FFLiRenderTexture*, FFLiCharInfo const*, unsigned int, FFLiFacelineTextureTempObject*, FFLiShaderCallback const*, FFLiCopySurface*)
020093e0 00000024 t SetResultIfError(FFLResult*, FFLResult)
02009404 00000014 T FFLiManager::IsConstruct()
02009418 00000020 T FFLiIsAvailable()
02009438 0000000c T FFLiManager::GetInstance()
02009444 0000018c T FFLiManager::FFLiManager(FFLInitDesc const*)
02009444 0000018c T FFLiManager::FFLiManager(FFLInitDesc const*)
020095d0 000000a0 T FFLiManager::~FFLiManager()
020095d0 000000a0 T FFLiManager::~FFLiManager()
02009670 000000e4 T FFLiManager::AfterConstruct(FFLInitDesc const*, FFLResourceDesc const*)
02009754 0000003c T FFLiManager::BeforeDestruct()
02009790 0000007c T FFLiManager::Destroy()
0200980c 00000020 T FFLiExit()
0200982c 000000cc T FFLiManager::Create(FFLInitDesc const*, FFLResourceDesc const*)
020098f8 00000054 t (anonymous namespace)::InitResImpl(FFLInitDesc const*, FFLResourceDesc const*)
0200994c 00000020 T FFLiInitResEx(FFLInitDesc const*, FFLResourceDesc const*)
0200996c 00000008 T FFLiManager::CanInitCharModel() const
02009974 0000002c T FFLiManager::SetupGPU()
020099a0 00000034 T FFLiInitResGPUStep()
020099d4 00000018 t (anonymous namespace)::GetTextureFormat(bool)
020099ec 00000018 t (anonymous namespace)::CanUseExpression(unsigned int, FFLExpression)
02009a04 00000014 t (anonymous namespace)::GetCorrectParam(FFLExpression)
02009a18 00000024 t (anonymous namespace)::FFLiRenderTextureAllocate()
02009a3c 00000080 t (anonymous namespace)::InitRawMask(FFLiMaskTexturesTempObject*, unsigned int)
02009abc 0000002c t (anonymous namespace)::FFLiRenderTextureDelete(FFLiRenderTexture*)
02009ae8 00000084 t (anonymous namespace)::DeleteRawMask(FFLiMaskTexturesTempObject*, unsigned int)
02009b6c 000000f4 t (anonymous namespace)::SetupExpressionCharInfo(FFLiCharInfo*, FFLiCharInfo const*, FFLExpression)
02009c60 000000f8 T FFLiInitMaskTextures(FFLiMaskTextures*, unsigned int, unsigned int, bool)
02009d58 00000074 T FFLiDeleteMaskTextures(FFLiMaskTextures*)
02009dcc 000001ac T FFLiInitTempObjectMaskTextures(FFLiMaskTexturesTempObject*, FFLiMaskTextures const*, FFLiCharInfo const*, unsigned int, unsigned int, bool, FFLiResourceLoader*)
02009f78 000000a0 T FFLiDeleteTempObjectMaskTextures(FFLiMaskTexturesTempObject*, unsigned int, FFLResourceType)
0200a018 0000018c T FFLiRenderMaskTextures(FFLiMaskTextures*, FFLiMaskTexturesTempObject*, FFLiShaderCallback const*, FFLiCopySurface*)
0200a1b4 0000004c T FFLiUpdateMiddleDB(FFLiMiddleDB*)
0200a200 0000000c T FFLiMiddleDBHiddenParam::Init()
0200a20c 00000018 T FFLiMiddleDBRandomParam::Init()
0200a224 0000000c T FFLiMiddleDBNetParam::Init()
0200a230 00000008 T FFLiMiddleDB::GetBufferSize(unsigned short)
0200a238 00000020 T FFLiGetMiddleDBBufferSize(unsigned short)
0200a258 000000bc T FFLiMiddleDB::Init(FFLMiddleDBType, void*, unsigned short)
0200a314 00000020 T FFLiInitMiddleDB(FFLiMiddleDB*, FFLMiddleDBType, void*, unsigned short)
0200a334 00000008 T FFLiMiddleDB::Size() const
0200a33c 00000008 T FFLiMiddleDB::StoredSize() const
0200a344 00000020 T FFLiGetMiddleDBStoredSize(FFLiMiddleDB const*)
0200a364 00000008 T FFLiMiddleDB::Type() const
0200a36c 0000004c T FFLiMiddleDB::ClearData()
0200a3b8 00000008 T FFLiMiddleDB::HiddenParam() const
0200a3c0 00000008 T FFLiMiddleDB::RandomParam() const
0200a3c8 00000058 T FFLiMiddleDB::IsFull() const
0200a420 00000064 T FFLiMiddleDB::Add(FFLiCharInfo const&)
0200a484 00000078 T FFLiMiddleDB::Add(FFLiMiiDataHidden const&)
0200a4fc 00000010 T FFLiMiddleDB::Get(unsigned short) const
0200a50c 00000010 T FFLiMiddleDB::Get(unsigned short)
0200a51c 00000070 T FFLiMiddleDB::GetCharInfo(FFLiCharInfo*, unsigned short) const
0200a58c 0000006c t IsInvalidCharCode(unsigned short)
0200a5f8 00000014 t (anonymous namespace)::RflToFaceLineAndMake(int)
0200a60c 000000d4 t (anonymous namespace)::VerifyNameFromRFL(unsigned short*, int, int)
0200a6e0 00000064 t (anonymous namespace)::ReplaceNameFromRFL(unsigned short*, int, int)
0200a744 000003c0 T FFLiMiiDataCoreRFL2CharInfo(FFLiCharInfo*, FFLiMiiDataCoreRFL const&, unsigned short const*, bool)
0200ab04 0000002c T FFLiClearCreatorNameFromOfficial(FFLiMiiDataOfficial*)
0200ab30 00000390 T FFLiMiiDataCore2CharInfo(FFLiCharInfo*, FFLiMiiDataCore const&, unsigned short const*, bool)
0200aec0 00000570 T FFLiCharInfo2MiiDataCore(FFLiMiiDataCore*, FFLiCharInfo const&, bool)
0200b430 00000058 T FFLiMiiDataCoreRFL2MiiDataCore(FFLiMiiDataCore*, FFLiMiiDataCoreRFL const&, bool)
0200b488 00000028 T FFLiMiiDataOfficial2CharInfo(FFLiCharInfo*, FFLiMiiDataOfficial const&)
0200b4b0 00000048 T FFLiCharInfo2MiiDataOfficial(FFLiMiiDataOfficial*, FFLiCharInfo const&, bool)
0200b4f8 00000078 T FFLiStoreDataCFLToCharInfo(FFLiCharInfo*, FFLiStoreDataCFL const&)
0200b570 0000002c T FFLiMiiDataCore::SwapEndian()
0200b59c 00000064 T FFLiStoreData::SetCRC()
0200b610 00000038 T FFLiMiiDataOfficial::SwapEndian()
0200b648 0000004c T FFLiStoreData::SwapEndian()
0200b694 00000034 T FFLiGetMipMapNum(int, int)
0200b6c8 00000030 T FFLiGetMipMapLevelSize(unsigned int, unsigned int)
0200b6f8 0000009c T FFLiVerifyBirthday(int, int)
0200b794 00000060 T FFLiInitModulateMustache(FFLModulateParam*, int, rio::Texture2D const&)
0200b7f4 00000078 T FFLiInitModulateMouth(FFLModulateParam*, int, rio::Texture2D const&)
0200b86c 00000060 T FFLiInitModulateEyebrow(FFLModulateParam*, int, rio::Texture2D const&)
0200b8cc 00000078 T FFLiInitModulateEye(FFLModulateParam*, int, int, rio::Texture2D const&)
0200b944 0000005c T FFLiInitModulateMole(FFLModulateParam*, rio::Texture2D const&)
0200b9a0 00000028 T FFLiInitModulateFaceMake(FFLModulateParam*, rio::Texture2D const&)
0200b9c8 0000005c T FFLiInitModulateFaceLine(FFLModulateParam*, rio::Texture2D const&)
0200ba24 00000060 T FFLiInitModulateFaceBeard(FFLModulateParam*, int, rio::Texture2D const&)
0200ba84 00000024 T FFLiInitModulateShapeFaceline(FFLModulateParam*, rio::Texture2D const&)
0200baa8 00000058 T FFLiInitModulateShapeBeard(FFLModulateParam*, int)
0200bb00 00000058 T FFLiInitModulateShapeNose(FFLModulateParam*, int)
0200bb58 00000058 T FFLiInitModulateShapeForehead(FFLModulateParam*, int)
0200bbb0 00000058 T FFLiInitModulateShapeHair(FFLModulateParam*, int)
0200bc08 0000005c T FFLiInitModulateShapeCap(FFLModulateParam*, int, rio::Texture2D const&)
0200bc64 00000028 T FFLiInitModulateShapeMask(FFLModulateParam*, rio::Texture2D const&)
0200bc8c 0000005c T FFLiInitModulateShapeNoseline(FFLModulateParam*, rio::Texture2D const&)
0200bce8 00000060 T FFLiInitModulateShapeGlass(FFLModulateParam*, int, rio::Texture2D const&)
0200bd48 0000002c T FFLiInitModulateFill(FFLModulateParam*)
0200bd74 00000024 t (anonymous namespace)::DeleteTexture_Mustache(FFLiPartsTextures*, bool)
0200bd98 00000024 t (anonymous namespace)::DeleteTexture_Eyebrow(FFLiPartsTextures*, bool)
0200bdbc 00000024 t (anonymous namespace)::DeleteTexture_Mole(FFLiPartsTextures*, bool)
0200bde0 00000058 t (anonymous namespace)::InvalidateTexture(GX2Texture const&)
0200be48 00000068 t (anonymous namespace)::InvalidateTextures(rio::Texture2D**, unsigned int)
0200beb0 0000008c t (anonymous namespace)::ExpressionToEyeUseFlag(bool*, unsigned int)
0200bf3c 00000078 t (anonymous namespace)::DeleteTextures_Eye(FFLiPartsTextures*, unsigned int, bool)
0200bfb4 00000084 t (anonymous namespace)::ExpressionToMouthUseFlag(bool*, unsigned int)
0200c038 00000080 t (anonymous namespace)::DeleteTextures_Mouth(FFLiPartsTextures*, unsigned int, bool)
0200c0b8 00000054 T FFLiCharInfoAndTypeToEyeIndex(FFLiCharInfo const*, FFLiEyeTextureType)
0200c10c 00000054 T FFLiCharInfoAndTypeToMouthIndex(FFLiCharInfo const*, FFLiMouthTextureType)
0200c160 000002fc T FFLiLoadPartsTextures(FFLiPartsTextures*, FFLiCharInfo const*, unsigned int, FFLiResourceLoader*)
0200c45c 000000c4 T FFLiDeletePartsTextures(FFLiPartsTextures*, unsigned int, FFLResourceType)
0200c530 0000006c T FFLiInvalidatePartsTextures(FFLiPartsTextures*)
0200c59c 00000014 T FFLiGetEyeMouthTypeElement(FFLExpression)
0200c5b0 00000024 T FFLiGetMiiStudioTitleID()
0200c5e4 00000038 T FFLiGetResourcePath(char*, unsigned int, char const*)
0200c62c 0000003c T FFLiGetDatabasePath(char*, unsigned int, unsigned long long, char const*)
0200c678 00000018 T FFLiConvertFSStatusToFFLResult(rio::RawErrorCode)
0200c690 00000020 T FFLiRandomContext::Init(unsigned int)
0200c6b0 00000030 T FFLiRandomContext::Random(unsigned short)
0200c6e0 000007f8 t (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)
0200ced8 000001dc T FFLiInitDrawParamRawMask(FFLiRawMaskDrawParam*, FFLiCharInfo const*, int, int, int, FFLiRawMaskTextureDesc const*)
0200d0b4 00000070 T FFLiDeleteDrawParamRawMask(FFLiRawMaskDrawParam*)
0200d124 00000070 T FFLiInvalidateRawMask(FFLiRawMaskDrawParam*)
0200d194 00000290 T FFLiDrawRawMask(FFLiRawMaskDrawParam const*, FFLiShaderCallback const*)
0200d424 00000244 t (anonymous namespace)::CalcAttribute(FFLVec4*, FFLVec2*, FFLiOriginPosition, rio::BaseMtx44<float> const*)
0200d668 00000020 t (anonymous namespace)::EndianSwap(void*, unsigned int)
0200d688 00000030 t (anonymous namespace)::InvalidatePrimitive(FFLPrimitiveParam*)
0200d6c8 0000006c t (anonymous namespace)::InvalidateAttributes(FFLAttributeBufferParam*)
0200d744 00000020 t (anonymous namespace)::Allocate(unsigned int, unsigned int)
0200d764 00000070 t (anonymous namespace)::InitPrimitive(FFLPrimitiveParam*)
0200d7d4 000000a4 t (anonymous namespace)::InitAttributes(FFLAttributeBufferParam*, FFLiOriginPosition, rio::BaseMtx44<float> const*)
0200d878 00000068 t (anonymous namespace)::InitAttributesForFill(FFLAttributeBufferParam*)
0200d8e0 00000020 t (anonymous namespace)::Free(void*)
0200d900 00000028 t (anonymous namespace)::DeletePrimitive(FFLPrimitiveParam*)
0200d928 00000038 t (anonymous namespace)::DeleteAttributes(FFLAttributeBufferParam*)
0200d960 00000024 t (anonymous namespace)::DeleteAttributesForFill(FFLAttributeBufferParam*)
0200d984 00000038 T FFLiDeleteDrawParamRawMaskParts(FFLiRawMaskPartsDrawParam*)
0200d9bc 00000038 T FFLiInvalidateDrawParamRawMaskParts(FFLiRawMaskPartsDrawParam*)
0200d9f4 00000040 T FFLiInitDrawParamRawMaskPartsFill(FFLiRawMaskPartsDrawParam*)
0200da34 00000038 T FFLiDeleteDrawParamRawMaskPartsFill(FFLiRawMaskPartsDrawParam*)
0200da6c 0000002c T FFLiDrawRawMaskParts(FFLiRawMaskPartsDrawParam const*, FFLiShaderCallback const*)
0200da98 0000032c W rio::Matrix44<float>::setMul(rio::Matrix44<float> const&, rio::Matrix44<float> const&)
0200ddc4 000001b0 W rio::Matrix34<float>::makeSRT(rio::BaseVec3<float> const&, rio::BaseVec3<float> const&, rio::BaseVec3<float> const&)
0200df74 000000a4 t (anonymous namespace)::CalcMVMatrix(rio::Matrix34<float>*, FFLiRawMaskPartsDesc const*)
0200e018 000000a8 T FFLiInitDrawParamRawMaskParts(FFLiRawMaskPartsDrawParam*, FFLiRawMaskPartsDesc const*, rio::BaseMtx44<float> const*)
0200e0c0 00000074 W rio::RenderTarget::setMipLevel(unsigned int)
0200e144 0000007c W rio::RenderTargetColor::linkTexture2D(rio::Texture2D const&)
0200e1d0 00000090 W rio::RenderTargetDepth::linkTexture2D(rio::Texture2D const&)
0200e270 00000120 T FFLiInitRenderTexture(FFLiRenderTexture*, unsigned int, unsigned int, rio::TextureFormat, unsigned int)
0200e390 000000b0 T FFLiDeleteRenderTexture(FFLiRenderTexture*)
0200e440 00000058 T FFLiInvalidateRenderTexture(FFLiRenderTexture*)
0200e4a8 00000178 T FFLiSetupRenderTexture(FFLiRenderTexture*, FFLColor const*, rio::Texture2D*, unsigned int, FFLiShaderCallback const*)
0200e660 00000068 T FFLiFlushRenderTexture(FFLiRenderTexture*)
0200e6d8 00000084 T FFLiGetTextureResourceNum(FFLiTexturePartsType)
0200e75c 00000064 T FFLiGetShapeResourceNum(FFLiShapePartsType)
0200e7c0 000000cc T FFLiGetTextureResoucePartsInfos(unsigned int*, FFLiResourceTextureHeader*, FFLiTexturePartsType)
0200e88c 000000d4 T FFLiGetShapeResoucePartsInfos(unsigned int*, FFLiResourceShapeHeader*, FFLiShapePartsType)
0200e960 000000b4 T FFLiResourceWindowBitsToZlibWindowBits(FFLiResourceWindowBits)
0200ea14 00000078 T FFLiResourceHeader::GetResult() const
0200ea8c 00000028 T FFLiResourceLoader::FFLiResourceLoader(FFLiResourceManager*, FFLiResourceLoaderBuffer*, FFLResourceType)
0200ea8c 00000028 T FFLiResourceLoader::FFLiResourceLoader(FFLiResourceManager*, FFLiResourceLoaderBuffer*, FFLResourceType)
0200eab4 00000028 T FFLiResourceLoader::IsExpand() const
0200eadc 00000028 T FFLiResourceLoader::Header() const
0200eb04 00000044 T FFLiResourceLoader::GetTextureAlignedMaxSize(FFLiTexturePartsType) const
0200eb48 00000040 T FFLiResourceLoader::GetShapeAlignedMaxSize(FFLiShapePartsType) const
0200eb88 00000024 T FFLiResourceLoader::IsCached() const
0200ebac 00000074 T FFLiResourceLoader::GetPointerFromCache(void**, FFLiResourcePartsInfo const&)
0200ec20 000000c4 T FFLiResourceLoader::GetPointerTextureByExpandCache(void**, unsigned int*, FFLiTexturePartsType, unsigned int)
0200ece4 000000fc T FFLiResourceLoader::ReadWithPos(void*, unsigned int, unsigned int)
0200edf0 00000098 T FFLiResourceLoader::Close()
0200ee98 00000034 T FFLiResourceLoader::~FFLiResourceLoader()
0200ee98 00000034 T FFLiResourceLoader::~FFLiResourceLoader()
0200eecc 000000fc T FFLiResourceLoader::OpenIfClosed()
0200efd8 000000b8 t (anonymous namespace)::Uncompress(void*, void const*, FFLiResourceUncompressBuffer*, FFLiResourcePartsInfo const&)
0200f090 000000a8 T FFLiResourceLoader::LoadFromCache(void*, FFLiResourcePartsInfo const&)
0200f138 000000e8 T FFLiResourceLoader::LoadFromFile(void*, FFLiResourcePartsInfo const&)
0200f220 00000098 T FFLiResourceLoader::Load(void*, unsigned int*, FFLiResourcePartsInfo const&)
0200f2b8 000000a8 T FFLiResourceLoader::LoadTexture(void*, unsigned int*, FFLiTexturePartsType, unsigned int)
0200f360 000000a8 T FFLiResourceLoader::LoadShape(void*, unsigned int*, FFLiShapePartsType, unsigned int)
0200f408 00000020 T FFLiResourceLoaderBuffer::FFLiResourceLoaderBuffer(FFLiResourceManager const*, FFLResourceType)
0200f408 00000020 T FFLiResourceLoaderBuffer::FFLiResourceLoaderBuffer(FFLiResourceManager const*, FFLResourceType)
0200f428 00000020 T FFLiResourceLoaderBuffer::~FFLiResourceLoaderBuffer()
0200f428 00000020 T FFLiResourceLoaderBuffer::~FFLiResourceLoaderBuffer()
0200f448 0000007c T FFLiResourceManager::FFLiResourceManager(FFLiResourceMultiHeader*)
0200f448 0000007c T FFLiResourceManager::FFLiResourceManager(FFLiResourceMultiHeader*)
0200f4c4 00000024 T FFLiResourceManager::~FFLiResourceManager()
0200f4c4 00000024 T FFLiResourceManager::~FFLiResourceManager()
0200f4e8 0000001c T FFLiResourceManager::GetRelativeResourcePath(FFLResourceType, bool)
0200f504 00000054 T FFLiResourceManager::GetResourcePath(char*, unsigned int, FFLResourceType, bool)
0200f558 00000070 T FFLiResourceManager::AfterConstruct()
0200f5c8 00000024 T FFLiResourceManager::AttachCache(void*, unsigned int, FFLResourceType)
0200f5ec 00000024 T FFLiResourceManager::IsCached() const
0200f610 00000024 T FFLiResourceManager::HeaderFromCache(FFLResourceType) const
0200f634 00000010 T FFLiResourceManager::HeaderFromFile(FFLResourceType) const
0200f644 0000005c T FFLiResourceManager::Header(FFLResourceType) const
0200f6a0 00000058 T FFLiResourceManager::IsValid(FFLResourceType) const
0200f6f8 00000078 T FFLiResourceManager::IsExpand(FFLResourceType) const
0200f770 00000030 T FFLiResourceManager::GetUncompressBufferSize(FFLResourceType) const
0200f7a0 00000014 T FFLiResourceManager::GetPath(FFLResourceType) const
0200f7b4 00000180 T FFLiResourceManager::LoadResourceHeaderImpl()
0200f934 00000020 T FFLiResourceManager::LoadResourceHeader()
0200f954 00000040 T FFLiResourceUncompressBuffer::FFLiResourceUncompressBuffer(FFLiResourceManager const*, FFLResourceType)
0200f954 00000040 T FFLiResourceUncompressBuffer::FFLiResourceUncompressBuffer(FFLiResourceManager const*, FFLResourceType)
0200f994 00000040 T FFLiResourceUncompressBuffer::~FFLiResourceUncompressBuffer()
0200f994 00000040 T FFLiResourceUncompressBuffer::~FFLiResourceUncompressBuffer()
0200f9d4 00000008 T FFLiResourceUncompressBuffer::Buffer()
0200f9dc 00000020 T FFLiIsVaildResourceHeader(FFLiResourceHeader const*)
0200f9fc 0000000c T FFLiShaderCallback::FFLiShaderCallback()
0200f9fc 0000000c T FFLiShaderCallback::FFLiShaderCallback()
0200fa08 00000004 T FFLiShaderCallback::~FFLiShaderCallback()
0200fa08 00000004 T FFLiShaderCallback::~FFLiShaderCallback()
0200fa0c 00000010 T FFLiShaderCallback::IsExist() const
0200fa1c 00000008 T FFLiShaderCallback::Set(FFLShaderCallback const*)
0200fa24 00000078 T FFLiShaderCallback::CallApplyAlphaTest(bool, rio::Graphics::CompareFunc, float) const
0200fa9c 00000058 T FFLiShaderCallback::CallSetMatrix(rio::BaseMtx44<float> const&) const
0200faf4 00000058 T FFLiShaderCallback::CallDraw(FFLDrawParam const&) const
0200fb4c 0000002c t IsNaN(float)
0200fb78 00000044 t (anonymous namespace)::GetElementType(FFLAttributeBufferType)
0200fbbc 00000074 t (anonymous namespace)::FormatToStride(rio::VertexStream::Format)
0200fc30 000000b8 t (anonymous namespace)::GetStride(FFLAttributeBufferType, unsigned int)
0200fce8 00000174 t void (anonymous namespace)::AdjustAttribute<FFLVec4>(FFLVec4*, unsigned int, float, float, float, FFLVec3 const*, bool, FFLiCoordinate const*)
0200fe5c 000000dc t void (anonymous namespace)::AdjustAttributeWithoutScale<FFLiSnorm10_10_10_2>(FFLiSnorm10_10_10_2*, unsigned int, bool, FFLiCoordinate const*)
0200ff38 000000cc t void (anonymous namespace)::AdjustAttributeWithoutScale<FFLiSnorm8_8_8_8>(FFLiSnorm8_8_8_8*, unsigned int, bool, FFLiCoordinate const*)
02010004 00000174 t void (anonymous namespace)::AdjustAttribute<FFLVec3>(FFLVec3*, unsigned int, float, float, float, FFLVec3 const*, bool, FFLiCoordinate const*)
02010178 00000020 t (anonymous namespace)::EndianSwap(void*, unsigned int)
02010198 00000010 T FFLiCanDrawShape(FFLDrawParam const*)
020101a8 000002d8 T FFLiLoadShape(void**, FFLDrawParam*, FFLBoundingBox*, FFLiCharModel*, FFLiShapePartsType, unsigned short, FFLiResourceLoader*)
02010480 0000005c T FFLiDeleteShape(void**, FFLDrawParam*)
020104dc 00000194 T FFLiAdjustShape(FFLDrawParam*, FFLBoundingBox*, float, float, FFLVec3 const*, bool, FFLiCoordinate const*, FFLiShapePartsType, bool)
02010670 00000088 T FFLiInvalidateShape(FFLDrawParam*)
02010708 00000038 t (anonymous namespace)::TypeToSize(FFLiSwapEndianType)
02010740 00000004 W unsigned char FFLiSwapEndianImpl<unsigned char>(unsigned char)
02010744 0000005c W void FFLiSwapEndianArrayImpl<unsigned char>(unsigned char*, unsigned int)
020107a0 000000e0 T FFLiSwapEndianGroup(void*, FFLiSwapEndianDesc const*, unsigned int)
02010880 00000004 T FFLiSystemContext::~FFLiSystemContext()
02010880 00000004 T FFLiSystemContext::~FFLiSystemContext()
02010884 00000074 T FFLiSystemContext::Init(unsigned int)
020108f8 00000038 T FFLiSystemContext::FFLiSystemContext()
020108f8 00000038 T FFLiSystemContext::FFLiSystemContext()
02010930 0000000c T FFLiSystemContext::TitleID() const
0201093c 000000b8 T FFLiSystemContext::AfterConstruct()
02010a24 00000040 W rio::Texture2D::Texture2D(GX2Texture&)
02010a24 00000040 W rio::Texture2D::Texture2D(GX2Texture&)
02010a64 00000200 T FFLiLoadTextureWithAllocate(rio::Texture2D**, FFLiTexturePartsType, unsigned int, FFLiResourceLoader*)
02010c94 00000080 T FFLiDeleteTexture(rio::Texture2D**, bool)
02010d14 00000014 T FFLiRoundUp(unsigned int, unsigned int)
02010d28 00000014 T FFLiCheckAlignPtr(void const*, unsigned int)
02010d3c 00000038 T FFLiCopyWcharT2U16(unsigned short*, unsigned int, wchar_t const*)
02010d74 00000044 T FFLiCompareString16(unsigned short const*, unsigned short const*, int)
02010db8 0000009c T FFLiIsNumberCharCode(unsigned short)
02010e54 00000088 t (anonymous namespace)::GX2GetVertexAttribVar(GX2VertexShader const*, char const*)
02010edc 00000088 t (anonymous namespace)::GX2GetPixelSamplerVar(GX2PixelShader const*, char const*)
02010f64 00000064 t GetPixelSamplerLocation(unsigned int*, GX2PixelShader const*, char const*)
02010fc8 0000002c t FFLiInvalidateShader(void*, unsigned int)
02011004 00000028 t InvalidateFetchShader(GX2FetchShader*)
0201102c 00000198 T FFLiUtilShader::BuildShader(FFLiUtilShader::FetchShader*, GX2VertexShader const*, FFLiUtilShader::AttributeStreamDesc const*, unsigned int, bool)
020111e4 00000058 T FFLiUtilShader::DestroyShader(FFLiUtilShader::FetchShader*)
0201123c 00000020 T FFLiUtilShader::GetSamplerLocation(unsigned int*, GX2PixelShader const*, char const*)
0201125c 00000048 T FFLiZlibInflator::~FFLiZlibInflator()
0201125c 00000048 T FFLiZlibInflator::~FFLiZlibInflator()
020112a4 00000038 T FFLiZlibInflator::~FFLiZlibInflator()
020112dc 000000b8 T FFLiZlibInflator::Process(void**, unsigned int*, void const**, unsigned int*, int)
02011394 0000009c T FFLiZlibInflator::FFLiZlibInflator(int)
02011394 0000009c T FFLiZlibInflator::FFLiZlibInflator(int)
02011430 00000004 t (anonymous namespace)::GetMiddleDB(FFLMiddleDB*)
02011434 00000004 t (anonymous namespace)::GetMiddleDB(FFLMiddleDB const*)
02011438 00000020 T FFLGetMiddleDBBufferSize
02011458 00000054 T FFLInitMiddleDB
020114ac 00000024 T FFLUpdateMiddleDB
020114d0 00000024 T FFLGetMiddleDBStoredSize
020114f4 00000028 T FFLGetResourcePath
0201151c 00000048 T FFLSetShaderCallback
02011564 00000150 T rio::Initialize(rio::InitializeArg const&)
020116c4 00000060 T rio::EnterMainLoop()
02011724 00000064 T rio::Exit()
02011788 00000098 T rio::AudioMgr::AudioMgr()
02011788 00000098 T rio::AudioMgr::AudioMgr()
02011820 00000028 W std::__new_allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::deallocate(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >*, unsigned int)
02011848 0000004c W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::_M_drop_node(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >*)
02011894 00000068 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >*)
020118fc 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::~_Rb_tree()
020118fc 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioBgm*> > >::~_Rb_tree()
02011920 00000028 W std::__new_allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::deallocate(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >*, unsigned int)
02011948 0000004c W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::_M_drop_node(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >*)
02011994 00000068 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >*)
020119fc 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::~_Rb_tree()
020119fc 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::AudioSfx*> > >::~_Rb_tree()
02011a20 000000ac T rio::AudioMgr::createSingleton()
02011acc 0000005c T rio::AudioMgr::destroySingleton()
02011b28 00000088 T rio::LinkListNode::insertFront(rio::LinkListNode*)
02011bc0 00000094 T rio::LinkListNode::erase()
02011c64 00000038 T rio::LinkList::clear()
02011c9c 00000008 W rio::Controller::isConnected() const
02011ca4 00000098 T rio::Controller::calc()
02011d3c 00000024 T rio::Controller::isIdle_()
02011d60 00000024 T rio::Controller::setIdle_()
02011d84 00000064 T rio::Controller::Controller(rio::ControllerMgr*)
02011d84 00000064 T rio::Controller::Controller(rio::ControllerMgr*)
02011de8 00000030 t __static_initialization_and_destruction_0()
02011e18 000000a0 W rio::Math<float>::rsqrt(float)
02011ec8 00000130 T rio::ControllerBase::ControllerBase(int, int, int, int)
02011ec8 00000130 T rio::ControllerBase::ControllerBase(int, int, int, int)
02012008 000000a0 T rio::ControllerBase::isIdleBase_()
020120a8 00000098 T rio::ControllerBase::setIdleBase_()
02012140 00000034 W rio::Vector2<float>::length() const
02012174 00000220 T rio::ControllerBase::getStickHold_(unsigned int, rio::Vector2<float> const&, float, float, int)
02012394 00000058 W rio::BitFlag<unsigned int>::makeMask(int)
020123fc 00000060 W rio::BitFlag<unsigned int>::changeBit(int, bool)
0201245c 00000084 T rio::ControllerBase::setPointer_(bool, bool, rio::Vector2<float> const&)
020124e0 000000d8 T rio::ControllerBase::createStickCrossMask_()
020125b8 00000224 T rio::ControllerBase::updateDerivativeParams_(unsigned int, bool)
020127dc 00000020 t _GLOBAL__sub_I__ZN3rio14ControllerBase26cStickHoldThresholdDefaultE
020127fc 00000010 W rio::ITask::~ITask()
020127fc 00000010 W rio::ITask::~ITask()
0201280c 00000004 W rio::ITask::prepare_()
02012810 00000004 W rio::ITask::enter_()
02012814 00000004 W rio::ITask::exit_()
02012818 00000004 W rio::ITask::calc_()
0201281c 00000090 T rio::ControllerMgr::calc_()
020128ac 00000030 W rio::ITask::~ITask()
020128dc 00000044 T rio::ControllerMgr::destroySingleton()
02012920 00000044 T rio::ControllerMgr::getControllerByOrder(rio::ControllerDefine::ControllerId, int) const
02012964 00000038 T rio::ControllerMgr::getControlDevice(rio::ControllerDefine::DeviceId) const
0201299c 00000018 W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::clear()
020129b4 00000018 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::clear()
020129cc 000000c0 T rio::ControllerMgr::finalizeDefault_()
02012a8c 0000000c W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::back()
02012a98 0000000c W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::back()
02012aa4 00000028 W std::__new_allocator<rio::ControlDevice*>::deallocate(rio::ControlDevice**, unsigned int)
02012acc 00000038 W std::_Vector_base<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::~_Vector_base()
02012acc 00000038 W std::_Vector_base<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::~_Vector_base()
02012b04 00000020 W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::~vector()
02012b04 00000020 W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::~vector()
02012b24 00000028 W std::__new_allocator<rio::Controller*>::deallocate(rio::Controller**, unsigned int)
02012b4c 00000038 W std::_Vector_base<rio::Controller*, std::allocator<rio::Controller*> >::~_Vector_base()
02012b4c 00000038 W std::_Vector_base<rio::Controller*, std::allocator<rio::Controller*> >::~_Vector_base()
02012b84 00000020 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::~vector()
02012b84 00000020 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::~vector()
02012ba4 00000054 T rio::ControllerMgr::~ControllerMgr()
02012ba4 00000054 T rio::ControllerMgr::~ControllerMgr()
02012bf8 00000038 T rio::ControllerMgr::~ControllerMgr()
02012c30 00000050 W std::__new_allocator<rio::Controller*>::allocate(unsigned int, void const*)
02012c80 00000104 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::reserve(unsigned int)
02012d84 000000a0 W std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::_M_check_len(unsigned int, char const*) const
02012e24 000000a0 W std::vector<rio::Controller*, std::allocator<rio::Controller*> >::_M_check_len(unsigned int, char const*) const
02012ec4 00000128 W void std::vector<rio::Controller*, std::allocator<rio::Controller*> >::_M_realloc_insert<rio::Controller*>(__gnu_cxx::__normal_iterator<rio::Controller**, std::vector<rio::Controller*, std::allocator<rio::Controller*> > >, rio::Controller*&&)
02012fec 00000068 W rio::Controller*& std::vector<rio::Controller*, std::allocator<rio::Controller*> >::emplace_back<rio::Controller*>(rio::Controller*&&)
02013054 00000050 W std::__new_allocator<rio::ControlDevice*>::allocate(unsigned int, void const*)
020130a4 00000128 W void std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::_M_realloc_insert<rio::ControlDevice*>(__gnu_cxx::__normal_iterator<rio::ControlDevice**, std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> > >, rio::ControlDevice*&&)
020131cc 00000068 W rio::ControlDevice*& std::vector<rio::ControlDevice*, std::allocator<rio::ControlDevice*> >::emplace_back<rio::ControlDevice*>(rio::ControlDevice*&&)
02013234 00000184 T rio::ControllerMgr::initializeDefault_()
020133b8 00000094 T rio::ControllerMgr::ControllerMgr()
020133b8 00000094 T rio::ControllerMgr::ControllerMgr()
0201344c 00000070 W rio::ControllerMgr* rio::TaskMgr::createTask<rio::ControllerMgr>()
020134bc 00000058 T rio::ControllerMgr::createSingleton()
02013514 0000001c W rio::CafeDRCController::~CafeDRCController()
02013514 0000001c W rio::CafeDRCController::~CafeDRCController()
02013530 00000008 W rio::CafeDRCController::isConnected() const
02013538 0000003c W rio::CafeDRCController::~CafeDRCController()
02013574 00000098 T rio::CafeDRCController::CafeDRCController(rio::ControllerMgr*)
02013574 00000098 T rio::CafeDRCController::CafeDRCController(rio::ControllerMgr*)
0201360c 00000090 T rio::CafeDRCController::updateTouchPanelInfo_(rio::CafeDRCController::TouchPanelInfo*, bool, float, float)
0201369c 0000056c T rio::CafeDRCController::calcImpl_()
02013c18 0000001c W rio::CafeRemoteController::~CafeRemoteController()
02013c18 0000001c W rio::CafeRemoteController::~CafeRemoteController()
02013c34 00000008 W rio::CafeRemoteController::isConnected() const
02013c3c 00000808 T rio::CafeRemoteController::calcImpl_()
02014454 0000003c W rio::CafeRemoteController::~CafeRemoteController()
02014490 00000068 T rio::CafeRemoteController::CafeRemoteController(rio::ControllerMgr*, int)
02014490 00000068 T rio::CafeRemoteController::CafeRemoteController(rio::ControllerMgr*, int)
020144f8 0000001c T rio::CafeVPadDevice::~CafeVPadDevice()
020144f8 0000001c T rio::CafeVPadDevice::~CafeVPadDevice()
02014514 00000038 T rio::CafeVPadDevice::~CafeVPadDevice()
0201454c 00000040 T rio::CafeVPadDevice::calc()
0201459c 00000038 T rio::CafeVPadDevice::VPadInfo::VPadInfo()
0201459c 00000038 T rio::CafeVPadDevice::VPadInfo::VPadInfo()
020145d4 0000006c T rio::CafeVPadDevice::CafeVPadDevice(rio::ControllerMgr*)
020145d4 0000006c T rio::CafeVPadDevice::CafeVPadDevice(rio::ControllerMgr*)
02014640 00000044 T rio::CafeWPadDevice::~CafeWPadDevice()
02014640 00000044 T rio::CafeWPadDevice::~CafeWPadDevice()
02014694 00000038 T rio::CafeWPadDevice::~CafeWPadDevice()
020146cc 0000007c T rio::CafeWPadDevice::calc()
02014758 00000068 W rio::CafeWPadDevice::KPadInfo::KPadInfo()
02014758 00000068 W rio::CafeWPadDevice::KPadInfo::KPadInfo()
020147c0 000000b8 T rio::CafeWPadDevice::CafeWPadDevice(rio::ControllerMgr*)
020147c0 000000b8 T rio::CafeWPadDevice::CafeWPadDevice(rio::ControllerMgr*)
020148a8 00000044 W rio::NativeFileDevice::~NativeFileDevice()
020148a8 00000044 W rio::NativeFileDevice::~NativeFileDevice()
020148ec 00000038 W rio::NativeFileDevice::~NativeFileDevice()
02014924 00000044 W rio::ContentFileDevice::~ContentFileDevice()
02014924 00000044 W rio::ContentFileDevice::~ContentFileDevice()
02014968 00000038 W rio::ContentFileDevice::~ContentFileDevice()
020149a0 000000e0 T rio::ContentFileDevice::ContentFileDevice()
020149a0 000000e0 T rio::ContentFileDevice::ContentFileDevice()
02014a90 000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::__str_concat<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::value_type const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::value_type const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size_type, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::allocator_type const&)
02014b40 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)
02014b88 00000084 W rio::ContentFileDevice::getNativePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
02014c0c 0000002c T rio::FileDevice::getLastRawError() const
02014c38 0000002c T rio::FileDevice::tryLoad(rio::FileDevice::LoadArg&)
02014c64 00000098 T rio::FileDevice::tryOpen(rio::FileHandle*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rio::FileDevice::FileOpenFlag)
02014d1c 000000d0 T rio::FileDevice::tryClose(rio::FileHandle*)
02014e0c 00000164 T rio::FileDevice::tryRead(unsigned int*, rio::FileHandle*, unsigned char*, unsigned int)
02014f90 00000164 T rio::FileDevice::tryWrite(unsigned int*, rio::FileHandle*, unsigned char const*, unsigned int)
02015114 000000ac T rio::FileDevice::trySeek(rio::FileHandle*, int, rio::FileDevice::SeekOrigin)
020151e0 000000e8 T rio::FileDevice::tryGetFileSize(unsigned int*, rio::FileHandle*)
020152e8 00000238 T rio::FileDevice::doLoad_(rio::FileDevice::LoadArg&)
02015540 0000006c T rio::FileDevice::tryIsExistFile(bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
020155cc 00000068 T rio::FileHandle::tryClose()
02015654 00000074 T rio::FileHandle::tryRead(unsigned int*, unsigned char*, unsigned int)
020156e8 00000074 T rio::FileHandle::tryWrite(unsigned int*, unsigned char const*, unsigned int)
0201577c 00000074 T rio::FileHandle::trySeek(int, rio::FileDevice::SeekOrigin)
02015810 00000054 T rio::FileDevice::~FileDevice()
02015810 00000054 T rio::FileDevice::~FileDevice()
02015864 0000003c W rio::FileDevice::getNativePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
020158a0 0000008c T rio::FileDeviceMgr::~FileDeviceMgr()
020158a0 0000008c T rio::FileDeviceMgr::~FileDeviceMgr()
0201595c 00000054 T rio::FileDeviceMgr::destroySingleton()
020159b0 000000a8 T rio::FileDeviceMgr::unmount(rio::FileDevice*)
02015a68 00000068 W rio::FileDevice::LoadArg::LoadArg(rio::FileDevice::LoadArg const&)
02015a68 00000068 W rio::FileDevice::LoadArg::LoadArg(rio::FileDevice::LoadArg const&)
02015ad0 0000006c W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02015b3c 00000080 T rio::FileDeviceMgr::findDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
02015bbc 000000bc T rio::FileDeviceMgr::findDeviceFromPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
02015c78 00000108 T rio::FileDeviceMgr::tryLoad(rio::FileDevice::LoadArg&)
02015d90 00000048 W rio::TListNode<rio::FileDevice*>::erase()
02015dd8 00000058 W rio::TList<rio::FileDevice*>::pushBack(rio::TListNode<rio::FileDevice*>*)
02015e30 00000098 T rio::FileDeviceMgr::mount(rio::FileDevice*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02015ed8 00000140 T rio::FileDeviceMgr::FileDeviceMgr()
02015ed8 00000140 T rio::FileDeviceMgr::FileDeviceMgr()
02016048 0000007c T rio::FileDeviceMgr::createSingleton()
020160c4 000000a8 T rio::Path::getDriveName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0201617c 000000ac T rio::Path::getPathExceptDrive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02016238 00000010 T rio::NativeFileDevice::doGetCurrentSeekPos_(unsigned int*, rio::FileHandle*)
02016248 00000008 T rio::NativeFileDevice::doGetLastRawError_() const
02016250 00000034 W rio::NativeFileDevice::getNativePath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
02016284 00000074 T rio::NativeFileDevice::doClose_(rio::FileHandle*)
02016318 000000f0 T rio::NativeFileDevice::doRead_(unsigned int*, rio::FileHandle*, unsigned char*, unsigned int)
02016438 000000f0 T rio::NativeFileDevice::doWrite_(unsigned int*, rio::FileHandle*, unsigned char const*, unsigned int)
02016558 0000012c T rio::NativeFileDevice::doSeek_(rio::FileHandle*, int, rio::FileDevice::SeekOrigin)
020166b4 0000008c T rio::NativeFileDevice::doGetFileSize_(unsigned int*, rio::FileHandle*)
02016760 0000015c T rio::NativeFileDevice::doOpen_(rio::FileHandle*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, rio::FileDevice::FileOpenFlag)
020168ec 000000d0 T rio::NativeFileDevice::doGetFileSize_(unsigned int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
020169dc 000000f8 T rio::NativeFileDevice::doIsExistFile_(bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02016af4 000000c8 T rio::NativeFileDevice::NativeFileDevice()
02016af4 000000c8 T rio::NativeFileDevice::NativeFileDevice()
02016bbc 00000090 T rio::NativeFileDevice::NativeFileDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02016bbc 00000090 T rio::NativeFileDevice::NativeFileDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02016c4c 0000009c W rio::Vector3<float>::normalized() const
02016cf8 0000017c T rio::LookAtCamera::getMatrix(rio::BaseMtx34<float>*) const
02016e84 0000005c W rio::TextureSampler2D::linkNativeTexture2D(GX2Texture const*)
02016ef0 00000064 W rio::TextureSampler2D::linkTexture2D(rio::Texture2D const*)
02016f64 00000048 W rio::VertexArray::VertexArray()
02016f64 00000048 W rio::VertexArray::VertexArray()
02016fac 00000100 T rio::PrimitiveRenderer::~PrimitiveRenderer()
02016fac 00000100 T rio::PrimitiveRenderer::~PrimitiveRenderer()
020170ac 00000054 T rio::PrimitiveRenderer::destroySingleton()
02017100 0000005c W rio::PrimitiveRenderer::getQuadVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)
0201715c 0000005c W rio::PrimitiveRenderer::getLineVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)
020171b8 0000005c W rio::PrimitiveRenderer::getCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)
02017214 0000004c W rio::PrimitiveRenderer::getWireCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)
02017260 0000043c W rio::PrimitiveRenderer::getSphereVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*, int, int)
0201769c 000001b0 W rio::PrimitiveRenderer::getDiskVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*, int)
0201784c 00000338 W rio::PrimitiveRenderer::getCylinderVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*, int)
02017b84 000001f8 W rio::Matrix34<float>::setMul(rio::Matrix34<float> const&, rio::Matrix34<float> const&)
02017d7c 00000048 W rio::TListNode<rio::VertexStream*>::erase()
02017dc4 00000058 W rio::TList<rio::VertexStream*>::pushBack(rio::TListNode<rio::VertexStream*>*)
02017e1c 000007bc T rio::PrimitiveRenderer::initialize_(char const*)
020185e8 00000174 T rio::PrimitiveRenderer::PrimitiveRenderer(char const*)
020185e8 00000174 T rio::PrimitiveRenderer::PrimitiveRenderer(char const*)
0201875c 00000088 T rio::PrimitiveRenderer::createSingleton(char const*)
020187e4 000000f4 T rio::PerspectiveProjection::updateMatrix_() const
020188d8 000000d8 T rio::OrthoProjection::updateMatrix_() const
020189b0 0000006c T rio::PerspectiveProjection::setFovy_(float)
02018a1c 0000006c T rio::PerspectiveProjection::PerspectiveProjection(float, float, float, float)
02018a1c 0000006c T rio::PerspectiveProjection::PerspectiveProjection(float, float, float, float)
02018a88 0000003c T rio::OrthoProjection::OrthoProjection(float, float, float, float, float, float)
02018a88 0000003c T rio::OrthoProjection::OrthoProjection(float, float, float, float, float, float)
02018ac4 000000c4 W rio::Window::Window(unsigned int, unsigned int)
02018ac4 000000c4 W rio::Window::Window(unsigned int, unsigned int)
02018b98 0000018c T rio::Window::createSingleton(unsigned int, unsigned int)
02018d24 00000054 T rio::Window::destroySingleton()
02018d78 00000094 T rio::Graphics::setViewport(int, int, unsigned int, unsigned int, float, float, int)
02018e1c 00000020 T rio::Graphics::setScissor(int, int, unsigned int, unsigned int, int)
02018e4c 0000050c T rio::Window::foregroundAcquire_()
02019488 00000098 T rio::Window::foregroundRelease_()
02019540 00000008 T rio::Window::isRunning() const
02019548 0000007c T rio::Window::terminate_()
020195e4 00000044 T rio::Window::makeContextCurrent() const
02019658 00000024 T rio::Window::setSwapInterval(unsigned int)
0201968c 00000118 T rio::Window::initialize_()
020197d4 000000e8 T rio::Window::swapBuffers() const
0201994c 00000038 T rio::Window::clearColor(float, float, float, float)
02019994 00000040 T rio::Window::clearDepth(float)
020199e4 00000044 T rio::Window::clearStencil(unsigned char)
02019a38 00000044 T rio::Window::clearDepthStencil()
02019a8c 0000003c T rio::Window::clearDepthStencil(float, unsigned char)
02019ad8 00000020 T rio::lyr::Renderer::Renderer()
02019ad8 00000020 T rio::lyr::Renderer::Renderer()
02019af8 00000060 T rio::lyr::Renderer::createSingleton()
02019b58 000002c4 T rio::lyr::Renderer::render() const
02019e1c 00000028 W std::__new_allocator<std::_Rb_tree_node<rio::lyr::Layer*> >::deallocate(std::_Rb_tree_node<rio::lyr::Layer*>*, unsigned int)
02019e44 0000006c W std::_Rb_tree<rio::lyr::Layer*, rio::lyr::Layer*, std::_Identity<rio::lyr::Layer*>, rio::lyr::Layer::Comparator, std::allocator<rio::lyr::Layer*> >::_M_erase(std::_Rb_tree_node<rio::lyr::Layer*>*)
02019eb0 00000048 W std::_Rb_tree<rio::lyr::Layer*, rio::lyr::Layer*, std::_Identity<rio::lyr::Layer*>, rio::lyr::Layer::Comparator, std::allocator<rio::lyr::Layer*> >::clear()
02019ef8 00000080 W rio::lyr::Renderer::clearLayers()
02019f78 00000024 W std::_Rb_tree<rio::lyr::Layer*, rio::lyr::Layer*, std::_Identity<rio::lyr::Layer*>, rio::lyr::Layer::Comparator, std::allocator<rio::lyr::Layer*> >::~_Rb_tree()
02019f78 00000024 W std::_Rb_tree<rio::lyr::Layer*, rio::lyr::Layer*, std::_Identity<rio::lyr::Layer*>, rio::lyr::Layer::Comparator, std::allocator<rio::lyr::Layer*> >::~_Rb_tree()
02019f9c 00000034 T rio::lyr::Renderer::~Renderer()
02019f9c 00000034 T rio::lyr::Renderer::~Renderer()
02019fd0 00000054 T rio::lyr::Renderer::destroySingleton()
0201a024 00000050 W rio::TextureSampler2D::tryBindFS(unsigned int, unsigned int) const
0201a074 00000034 T rio::mdl::res::ModelCacher::ModelCacher()
0201a074 00000034 T rio::mdl::res::ModelCacher::ModelCacher()
0201a0a8 00000060 T rio::mdl::res::ModelCacher::createSingleton()
0201a108 00000058 W rio::FileDevice::LoadArg::LoadArg()
0201a108 00000058 W rio::FileDevice::LoadArg::LoadArg()
0201a160 00000028 W std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned int)
0201a188 00000024 W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned int)
0201a1ac 00000034 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_deallocate_buckets()
0201a1e0 00000028 W std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> >::deallocate(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true>*, unsigned int)
0201a208 00000024 W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true>*)
0201a22c 00000048 W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true>*)
0201a274 0000004c W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, true>*)
0201a2c0 00000050 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
0201a310 00000034 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
0201a310 00000034 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rio::mdl::res::Model*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
0201a344 0000005c T rio::mdl::res::ModelCacher::~ModelCacher()
0201a344 0000005c T rio::mdl::res::ModelCacher::~ModelCacher()
0201a3a0 00000054 T rio::mdl::res::ModelCacher::destroySingleton()
0201a3f4 0000005c T rio::RenderBuffer::RenderBuffer()
0201a3f4 0000005c T rio::RenderBuffer::RenderBuffer()
0201a450 00000068 T rio::RenderBuffer::bindRenderTargetColor_() const
0201a4b8 00000038 T rio::RenderBuffer::bindRenderTargetDepth_() const
0201a4f0 00000078 T rio::RenderBuffer::bind() const
0201a568 000000b0 T rio::RenderState::RenderState()
0201a568 000000b0 T rio::RenderState::RenderState()
0201a618 00000058 T rio::RenderTargetColor::linkNativeTexture2D(GX2Texture const*)
0201a670 00000058 T rio::RenderTargetDepth::linkNativeTexture2D(GX2Texture const*)
0201a6c8 00000058 T rio::RenderTargetColor::invalidateGPUCache() const
0201a730 00000058 T rio::RenderTargetDepth::invalidateGPUCache() const
0201a798 00000054 T rio::RenderTargetColor::RenderTargetColor()
0201a798 00000054 T rio::RenderTargetColor::RenderTargetColor()
0201a7ec 00000084 T rio::RenderTargetColor::initRegs_() const
0201a890 0000005c T rio::RenderTargetColor::bind(unsigned int) const
0201a8fc 00000024 W rio::RenderTargetColor::bind() const
0201a920 0000006c T rio::RenderTargetDepth::RenderTargetDepth()
0201a920 0000006c T rio::RenderTargetDepth::RenderTargetDepth()
0201a99c 00000094 T rio::RenderTargetDepth::initRegs_() const
0201aa50 0000004c T rio::RenderTargetDepth::bind() const
0201aaac 000000e0 T rio::TextureFormatUtil::isUsableAsRenderTargetColor(rio::TextureFormat)
0201ab8c 00000058 T rio::TextureFormatUtil::isUsableAsRenderTargetDepth(rio::TextureFormat)
0201abe4 0000003c T rio::TextureFormatUtil::hasStencil(rio::TextureFormat)
0201ac20 00000014 T rio::TextureFormatUtil::getDefaultCompMap(rio::TextureFormat)
0201ac34 000001bc T rio::RenderState::apply() const
0201ae80 00000080 T rio::RenderState::applyDepthAndStencilTest() const
0201af20 00000064 T rio::RenderState::applyColorMask() const
0201af94 000000a0 T rio::RenderState::applyBlendAndFastZ() const
0201b054 00000064 T rio::RenderState::applyCullingAndPolygonModeAndPolygonOffset() const
0201b0c8 00000088 t (anonymous namespace)::GX2GetVertexAttribVar(GX2VertexShader const*, char const*)
0201b150 00000088 t (anonymous namespace)::GX2GetPixelSamplerVar(GX2PixelShader const*, char const*)
0201b1d8 00000088 t GX2GetVertexUniformVar
0201b260 00000088 t GX2GetPixelUniformVar
0201b2e8 00000074 W rio::FileDeviceMgr::load(rio::FileDevice::LoadArg&)
0201b37c 00000018 T rio::Shader::initialize_()
0201b394 000000e4 T rio::Shader::unload()
0201b488 0000009c T rio::Shader::setShaderMode(rio::Shader::ShaderMode, bool)
0201b544 0000007c T rio::Shader::bind(bool) const
0201b5f0 00000080 T rio::Shader::getVertexAttribLocation(char const*) const
0201b680 00000080 T rio::Shader::getFragmentSamplerLocation(char const*) const
0201b710 00000080 T rio::Shader::getVertexUniformLocation(char const*) const
0201b7a0 00000080 T rio::Shader::getFragmentUniformLocation(char const*) const
0201b830 0000007c T rio::Shader::setUniform(rio::BaseVec4<float> const&, unsigned int, unsigned int)
0201b8cc 00000044 T rio::Shader::setUniform(float, unsigned int, unsigned int)
0201b910 00000048 T rio::Shader::setUniform(rio::BaseVec3<float> const&, unsigned int, unsigned int)
0201b958 0000007c T rio::Shader::setUniform(rio::BaseVec4<int> const&, unsigned int, unsigned int)
0201b9f4 00000038 T rio::Shader::setUniform(int, unsigned int, unsigned int)
0201ba2c 000000ec T rio::Shader::setUniformColumnMajor(rio::BaseMtx33<float> const&, unsigned int, unsigned int)
0201bb38 00000108 T rio::Shader::setUniform(rio::BaseMtx44<float> const&, unsigned int, unsigned int)
0201bc60 00000084 T rio::Shader::setUniformColumnMajor(rio::BaseMtx44<float> const&, unsigned int, unsigned int)
0201bd04 00000268 T rio::Shader::load(char const*, rio::Shader::ShaderMode)
0201bf7c 00000058 T rio::Texture2D::createHandle_()
0201bfe4 00000220 T rio::Texture2D::Texture2D(rio::TextureFormat, unsigned int, unsigned int, unsigned int)
0201bfe4 00000220 T rio::Texture2D::Texture2D(rio::TextureFormat, unsigned int, unsigned int, unsigned int)
0201c244 00000064 T rio::Texture2D::~Texture2D()
0201c244 00000064 T rio::Texture2D::~Texture2D()
0201c2a8 00000078 W rio::TextureSampler2D::init_()
0201c320 0000003c T rio::TextureSampler2D::TextureSampler2D()
0201c320 0000003c T rio::TextureSampler2D::TextureSampler2D()
0201c36c 00000004 T rio::TextureSampler2D::~TextureSampler2D()
0201c36c 00000004 T rio::TextureSampler2D::~TextureSampler2D()
0201c370 00000058 T rio::TextureSampler2D::updateFilter_() const
0201c3e8 00000030 T rio::TextureSampler2D::updateWrap_() const
0201c428 00000130 T rio::TextureSampler2D::updateBorderColor_() const
0201c568 00000030 T rio::TextureSampler2D::updateLOD_() const
0201c5a8 00000028 T rio::TextureSampler2D::updateDepthComp_() const
0201c5e0 000000ac W rio::TextureSampler2D::update() const
0201c68c 000000d0 T rio::TextureSampler2D::bindFS(unsigned int, unsigned int) const
0201c79c 00000040 T rio::VertexArray::~VertexArray()
0201c79c 00000040 T rio::VertexArray::~VertexArray()
0201c7dc 00000094 T rio::VertexArray::initialize()
0201c870 000001ac T rio::VertexArray::process()
0201ca5c 00000088 T rio::VertexBuffer::VertexBuffer(unsigned int)
0201ca5c 00000088 T rio::VertexBuffer::VertexBuffer(unsigned int)
0201caf4 00000004 T rio::VertexBuffer::~VertexBuffer()
0201caf4 00000004 T rio::VertexBuffer::~VertexBuffer()
0201caf8 0000002c T rio::VertexBuffer::invalidateCache(void const*, unsigned int)
0201cb34 00000308 T rio::VertexStream::setLayout(unsigned char, rio::VertexStream::Format, unsigned int)
0201ce4c 00000010 T rio::Vector2<float>::squaredLength() const
0201ce5c 00000024 T rio::Vector3<float>::setSub(rio::Vector3<float> const&, rio::Vector3<float> const&)
0201ce80 00000024 T rio::Vector3<float>::setMul(rio::Vector3<float> const&, rio::Vector3<float> const&)
0201cea4 0000001c T rio::Vector3<float>::setScale(rio::Vector3<float> const&, float)
0201cec0 0000001c T rio::Vector3<float>::squaredLength() const
0201cedc 00000024 T rio::Vector3<float>::dot(rio::Vector3<float> const&) const
0201cf00 0000003c T rio::Vector3<float>::setCross(rio::Vector3<float> const&, rio::Vector3<float> const&)
0201cf3c 0000002c T rio::ITask::ITask(char const*)
0201cf3c 0000002c T rio::ITask::ITask(char const*)
0201cf68 00000098 T rio::TaskMgr::createSingleton()
0201d000 00000040 T rio::TaskMgr::destroySingleton()
0201d040 00000048 W rio::TListNode<rio::ITask*>::erase()
0201d088 00000058 W rio::TList<rio::ITask*>::pushBack(rio::TListNode<rio::ITask*>*)
0201d0e0 000001dc T rio::TaskMgr::changeTaskState_(rio::ITask*, rio::ITask::State)
0201d2cc 00000090 T rio::TaskMgr::destroyTask(rio::ITask*)
0201d35c 00000104 T rio::TaskMgr::calc()
0201d460 00000044 t ImMin(ImVec2 const&, ImVec2 const&)
0201d4a4 0000004c t ImMax(ImVec2 const&, ImVec2 const&)
0201d4f0 00000064 t ImClamp(ImVec2 const&, ImVec2 const&, ImVec2)
0201d554 0000004c t ImLerp(ImVec2 const&, ImVec2 const&, ImVec2 const&)
0201d5a0 00000080 t ImTrunc(ImVec2 const&)
0201d620 000000bc t ImFloor(float)
0201d6dc 00000054 t ImFloor(ImVec2 const&)
0201d730 000000ec t ImTextCharToUtf8_inline(char*, int, unsigned int)
0201d81c 0000004c t LowerBound(ImVector<ImGuiStorage::ImGuiStoragePair>&, unsigned int)
0201d868 00000014 t ApplyHoverFlagsForTooltip(int, int)
0201d87c 00000130 t ScaleWindow(ImGuiWindow*, float)
0201d9ac 0000002c t IsWindowActiveAndVisible(ImGuiWindow*)
0201d9d8 00000040 t ChildWindowComparer(void const*, void const*)
0201da18 00000084 t SetWindowConditionAllowFlags(ImGuiWindow*, int, bool)
0201da9c 00000024 t GetWindowForTitleAndMenuHeight(ImGuiWindow*)
0201dac0 00000200 t CalcWindowContentSizes(ImGuiWindow*, ImVec2*, ImVec2*)
0201dcc0 00000040 t GetWindowBgColorIdx(ImGuiWindow*)
0201dd00 00000038 t GetCombinedRootWindow(ImGuiWindow*, bool, bool)
0201dd38 00000040 t CalcScrollEdgeSnap(float, float, float, float, float)
0201dd78 00000050 t ImGetDirQuadrantFromDelta(float, float)
0201ddc8 00000044 t ImGui::NavSaveLastChildNavWindowIntoParent(ImGuiWindow*)
0201de0c 00000078 t ImGui::GetWindowAlwaysWantOwnViewport(ImGuiWindow*)
0201de84 0000003c t DockNodeComparerDepthMostFirst(void const*, void const*)
0201dec0 00000038 t ImGui::DockContextQueueNotifyRemovedNode(ImGuiContext*, ImGuiDockNode*)
0201def8 00000028 t DockNodeHideWindowDuringHostWindowCreation(ImGuiWindow*)
0201df20 00000084 t ImGui::DockNodeUpdateHasCentralNodeChild(ImGuiDockNode*)
0201dfa4 000000ac t ImGui::DockNodeUpdateVisibleFlag(ImGuiDockNode*)
0201e050 00000038 t DockNodeSetupHostWindow(ImGuiDockNode*, ImGuiWindow*)
0201e088 00000060 t TabItemComparerByDockOrder(void const*, void const*)
0201e0e8 000000d0 t IsDockNodeTitleBarHighlighted(ImGuiDockNode*, ImGuiDockNode*)
0201e1b8 0000019c t ImGui::DockNodeCalcTabBarLayout(ImGuiDockNode const*, ImRect*, ImRect*, ImVec2*, ImVec2*)
0201e354 0000005c t ImGui::DockNodeTreeFindFallbackLeafNode(ImGuiDockNode*)
0201e3b0 0000001c t GetClipboardTextFn_DefaultImpl(void*)
0201e3cc 00000004 t SetPlatformImeDataFn_DefaultImpl(ImGuiViewport*, ImGuiPlatformImeData*)
0201e3d0 0000005c t ImGui::NavUpdateAnyRequestFlag()
0201e42c 000000ec t CalcRoutingScore(ImGuiWindow*, unsigned int, int)
0201e518 00000068 t GetMouseSourceName(ImGuiMouseSource)
0201e580 0000008c t ImGui::DockNodeMoveChildNodes(ImGuiDockNode*, ImGuiDockNode*)
0201e60c 00000124 t DockNodeFindInfo(ImGuiDockNode*, ImGuiDockNodeTreeInfo*)
0201e730 00000148 t GetResizeBorderRect(ImGuiWindow*, int, float, float)
0201e878 0000006c t ImGui::DockNodeFindWindowByID(ImGuiDockNode*, unsigned int)
0201e8e4 00000020 t FreeWrapper(void*, void*)
0201e904 00000020 t MallocWrapper(unsigned int, void*)
0201e924 00000210 t WindowSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
0201eb34 00000080 t ImGui::NavRestoreLastChildNavWindow(ImGuiWindow*)
0201ebb4 00000040 t ImGui::DockSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
0201ebf4 000000dc t GetFallbackWindowNameForWindowingList(ImGuiWindow*)
0201ecd0 00000100 t AddWindowToDrawData(ImGuiWindow*, int)
0201edd0 00000028 t AddRootWindowToDrawData(ImGuiWindow*)
0201edf8 00000040 W ImVec2::operator[](unsigned int)
0201ee38 00000294 t CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow*)
0201f0cc 00000324 t ImGui::DockNodeCalcSplitRects(ImVec2&, ImVec2&, ImVec2&, ImVec2&, int, ImVec2)
0201f3f0 00000890 t ImGui::DockNodeTreeUpdatePosSize(ImGuiDockNode*, ImVec2, ImVec2, ImGuiDockNode*)
0201fc80 00000040 W ImVec2::operator[](unsigned int) const
0201fcc0 000001c0 t FindBestWheelingWindow(ImVec2 const&)
0201fe80 00000064 W ImGuiPayload::Clear()
0201fee4 0000005c W ImGuiPayload::IsDataType(char const*) const
0201ff40 0000001c W ImDrawListSplitter::ImDrawListSplitter()
0201ff40 0000001c W ImDrawListSplitter::ImDrawListSplitter()
0201ff5c 000000b4 W ImDrawList::ImDrawList(ImDrawListSharedData*)
0201ff5c 000000b4 W ImDrawList::ImDrawList(ImDrawListSharedData*)
02020010 00000040 W ImDrawList::PathFillConvex(unsigned int)
02020050 00000044 W ImDrawList::PathStroke(unsigned int, int, float)
02020094 00000050 W ImGuiViewport::ImGuiViewport()
02020094 00000050 W ImGuiViewport::ImGuiViewport()
020200e4 00000044 W ImGuiViewport::~ImGuiViewport()
020200e4 00000044 W ImGuiViewport::~ImGuiViewport()
02020128 00000044 W ImGuiViewport::GetCenter() const
0202016c 00000044 W ImGuiPlatformIO::ImGuiPlatformIO()
0202016c 00000044 W ImGuiPlatformIO::ImGuiPlatformIO()
020201b0 00000060 W ImGuiPlatformMonitor::ImGuiPlatformMonitor()
020201b0 00000060 W ImGuiPlatformMonitor::ImGuiPlatformMonitor()
02020210 00000044 W ImRect::GetCenter() const
02020254 00000150 t NavBiasScoringRect(ImRect&, ImVec2&, int, int)
020203a4 0000006c W ImRect::Contains(ImVec2 const&) const
02020410 00000574 t ImGui::DockNodeCalcDropRectsAndTestMousePos(ImRect const&, int, ImRect&, bool, ImVec2*)
02020984 00000590 t ImGui::DockNodePreviewDockSetup(ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, ImGuiDockNode*, ImGuiDockPreviewData*, bool, bool)
02020f14 00000154 t ImGui::DockNodeTreeFindVisibleNodeByPos(ImGuiDockNode*, ImVec2)
02021068 0000007c W ImRect::Contains(ImRect const&) const
020210e4 00000084 W ImRect::ContainsWithPad(ImVec2 const&, ImVec2 const&) const
02021168 0000006c W ImRect::Overlaps(ImRect const&) const
020211d4 00000054 W ImRect::Add(ImRect const&)
02021228 00000044 W ImRect::Expand(ImVec2 const&)
0202126c 00000044 W ImRect::Translate(ImVec2 const&)
020212b0 000000f4 t TranslateWindow(ImGuiWindow*, ImVec2 const&)
020213a4 00000054 W ImRect::ClipWith(ImRect const&)
020213f8 0000007c W ImRect::ClipWithFull(ImRect const&)
02021474 00000580 t ImGui::NavScoreItem(ImGuiNavItemData*)
020219f4 0000001c W ImDrawDataBuilder::ImDrawDataBuilder()
020219f4 0000001c W ImDrawDataBuilder::ImDrawDataBuilder()
02021a10 00000058 W ImGuiComboPreviewData::ImGuiComboPreviewData()
02021a10 00000058 W ImGuiComboPreviewData::ImGuiComboPreviewData()
02021a68 00000018 W ImGuiInputTextDeactivatedState::ImGuiInputTextDeactivatedState()
02021a68 00000018 W ImGuiInputTextDeactivatedState::ImGuiInputTextDeactivatedState()
02021a80 00000050 W ImGuiInputTextState::ImGuiInputTextState()
02021a80 00000050 W ImGuiInputTextState::ImGuiInputTextState()
02021ad0 00000058 W ImGuiPopupData::ImGuiPopupData()
02021ad0 00000058 W ImGuiPopupData::ImGuiPopupData()
02021b28 000000a0 W ImGuiNextWindowData::ImGuiNextWindowData()
02021b28 000000a0 W ImGuiNextWindowData::ImGuiNextWindowData()
02021bc8 00000060 W ImGuiLastItemData::ImGuiLastItemData()
02021bc8 00000060 W ImGuiLastItemData::ImGuiLastItemData()
02021c28 00000040 W ImGuiTypingSelectState::ImGuiTypingSelectState()
02021c28 00000040 W ImGuiTypingSelectState::ImGuiTypingSelectState()
02021c68 00000050 W ImGuiDockContext::ImGuiDockContext()
02021c68 00000050 W ImGuiDockContext::ImGuiDockContext()
02021cb8 00000074 W ImGuiViewportP::CalcWorkRectSize(ImVec2 const&, ImVec2 const&) const
02021d2c 0000006c W ImGuiViewportP::UpdateWorkRect()
02021d98 00000058 W ImGuiWindowSettings::ImGuiWindowSettings()
02021d98 00000058 W ImGuiWindowSettings::ImGuiWindowSettings()
02021df0 00000034 W ImGuiIDStackTool::ImGuiIDStackTool()
02021df0 00000034 W ImGuiIDStackTool::ImGuiIDStackTool()
02021e24 00000054 W ImGuiWindow::TitleBarHeight() const
02021e78 0000008c W ImGuiWindow::TitleBarRect() const
02021f04 0000005c W ImGuiWindow::MenuBarHeight() const
02021f60 00000118 t CalcWindowMinSize(ImGuiWindow*)
02022078 00000224 t CalcWindowSizeAfterConstraint(ImGuiWindow*, ImVec2 const&)
0202229c 00000180 t CalcResizePosSizeFromAnyCorner(ImGuiWindow*, ImVec2 const&, ImVec2 const&, ImVec2*, ImVec2*)
0202241c 00000088 W ImGuiWindow::MenuBarRect() const
020224a4 0000003c W ImGui::WindowRectAbsToRel(ImGuiWindow*, ImRect const&)
020224e0 000000d4 t ImGui::NavApplyItemToResult(ImGuiNavItemData*)
020225b4 0000003c W ImGui::WindowRectRelToAbs(ImGuiWindow*, ImRect const&)
020225f0 00000078 W ImGui::IsNamedKeyOrModKey(ImGuiKey)
02022668 00000074 W ImGui::ConvertSingleModFlagToKey(ImGuiContext*, ImGuiKey)
020226dc 0000003c W ImGui::MouseButtonToKey(int)
02022718 0000007c W ImGui::GetKeyOwnerData(ImGuiContext*, ImGuiKey)
02022794 00000294 T ImGuiStyle::ImGuiStyle()
02022794 00000294 T ImGuiStyle::ImGuiStyle()
02022a28 000005ac T ImGuiStyle::ScaleAllSizes(float)
02022fd4 00000208 T ImGuiIO::ImGuiIO()
02022fd4 00000208 T ImGuiIO::ImGuiIO()
020231dc 00000058 T ImStrncpy(char*, char const*, unsigned int)
02023234 0000002c T ImStrchrRange(char const*, char const*, char)
02023260 00000044 T ImStreolRange(char const*, char const*)
020232a4 00000020 T ImStrbolW(unsigned short const*, unsigned short const*)
020232c4 000000c0 T ImStrTrimBlanks(char*)
02023384 00000024 T ImStrSkipBlank(char const*)
020233a8 000000c0 T ImFormatString(char*, unsigned int, char const*, ...)
02023468 00000048 t ImGui::DockNodeGetHostWindowTitle(ImGuiDockNode*, char*, int)
020234b0 0000005c T ImFormatStringV(char*, unsigned int, char const*, __va_list_tag*)
0202350c 000001c0 T ImFormatStringToTempBufferV(char const**, char const**, char const*, __va_list_tag*)
020236cc 0000007c T ImFormatStringToTempBuffer(char const**, char const**, char const*, ...)
02023748 00000048 T ImHashData(void const*, unsigned int, unsigned int)
02023790 000000fc T ImHashStr(char const*, unsigned int, unsigned int)
0202388c 00000020 T ImFileOpen(char const*, char const*)
020238ac 00000028 T ImFileClose(__sFILE*)
020238d4 000000d8 T ImFileGetSize(__sFILE*)
020239ac 00000034 T ImFileRead(void*, unsigned long long, unsigned long long, __sFILE*)
020239e0 00000034 T ImFileWrite(void const*, unsigned long long, unsigned long long, __sFILE*)
02023a14 000001b4 T ImTextCharFromUtf8(unsigned int*, char const*, char const*)
02023bc8 000000d0 T ImTextStrFromUtf8(unsigned short*, int, char const*, char const*, char const**)
02023c98 0000007c T ImTextCountCharsFromUtf8(char const*, char const*)
02023d14 00000034 T ImTextCountUtf8BytesFromChar(char const*, char const*)
02023d48 000000c0 T ImTextStrToUtf8(char*, int, unsigned short const*, unsigned short const*)
02023e08 00000058 T ImTextCountUtf8BytesFromStr(unsigned short const*, unsigned short const*)
02023e60 000000a0 T ImGui::ColorConvertU32ToFloat4(unsigned int)
02023f00 00000194 T ImGui::ColorConvertFloat4ToU32(ImVec4 const&)
02024094 00000070 T ImGuiStorage::GetInt(unsigned int, int) const
02024104 00000070 T ImGuiStorage::GetVoidPtr(unsigned int) const
02024174 00000044 T ImGui::GetStyle()
020241b8 00000070 T ImGui::GetColorU32(int, float)
02024228 000003b0 t ImGui::RenderWindowOuterBorders(ImGuiWindow*)
020245d8 00000020 T ImGui::GetStyleColorVec4(int)
020245f8 000000a8 T ImGui::GetColorU32(unsigned int)
020246a0 00000048 T ImGui::GetStyleVarInfo(int)
020246e8 00000044 T ImGui::FindRenderedTextEnd(char const*, char const*)
0202472c 00000170 T ImGui::RenderFrame(ImVec2, ImVec2, unsigned int, bool, float)
0202489c 00000144 T ImGui::RenderFrameBorder(ImVec2, ImVec2, float)
020249e0 00000224 T ImGui::RenderNavHighlight(ImRect const&, unsigned int, int)
02024c04 0000000c T ImGui::GetCurrentContext()
02024c10 0000000c T ImGui::SetCurrentContext(ImGuiContext*)
02024c1c 00000088 T ImGui::CallContextHooks(ImGuiContext*, ImGuiContextHookType)
02024ca4 000000a4 W ImGuiWindowTempData::ImGuiWindowTempData()
02024ca4 000000a4 W ImGuiWindowTempData::ImGuiWindowTempData()
02024d48 0000003c T ImGui::SetHoveredID(unsigned int)
02024d84 00000034 T ImGui::KeepAliveID(unsigned int)
02024db8 00000098 T ImGui::MarkItemEdited(unsigned int)
02024e50 0000008c T ImGui::IsClippedEx(ImRect const&, unsigned int)
02024edc 00000048 T ImGui::SetLastItemData(unsigned int, int, int, ImRect const&)
02024f24 0000007c T ImGui::CalcWrapWidthForPos(ImVec2 const&, float)
02024fa0 000000a0 T ImGui::DebugAllocHook(ImGuiDebugAllocInfo*, int, void*, unsigned int)
02025040 00000074 T ImGui::MemAlloc(unsigned int)
020250b4 0000004c T ImStrdup(char const*)
02025100 00000070 t ImGui::DockNodeAddTabBar(ImGuiDockNode*)
02025170 00000178 t GetViewportBgFgDrawList(ImGuiViewportP*, unsigned int, char const*)
020252e8 0000006c T ImGui::MemFree(void*)
02025354 000000ac T ImStrdupcpy(char*, unsigned int*, char const*)
02025400 00000180 T ImFileLoadToMemory(char const*, char const*, unsigned int*, int)
02025580 0000003c W ImDrawListSplitter::~ImDrawListSplitter()
02025580 0000003c W ImDrawListSplitter::~ImDrawListSplitter()
020255bc 00000058 W ImGuiInputTextState::~ImGuiInputTextState()
020255bc 00000058 W ImGuiInputTextState::~ImGuiInputTextState()
02025614 00000094 W ImDrawList::~ImDrawList()
02025614 00000094 W ImDrawList::~ImDrawList()
020256a8 00000080 W ImDrawData::ImDrawData()
020256a8 00000080 W ImDrawData::ImDrawData()
02025728 00000110 W ImGuiViewportP::ImGuiViewportP()
02025728 00000110 W ImGuiViewportP::ImGuiViewportP()
02025838 00000048 W ImGuiPlatformIO::~ImGuiPlatformIO()
02025838 00000048 W ImGuiPlatformIO::~ImGuiPlatformIO()
02025880 00000048 W ImGuiKeyRoutingTable::~ImGuiKeyRoutingTable()
02025880 00000048 W ImGuiKeyRoutingTable::~ImGuiKeyRoutingTable()
020258c8 00000058 W ImGuiDockContext::~ImGuiDockContext()
020258c8 00000058 W ImGuiDockContext::~ImGuiDockContext()
02025920 00000058 W ImGuiWindowTempData::~ImGuiWindowTempData()
02025920 00000058 W ImGuiWindowTempData::~ImGuiWindowTempData()
02025978 00000060 W ImGuiTable::~ImGuiTable()
02025978 00000060 W ImGuiTable::~ImGuiTable()
020259d8 00000048 T ImGui::GetClipboardText()
02025a20 00000040 T ImGui::SetClipboardText(char const*)
02025a60 00000044 T ImGui::GetIO()
02025aa4 0000002c T ImGui::GetBackgroundDrawList(ImGuiViewport*)
02025ad0 0000002c T ImGui::GetForegroundDrawList(ImGuiViewport*)
02025afc 0000042c T ImGui::RenderMouseCursor(ImVec2, float, int, unsigned int, unsigned int, unsigned int)
02025f28 00000030 T ImGui::GetForegroundDrawList()
02025f58 000000e4 T ImGui::CalcTextSize(char const*, char const*, bool, float)
0202603c 00000280 T ImGui::RenderTextClippedEx(ImDrawList*, ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
020262bc 00000034 T ImGui::IsItemActive()
020262f0 00000064 T ImGui::IsItemDeactivated()
02026354 00000074 T ImGui::IsItemDeactivatedAfterEdit()
020263c8 00000068 T ImGui::IsItemFocused()
02026430 0000003c T ImGui::IsAnyItemHovered()
0202646c 00000030 T ImGui::FindWindowByID(unsigned int)
0202649c 0000002c T ImGui::FindWindowByName(char const*)
020264c8 000000e0 T ImGui::UpdateWindowParentAndRootLinks(ImGuiWindow*, int, ImGuiWindow*)
020265a8 00000048 W ImGuiWindowStackData::ImGuiWindowStackData()
020265a8 00000048 W ImGuiWindowStackData::ImGuiWindowStackData()
020265f0 0000012c T ImGui::SetCurrentFont(ImFont*)
0202671c 00000088 T ImGui::IsWindowChildOf(ImGuiWindow*, ImGuiWindow*, bool, bool)
020267a4 00000038 T ImGui::IsWindowWithinBeginStackOf(ImGuiWindow*, ImGuiWindow*)
020267dc 000000f0 T ImGui::IsWindowContentHoverable(ImGuiWindow*, int)
020268cc 000000f4 T ImGui::FindBlockingModal(ImGuiWindow*)
020269c0 00000040 T ImGui::IsWindowNavFocusable(ImGuiWindow*)
02026a00 0000002c T ImGui::SetWindowCollapsed(ImGuiWindow*, bool, int)
02026a2c 000000c0 T ImGui::SetWindowHitTestHole(ImGuiWindow*, ImVec2 const&, ImVec2 const&)
02026aec 00000014 T ImGui::SetWindowHiddendAndSkipItemsForCurrentFrame(ImGuiWindow*)
02026b00 00000090 T ImGui::SetNextWindowPos(ImVec2 const&, int, ImVec2 const&)
02026b90 00000078 T ImGui::SetNextWindowSize(ImVec2 const&, int)
02026c08 00000068 T ImGui::SetNextWindowSizeConstraints(ImVec2 const&, ImVec2 const&, void (*)(ImGuiSizeCallbackData*), void*)
02026c70 00000044 T ImGui::SetNextWindowContentSize(ImVec2 const&)
02026cb4 00000028 T ImGui::SetNextWindowScroll(ImVec2 const&)
02026cdc 0000006c T ImGui::SetNextWindowCollapsed(bool, int)
02026d48 0000001c T ImGui::SetNextWindowBgAlpha(float)
02026d64 0000001c T ImGui::SetNextWindowViewport(unsigned int)
02026d80 0000008c T ImGui::SetNextWindowClass(ImGuiWindowClass const*)
02026e0c 0000009c T ImGui::GetKeyData(ImGuiContext*, ImGuiKey)
02026ea8 00000078 t UpdateAliasKey(ImGuiKey, bool, float)
02026f20 000000d4 T ImGui::GetKeyName(ImGuiKey)
02026ff4 000000c8 T ImGui::CalcTypematicRepeatAmount(float, float, float, float)
020270bc 00000088 T ImGui::GetTypematicRepeatRate(int, float*, float*)
02027144 0000007c T ImGui::GetKeyPressedAmount(ImGuiKey, float, float)
020271c0 000000b0 T ImGui::GetKeyMagnitude2d(ImGuiKey, ImGuiKey, ImGuiKey, ImGuiKey)
02027270 000000c4 T ImGui::IsMouseHoveringRect(ImVec2 const&, ImVec2 const&, bool)
02027334 0000007c T ImGui::IsMouseDragPastThreshold(int, float)
020273b0 00000074 T ImGui::IsMouseDragging(int, float)
02027424 0000003c T ImGui::TeleportMousePos(ImVec2 const&)
02027460 000000a0 T ImGui::IsMousePosValid(ImVec2 const*)
02027500 000001d4 t ImGui::NavCalcPreferredRefPos()
020276d4 0000054c t ImGui::UpdateMouseInputs()
02027c20 00000038 T ImGui::IsAnyMouseDown()
02027c58 00000010 T ImGui::SetMouseCursor(int)
02027c68 000000dc T ImGui::TestKeyOwner(ImGuiKey, unsigned int)
02027d44 00000064 T ImGui::IsKeyDown(ImGuiKey, unsigned int)
02027da8 00000024 T ImGui::IsKeyDown(ImGuiKey)
02027dcc 00000084 t GetMergedModsFromKeys()
02027e50 00000128 T ImGui::IsKeyPressed(ImGuiKey, unsigned int, int)
02027f78 00000038 T ImGui::IsKeyPressed(ImGuiKey, bool)
02027fb0 00000084 T ImGui::IsKeyReleased(ImGuiKey, unsigned int)
02028034 00000024 T ImGui::IsKeyReleased(ImGuiKey)
02028058 0000007c T ImGui::IsMouseDown(int)
020280d4 0000008c T ImGui::IsMouseDown(int, unsigned int)
02028160 00000158 T ImGui::IsMouseClicked(int, unsigned int, int)
020282b8 00000038 T ImGui::IsMouseClicked(int, bool)
020282f0 0000007c T ImGui::IsMouseReleased(int)
0202836c 0000008c T ImGui::IsMouseReleased(int, unsigned int)
020283f8 00000084 T ImGui::IsMouseDoubleClicked(int)
0202847c 000000ec T ImGui::SetKeyOwner(ImGuiKey, unsigned int, int)
02028568 000000e0 T ImGui::SetKeyOwnersForKeyChord(int, unsigned int, int)
02028648 000000a0 T ImGui::IsKeyChordPressed(int, unsigned int, int)
020286e8 0000018c T ImGui::DebugCheckVersionAndDataLayout(char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
02028874 00000078 T ImGui::ErrorCheckUsingSetCursorPosToExtendParentBoundaries()
020288ec 00000050 T ImGuiStackSizes::SetToContextState(ImGuiContext*)
0202893c 00000208 T ImGuiStackSizes::CompareWithContextState(ImGuiContext*)
02028b44 000000bc T ImGui::SameLine(float, float)
02028c00 000001dc T ImGui::ItemSize(ImVec2 const&, float)
02028ddc 00000010 T ImGui::GetTextLineHeight()
02028dec 0000001c T ImGui::GetFrameHeight()
02028e08 000000dc t ClampWindowPos(ImGuiWindow*, ImRect const&)
02028ee4 0000003c T ImGui::GetContentRegionMaxAbs()
02028f20 000000d4 T ImGui::CalcItemWidth()
02028ff4 00000170 T ImGui::CalcItemSize(ImVec2, float, float)
02029164 00000064 T ImGui::GetContentRegionAvail()
020291c8 00000014 T ImGui::GetScrollMaxY()
020291dc 00000018 T ImGui::SetScrollX(ImGuiWindow*, float)
020291f4 00000018 T ImGui::SetScrollY(ImGuiWindow*, float)
0202920c 000000bc T ImGui::SetScrollFromPosX(ImGuiWindow*, float, float)
020292c8 000000bc T ImGui::SetScrollFromPosY(ImGuiWindow*, float, float)
02029384 000005dc T ImGui::ScrollToRectEx(ImGuiWindow*, ImRect const&, int)
02029960 00000050 T ImGui::GetTopMostPopupModal()
020299b0 00000094 T ImGui::GetTopMostAndVisiblePopupModal()
02029a44 000004e8 T ImGui::FindBestWindowPosForPopupEx(ImVec2 const&, ImVec2 const&, int*, ImRect const&, ImRect const&, ImGuiPopupPositionPolicy)
02029f2c 00000054 T ImGui::NavClearPreferredPosForAxis(ImGuiAxis)
02029f80 000000d4 T ImGui::SetNavID(unsigned int, ImGuiNavLayer, unsigned int, ImRect const&)
0202a054 00000040 T ImGui::NavUpdateCurrentWindowIsScrollPushableX()
0202a094 00000048 T ImGui::NavMoveRequestButNoResultYet()
0202a0dc 00000148 T ImGui::NavMoveRequestSubmit(int, int, int, int)
0202a224 00000198 t ImGui::NavUpdateCreateTabbingRequest()
0202a3bc 00000034 T ImGui::NavMoveRequestResolveWithLastItem(ImGuiNavItemData*)
0202a3f0 00000224 t ImGui::NavProcessItemForTabbingRequest(unsigned int, int, int)
0202a614 00000034 T ImGui::NavMoveRequestCancel()
0202a648 00000064 T ImGui::SetActiveIdUsingAllKeyboardKeys()
0202a6ac 000000a8 T ImGui::NavMoveRequestForward(int, int, int, int)
0202a754 00000254 t ImGui::NavUpdateCreateWrappingRequest()
0202a9a8 0000007c T ImGui::NavMoveRequestTryWrapping(ImGuiWindow*, int)
0202aa24 00000020 T ImGui::NavRestoreHighlightAfterMove()
0202aa44 00000148 T ImGui::GetNavTweakPressedAmount(ImGuiAxis)
0202ab8c 000001a4 T ImGui::BeginDragDropTargetCustom(ImRect const&, unsigned int)
0202ad30 00000034 T ImGui::IsDragDropPayloadBeingAccepted()
0202ad64 0000011c T ImGui::RenderDragDropTargetRect(ImRect const&)
0202ae80 00000250 T ImGui::AcceptDragDropPayload(char const*, int)
0202b0d0 00000038 T ImGui::GetDragDropPayload()
0202b108 00000014 T ImGui::LogSetNextTextDecoration(char const*, char const*)
0202b11c 0000002c T ImGui::MarkIniSettingsDirty()
0202b148 00000038 T ImGui::MarkIniSettingsDirty(ImGuiWindow*)
0202b180 00000194 T ImGui::SetWindowPos(ImGuiWindow*, ImVec2 const&, int)
0202b314 000001f4 T ImGui::SetWindowSize(ImGuiWindow*, ImVec2 const&, int)
0202b508 00000084 t ImGui::DockNodeApplyPosSizeToWindows(ImGuiDockNode*)
0202b58c 00000070 T ImGui::FindSettingsHandler(char const*)
0202b5fc 00000040 T ImGui::LocalizeRegisterEntries(ImGuiLocEntry const*, int)
0202b63c 00000048 T ImGui::FindViewportByID(unsigned int)
0202b684 0000007c T ImGui::SetCurrentViewport(ImGuiWindow*, ImGuiViewportP*)
0202b700 00000054 T ImGui::SetWindowViewport(ImGuiWindow*, ImGuiViewportP*)
0202b754 00000184 T ImGui::TranslateWindowsInViewport(ImGuiViewportP*, ImVec2 const&, ImVec2 const&)
0202b8d8 0000009c T ImGui::ScaleWindowsInViewport(ImGuiViewportP*, float)
0202b974 000000e8 T ImGui::FindHoveredViewportFromPlatformWindowStack(ImVec2 const&)
0202ba5c 00000058 W ImGuiDockNodeSettings::ImGuiDockNodeSettings()
0202ba5c 00000058 W ImGuiDockNodeSettings::ImGuiDockNodeSettings()
0202bab4 00000024 T ImGui::DockContextFindNodeByID(ImGuiContext*, unsigned int)
0202bad8 00000054 T ImGui::DockContextGenNodeID(ImGuiContext*)
0202bb2c 00000140 T ImGuiDockNode::ImGuiDockNode(unsigned int)
0202bb2c 00000140 T ImGuiDockNode::ImGuiDockNode(unsigned int)
0202bc6c 000000d0 W ImGuiDockPreviewData::ImGuiDockPreviewData()
0202bc6c 000000d0 W ImGuiDockPreviewData::ImGuiDockPreviewData()
0202bd3c 0000005c T ImGui::GetWindowAlwaysWantOwnTabBar(ImGuiWindow*)
0202bd98 00000160 T ImGui::DebugLocateItemResolveWithLastItem()
0202bef8 00000040 W ImVector<char>::front() const
0202bf38 00000050 W ImVector<char>::clear()
0202bf88 00000050 t WindowSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
0202bfd8 00000078 W ImVector<char>::reserve(int)
0202c050 00000050 W ImVector<ImGuiStorage::ImGuiStoragePair>::clear()
0202c0a0 00000050 W ImVector<unsigned int>::operator[](int)
0202c0f0 00000050 W ImVector<unsigned int>::clear()
0202c140 00000050 W ImVector<int>::clear()
0202c190 00000050 W ImVector<int>::operator[](int)
0202c1e0 00000050 W ImVector<unsigned short>::operator[](int)
0202c230 0000004c W ImVector<char>::operator[](int)
0202c27c 00000050 W ImVector<unsigned short>::clear()
0202c2cc 00000040 W ImGuiInputTextState::ClearFreeMemory()
0202c30c 00000050 W ImVector<ImGuiKeyRoutingData>::clear()
0202c35c 00000058 W ImGuiKeyRoutingTable::Clear()
0202c3b4 0000007c W ImGuiKeyRoutingTable::ImGuiKeyRoutingTable()
0202c3b4 0000007c W ImGuiKeyRoutingTable::ImGuiKeyRoutingTable()
0202c430 0000003c W void IM_DELETE<ImDrawList>(ImDrawList*)
0202c46c 00000070 W ImGuiViewportP::~ImGuiViewportP()
0202c46c 00000070 W ImGuiViewportP::~ImGuiViewportP()
0202c4dc 00000050 W ImVector<ImFont*>::operator[](int)
0202c52c 00000044 W ImGui::GetDefaultFont()
0202c570 00000050 W ImVector<ImGuiTableInstanceData>::operator[](int)
0202c5c0 00000064 W ImVector<ImGuiTabItem>::index_from_ptr(ImGuiTabItem const*) const
0202c624 00000068 t ImGui::DockNodeGetTabOrder(ImGuiWindow*)
0202c68c 00000050 W ImVector<ImGuiInputEvent>::operator[](int)
0202c6dc 000000a8 t FindLatestInputEvent(ImGuiContext*, ImGuiInputEventType, int)
0202c784 00000050 W ImVector<ImGuiStorage::ImGuiStoragePair>::operator[](int)
0202c7d4 00000194 T ImGui::DockContextEndFrame(ImGuiContext*)
0202c968 00000074 W ImVector<char>::resize(int)
0202c9dc 000000dc T ImGuiTextBuffer::append(char const*, char const*)
0202cab8 000000e0 T ImGuiTextBuffer::appendfv(char const*, __va_list_tag*)
0202cb98 00000080 T ImGuiTextBuffer::appendf(char const*, ...)
0202cc18 00000088 t SetClipboardTextFn_DefaultImpl(void*, char const*)
0202cca0 000000bc t LogTextV(ImGuiContext&, char const*, __va_list_tag*)
0202cd5c 000000a4 T ImGui::LogText(char const*, ...)
0202ce00 000001fc T ImGui::LogRenderedText(ImVec2 const*, char const*, char const*)
0202cffc 00000118 T ImGui::RenderText(ImVec2, char const*, char const*, bool)
0202d114 0000011c T ImGui::RenderTextWrapped(ImVec2, char const*, char const*, float)
0202d230 000000e4 T ImGui::RenderTextClipped(ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
0202d314 00000394 T ImGui::RenderTextEllipsis(ImDrawList*, ImVec2 const&, ImVec2 const&, float, float, char const*, char const*, ImVec2 const*)
0202d6a8 000000f8 T ImGui::LogFinish()
0202d7a0 00000324 T ImGui::LoadIniSettingsFromMemory(char const*, unsigned int)
0202dac4 00000068 T ImGui::LoadIniSettingsFromDisk(char const*)
0202db2c 0000004c W ImVector<ImGuiColorMod>::back()
0202db78 00000044 W ImVector<ImGuiColorMod>::pop_back()
0202dbbc 000000bc T ImGui::PopStyleColor(int)
0202dc78 0000004c W ImVector<ImGuiStyleMod>::back()
0202dcc4 00000044 W ImVector<ImGuiStyleMod>::pop_back()
0202dd08 000000f4 T ImGui::PopStyleVar(int)
0202ddfc 000000a8 W ImVector<char>::resize(int, char const&)
0202dea4 00000050 W ImVector<ImGuiViewportP*>::operator[](int)
0202def4 0000004c T ImGui::GetDrawData()
0202df40 00000034 T ImGui::GetMainViewport()
0202df74 000001b4 t ApplyWindowSettings(ImGuiWindow*, ImGuiWindowSettings*)
0202e128 0000018c t InitOrLoadWindowSettings(ImGuiWindow*, ImGuiWindowSettings*)
0202e2b4 0000080c t ImGui::ErrorCheckNewFrameSanityChecks()
0202eac0 0000003c W void IM_DELETE<ImFontAtlas>(ImFontAtlas*)
0202eafc 00000050 W ImVector<ImVec2>::clear()
0202eb4c 00000050 W ImVector<ImGuiWindow*>::clear()
0202eb9c 00000050 W ImVector<ImGuiWindowStackData>::clear()
0202ebec 00000050 W ImVector<ImGuiColorMod>::clear()
0202ec3c 00000050 W ImVector<ImGuiStyleMod>::clear()
0202ec8c 00000050 W ImVector<ImFont*>::clear()
0202ecdc 00000050 W ImVector<ImGuiPopupData>::clear()
0202ed2c 00000050 W ImVector<ImGuiNavTreeNodeData>::clear()
0202ed7c 00000048 W ImGuiTabBar::~ImGuiTabBar()
0202ed7c 00000048 W ImGuiTabBar::~ImGuiTabBar()
0202edc4 00000050 W ImVector<ImGuiPtrOrIndex>::clear()
0202ee14 00000050 W ImVector<ImGuiShrinkWidthItem>::clear()
0202ee64 00000050 W ImVector<ImDrawChannel>::clear()
0202eeb4 00000050 W ImVector<ImGuiSettingsHandler>::clear()
0202ef04 00000028 W void IM_DELETE<char>(char*)
0202ef2c 00000040 W ImGuiOldColumns::~ImGuiOldColumns()
0202ef2c 00000040 W ImGuiOldColumns::~ImGuiOldColumns()
0202ef6c 00000050 W ImVector<unsigned int>::back()
0202efbc 00000068 T ImGuiWindow::GetIDFromRectangle(ImRect const&)
0202f024 000003b4 T ImGui::IsItemHovered(int)
0202f3d8 00000050 W ImVector<ImGuiGroupData>::clear()
0202f428 00000040 T ImGui::GcCompactTransientMiscBuffers()
0202f468 00000050 W ImVector<float>::clear()
0202f4b8 0000006c T ImGui::GcCompactTransientWindowBuffers(ImGuiWindow*)
0202f524 0000007c W ImVector<unsigned short>::reserve(int)
0202f5a0 00000074 W ImVector<unsigned short>::resize(int)
0202f614 00000100 T ImGuiIO::ClearInputKeys()
0202f714 0000007c W ImVector<ImDrawVert>::reserve(int)
0202f790 0000005c T ImGui::GcAwakeTransientWindowBuffers(ImGuiWindow*)
0202f7ec 00000050 W ImVector<ImGuiContextHook>::operator[](int)
0202f83c 000000b4 W ImVector<ImGuiContextHook>::erase(ImGuiContextHook const*)
0202f8f0 00000050 W ImVector<float>::operator[](int)
0202f940 00000050 W ImVector<ImGuiWindow*>::operator[](int)
0202f990 000002f4 t FindHoveredWindow()
0202fc84 00000354 T ImGui::UpdateHoveredWindowAndCaptureFlags()
0202ffd8 000000c4 t FindWindowNavFocusable(int, int, int)
0203009c 000000a4 t ImGui::FindWindowFocusIndex(ImGuiWindow*)
02030140 00000118 t NavUpdateWindowingHighlightWindow(int)
02030258 0000008c t FindFrontMostVisibleChildWindow(ImGuiWindow*)
020302e4 000000ec T ImGui::IsWindowAbove(ImGuiWindow*, ImGuiWindow*)
020303d0 00000050 W ImVector<ImVec4>::back()
02030420 0000009c T ImGui::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
020304bc 00000090 T ImGui::PopClipRect()
0203054c 0000004c W ImVector<ImDrawCmd>::back()
02030598 00000044 W ImVector<ImDrawCmd>::pop_back()
020305dc 0000007c W ImVector<ImGuiWindow*>::reserve(int)
02030658 00000074 W ImVector<ImGuiWindow*>::resize(int)
020306cc 0000009c W ImVector<ImGuiWindow*>::push_back(ImGuiWindow* const&)
02030768 000000bc t AddWindowToSortBuffer(ImVector<ImGuiWindow*>*, ImGuiWindow*)
02030824 000000a8 W ImVector<ImGuiWindow*>::erase(ImGuiWindow* const*)
020308cc 00000208 t UpdateWindowInFocusOrderList(ImGuiWindow*, bool, int)
02030ad4 0000005c W ImChunkStream<ImGuiWindowSettings>::offset_from_ptr(ImGuiWindowSettings const*)
02030b30 00000050 W ImVector<ImGuiPlatformMonitor>::operator[](int)
02030b80 000001d4 t ImGui::FindPlatformMonitorForRect(ImRect const&)
02030d54 0000005c t ImGui::UpdateViewportPlatformMonitor(ImGuiViewportP*)
02030db0 00000244 t ImGui::WindowSyncOwnedViewport(ImGuiWindow*, ImGuiWindow*)
02030ff4 00000284 t CalcWindowAutoFitSize(ImGuiWindow*, ImVec2 const&)
02031278 0000006c T ImGui::CalcWindowNextAutoFitSize(ImGuiWindow*)
020312e4 000000c4 t ImGui::FindPlatformMonitorForPos(ImVec2 const&)
020313a8 0000016c T ImGui::GetPopupAllowedExtentRect(ImGuiWindow*)
02031514 00000330 T ImGui::FindBestWindowPosForPopup(ImGuiWindow*)
02031844 0000004c T ImGui::GetViewportPlatformMonitor(ImGuiViewport*)
02031890 000000f8 t FixLargeWindowsWhenUndocking(ImVec2 const&, ImGuiViewport*)
02031988 00000050 W ImVector<ImGuiPopupData>::operator[](int)
020319d8 0000012c T ImGui::IsPopupOpen(unsigned int, int)
02031b04 00000140 t DockNodeIsDropAllowedOne(ImGuiWindow*, ImGuiWindow*)
02031c44 000000e0 t ImGui::DockNodeIsDropAllowed(ImGuiWindow*, ImGuiWindow*)
02031d24 0000004c W ImVector<ImGuiWindowStackData>::back()
02031d70 0000004c W ImVector<ImGuiPopupData>::back()
02031dbc 00000050 W ImVector<ImDrawCmd>::operator[](int)
02031e0c 00000044 W ImVector<ImGuiPopupData>::pop_back()
02031e50 00000044 W ImVector<ImGuiWindowStackData>::pop_back()
02031e94 00000050 W ImVector<ImGuiWindow*>::back()
02031ee4 000001a4 T ImGui::BringWindowToFocusFront(ImGuiWindow*)
02032088 000000f8 T ImGui::BringWindowToDisplayFront(ImGuiWindow*)
02032180 000002fc t ImGui::UpdateTryMergeWindowIntoHostViewport(ImGuiWindow*, ImGuiViewportP*)
0203247c 00000048 t ImGui::UpdateTryMergeWindowIntoHostViewports(ImGuiWindow*)
020324c4 00000058 W ImVector<ImGuiWindow*>::index_from_ptr(ImGuiWindow* const*) const
0203251c 0000005c T ImGui::FindWindowDisplayIndex(ImGuiWindow*)
02032578 000000d4 T ImGui::FindBottomMostVisibleWindowWithinBeginStack(ImGuiWindow*)
0203264c 0000010c T ImGui::BringWindowToDisplayBehind(ImGuiWindow*, ImGuiWindow*)
02032758 00000044 W ImVector<ImFont*>::pop_back()
0203279c 00000050 W ImVector<ImFont*>::back()
020327ec 00000070 T ImGui::PopFont()
0203285c 00000050 W ImVector<int>::back()
020328ac 00000044 W ImVector<int>::pop_back()
020328f0 0000007c T ImGui::PopItemFlag()
0203296c 000000ac T ImGui::EndDisabled()
02032a18 00000050 W ImVector<float>::back()
02032a68 00000044 W ImVector<float>::pop_back()
02032aac 00000060 T ImGui::PopItemWidth()
02032b0c 00000044 W ImVector<unsigned int>::pop_back()
02032b50 00000090 T ImGui::PopFocusScope()
02032be0 0000005c T ImGui::PopID()
02032c3c 00000050 W ImVector<ImGuiKeyRoutingData>::operator[](int)
02032c8c 00000050 W ImBitArray<666, 0>::TestBit(int) const
02032cdc 00000058 W ImBitArray<666, 0>::SetBit(int)
02032d34 0000009c W ImVector<unsigned short>::push_back(unsigned short const&)
02032dd0 000000dc W ImVector<ImGuiInputEvent>::erase(ImGuiInputEvent const*, ImGuiInputEvent const*)
02032eac 0000004c W ImVector<ImGuiGroupData>::back()
02032ef8 00000044 W ImVector<ImGuiGroupData>::pop_back()
02032f3c 00000050 W ImVector<unsigned char>::clear()
02032f8c 00000080 T ImGui::ClearDragDrop()
0203300c 000000a8 T ImGui::EndDragDropTarget()
020330b4 00000098 W ImVector<char>::push_back(char const&)
0203314c 000000e4 T ImGui::SaveIniSettingsToMemory(unsigned int*)
02033230 000000a8 T ImGui::SaveIniSettingsToDisk(char const*)
020332d8 000000f0 t ImGui::UpdateSettings()
020333c8 00000060 W ImChunkStream<ImGuiWindowSettings>::alloc_chunk(unsigned int)
02033428 000000ac T ImGui::CreateNewWindowSettings(char const*)
020334d4 000000ac W ImChunkStream<ImGuiWindowSettings>::next_chunk(ImGuiWindowSettings*)
02033580 0000008c t WindowSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
0203360c 0000007c T ImGui::FindWindowSettingsByID(unsigned int)
02033688 00000090 t WindowSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
02033718 000000bc t ImGui::DockSettingsRemoveNodeReferences(unsigned int*, int)
020337d4 0000004c W ImChunkStream<ImGuiWindowSettings>::ptr_from_offset(int)
02033820 00000044 T ImGui::FindWindowSettingsByWindow(ImGuiWindow*)
02033864 00000434 t WindowSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
02033c98 000000a8 W ImVector<ImGuiViewportP*>::erase(ImGuiViewportP* const*)
02033d40 0000003c W void IM_DELETE<ImGuiViewportP>(ImGuiViewportP*)
02033d7c 00000050 W ImVector<ImGuiDockNodeSettings>::operator[](int)
02033dcc 0000008c t ImGui::DockSettingsFindNodeSettings(ImGuiContext*, unsigned int)
02033e58 00000050 W ImVector<ImGuiTabItem>::operator[](int)
02033ea8 00000140 T ImGui::DockNodeWindowMenuHandler_Default(ImGuiContext*, ImGuiDockNode*, ImGuiTabBar*)
02033fe8 00000070 W ImVector<ImGuiWindow*>::find_erase(ImGuiWindow* const&)
02034058 0000003c W void IM_DELETE<ImGuiTabBar>(ImGuiTabBar*)
02034094 00000040 t ImGui::DockNodeRemoveTabBar(ImGuiDockNode*)
020340d4 000000c4 t ImGui::DockNodeHideHostWindow(ImGuiDockNode*)
02034198 00000050 T ImGuiDockNode::~ImGuiDockNode()
02034198 00000050 T ImGuiDockNode::~ImGuiDockNode()
020341e8 0000003c W void IM_DELETE<ImGuiDockNode>(ImGuiDockNode*)
02034224 00000068 T ImGui::DockContextShutdown(ImGuiContext*)
0203428c 0000004c W ImVector<ImGuiTabItem>::back()
020342d8 00000050 W ImVector<ImGuiDockNode*>::operator[](int)
02034328 00000050 W ImVector<ImGuiDockRequest>::clear()
02034378 00000050 W ImVector<ImGuiDockNodeSettings>::clear()
020343c8 0000007c W ImVector<ImGuiDockNodeSettings>::reserve(int)
02034444 00000074 W ImVector<ImGuiDockNodeSettings>::resize(int)
020344b8 000000a4 W ImVector<ImGuiDockNodeSettings>::push_back(ImGuiDockNodeSettings const&)
0203455c 000001f4 t DockSettingsHandler_DockNodeToSettings(ImGuiDockContext*, ImGuiDockNode*, int)
02034750 000004a4 t ImGui::DockSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
02034bf4 000004c8 t ImGui::DockSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
020350bc 00000050 W ImSpan<ImGuiTableColumn>::operator[](int)
0203510c 000000ac W ImChunkStream<ImGuiTableSettings>::next_chunk(ImGuiTableSettings*)
020351b8 00000050 W ImVector<ImGuiStackLevelInfo>::operator[](int)
02035208 0000007c W ImVector<ImVec2>::reserve(int)
02035284 000000a8 W ImVector<ImVec2>::push_back(ImVec2 const&)
0203532c 0000007c W ImVector<unsigned int>::reserve(int)
020353a8 0000009c W ImVector<unsigned int>::push_back(unsigned int const&)
02035444 00000044 T ImGui::PushFocusScope(unsigned int)
02035488 00000074 W ImVector<unsigned int>::resize(int)
020354fc 0000007c W ImVector<ImGuiInputEvent>::reserve(int)
02035578 000000d0 W ImVector<ImGuiInputEvent>::push_back(ImGuiInputEvent const&)
02035648 000000b8 T ImGuiIO::AddInputCharacter(unsigned int)
02035700 000000ec T ImGuiIO::AddInputCharacterUTF16(unsigned short)
020357ec 000002a8 T ImGuiIO::AddKeyAnalogEvent(ImGuiKey, bool, float)
02035a94 00000048 T ImGuiIO::AddKeyEvent(ImGuiKey, bool)
02035adc 00000168 T ImGuiIO::AddMousePosEvent(float, float)
02035c44 00000154 T ImGuiIO::AddMouseButtonEvent(int, bool)
02035d98 00000074 W ImVector<ImGuiInputEvent>::resize(int)
02035e0c 0000007c W ImVector<ImGuiStorage::ImGuiStoragePair>::reserve(int)
02035e88 00000144 W ImVector<ImGuiStorage::ImGuiStoragePair>::insert(ImGuiStorage::ImGuiStoragePair const*, ImGuiStorage::ImGuiStoragePair const&)
02035fcc 00000084 T ImGuiStorage::GetIntRef(unsigned int, int)
02036050 00000088 T ImGuiStorage::SetVoidPtr(unsigned int, void*)
020360d8 0000007c W ImVector<int>::reserve(int)
02036154 0000009c W ImVector<int>::push_back(int const&)
020361f0 0000011c T ImGuiTextIndex::append(char const*, int, int)
0203630c 00000104 T ImGui::DebugLogV(char const*, __va_list_tag*)
02036410 00000084 T ImGui::DebugLog(char const*, ...)
02036494 000001f8 T ImGui::SetActiveID(unsigned int, ImGuiWindow*)
0203668c 00000028 T ImGui::ClearActiveID()
020366b4 00000304 T ImGui::ItemHoverable(ImRect const&, unsigned int, int)
020369b8 000000ec t LockWheelingWindow(ImGuiWindow*, float)
02036aa4 000005e0 t ImGui::UpdateMouseWheel()
02037084 00000300 t DebugPrintInputEvent(char const*, ImGuiInputEvent const*)
02037384 00000480 T ImGui::UpdateInputEvents(bool)
02037804 000000a0 T ImGui::SetNavWindow(ImGuiWindow*)
020378a4 000003a0 t ImGui::NavProcessItem()
02037c44 0000022c T ImGui::ItemAdd(ImRect const&, unsigned int, ImRect const*, int)
02037e70 00000348 T ImGui::EndGroup()
020381b8 00000120 T ImGui::SetFocusID(unsigned int, ImGuiWindow*)
020382d8 0000018c T ImGui::NavInitWindow(ImGuiWindow*, bool)
02038464 000000f0 t ImGui::NavRestoreLayer(ImGuiNavLayer)
02038554 00000494 t ImGui::NavUpdatePageUpPageDown()
020389e8 00000804 t ImGui::NavUpdateCreateMoveRequest()
020391ec 000000e0 T ImGui::NavInitRequestApplyResult()
020392cc 00000444 T ImGui::NavMoveRequestApplyResult()
02039710 0000017c T ImGui::DestroyPlatformWindow(ImGuiViewportP*)
0203988c 0000005c T ImGui::DestroyPlatformWindows()
020398e8 0000019c t ImGui::DestroyViewport(ImGuiViewportP*)
02039a84 000000c4 t ImGui::DockContextAddNode(ImGuiContext*, unsigned int)
02039b48 00000264 t ImGui::DockContextBuildNodesFromSettings(ImGuiContext*, ImGuiDockNodeSettings*, int)
02039dac 000000f8 t ImGui::DockSettingsRenameNodeReferences(unsigned int, unsigned int)
02039ea4 000002c4 t ImGui::DockNodeAddWindow(ImGuiDockNode*, ImGuiWindow*, bool)
0203a168 00000104 t ImGui::DockContextBuildAddWindowsToNodes(ImGuiContext*, unsigned int)
0203a26c 00000168 t ImGui::DockNodeMoveWindows(ImGuiDockNode*, ImGuiDockNode*)
0203a3d4 000002fc t ImGui::DockNodeTreeMerge(ImGuiContext*, ImGuiDockNode*, ImGuiDockNode*)
0203a6d0 000001d8 t ImGui::DockContextRemoveNode(ImGuiContext*, ImGuiDockNode*, bool)
0203a8a8 000002cc t ImGui::DockNodeRemoveWindow(ImGuiDockNode*, ImGuiWindow*, unsigned int)
0203ab74 00000318 t ImGui::DockNodeUpdateFlagsAndCollapse(ImGuiDockNode*)
0203ae8c 000001a8 t ImGui::DockNodeUpdateForRootNode(ImGuiDockNode*)
0203b034 00000120 T ImGui::SetWindowDock(ImGuiWindow*, unsigned int, int)
0203b154 0000039c t ImGui::DockNodeTreeSplit(ImGuiContext*, ImGuiDockNode*, ImGuiAxis, int, float, ImGuiDockNode*)
0203b4f0 000000d0 T ImGui::DockContextProcessUndockWindow(ImGuiContext*, ImGuiWindow*, bool)
0203b5c0 00000218 t ImGui::DockContextBindNodeToWindow(ImGuiContext*, ImGuiWindow*)
0203b7d8 000001bc T ImGui::DockBuilderRemoveNodeDockedWindows(unsigned int, bool)
0203b994 00000620 t ImGui::DockContextProcessDock(ImGuiContext*, ImGuiDockRequest*)
0203bfb4 00000274 T ImGui::DockContextProcessUndockNode(ImGuiContext*, ImGuiDockNode*)
0203c228 000000c0 T ImGui::PushItemFlag(int, bool)
0203c2e8 00000084 T ImGui::BeginDisabled(bool)
0203c36c 00000074 W ImVector<int>::resize(int)
0203c3e0 0000007c W ImVector<ImGuiColorMod>::reserve(int)
0203c45c 000000c0 W ImVector<ImGuiColorMod>::push_back(ImGuiColorMod const&)
0203c51c 000000b8 T ImGui::PushStyleColor(int, unsigned int)
0203c5d4 000008a4 t ImGui::DockNodePreviewDockRender(ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, ImGuiDockPreviewData const*)
0203ce78 000000ac T ImGui::PushStyleColor(int, ImVec4 const&)
0203cf24 0000007c W ImVector<ImGuiStyleMod>::reserve(int)
0203cfa0 000000b0 W ImVector<ImGuiStyleMod>::push_back(ImGuiStyleMod const&)
0203d050 000000b4 T ImGui::PushStyleVar(int, float)
0203d104 000000c4 T ImGui::PushStyleVar(int, ImVec2 const&)
0203d1c8 0000007c W ImVector<ImGuiViewportP*>::reserve(int)
0203d244 0000009c W ImVector<ImGuiViewportP*>::push_back(ImGuiViewportP* const&)
0203d2e0 0000033c t ImGui::AddUpdateViewport(ImGuiWindow*, unsigned int, ImVec2 const&, ImVec2 const&, int)
0203d61c 000005a0 t ImGui::WindowSelectViewport(ImGuiWindow*)
0203dbbc 0000007c W ImVector<ImGuiViewport*>::reserve(int)
0203dc38 0000009c W ImVector<ImGuiViewport*>::push_back(ImGuiViewport* const&)
0203dcd4 00000074 W ImVector<ImGuiViewport*>::resize(int)
0203dd48 00000154 t ImGui::UpdateViewportsEndFrame()
0203de9c 00000050 W ImVector<ImGuiViewportP*>::clear()
0203deec 00000060 W ImVector<ImGuiViewportP*>::clear_delete()
0203df4c 00000050 W ImVector<ImGuiTabBar>::operator[](int)
0203df9c 00000050 W ImVector<ImGuiTabBar>::clear()
0203dfec 0000008c W ImPool<ImGuiTabBar>::Clear()
0203e078 0000004c W ImPool<ImGuiTabBar>::~ImPool()
0203e078 0000004c W ImPool<ImGuiTabBar>::~ImPool()
0203e0c4 00000050 W ImVector<ImGuiListClipperData>::clear()
0203e114 00000070 W ImVector<ImGuiListClipperData>::clear_destruct()
0203e184 00000050 W ImVector<ImGuiTable>::operator[](int)
0203e1d4 000000a4 t SetCurrentWindow(ImGuiWindow*)
0203e278 00000240 T ImGui::End()
0203e4b8 00000104 t ImGui::ErrorCheckEndFrameSanityChecks()
0203e5bc 00000260 T ImGui::EndChild()
0203e81c 00000058 T ImGui::EndTooltip()
0203e874 000000d4 T ImGui::EndDragDropSource()
0203e948 000000f8 T ImGui::EndPopup()
0203ea40 0000004c W ImPool<ImGuiTable>::TryGetMapData(int)
0203ea8c 00000050 W ImVector<ImGuiTable>::clear()
0203eadc 0000008c W ImPool<ImGuiTable>::Clear()
0203eb68 0000004c W ImPool<ImGuiTable>::~ImPool()
0203eb68 0000004c W ImPool<ImGuiTable>::~ImPool()
0203ebb4 00000c08 W ImGuiContext::ImGuiContext(ImFontAtlas*)
0203ebb4 00000c08 W ImGuiContext::ImGuiContext(ImFontAtlas*)
0203f7bc 000002d0 W ImGuiContext::~ImGuiContext()
0203f7bc 000002d0 W ImGuiContext::~ImGuiContext()
0203fa8c 0000003c W void IM_DELETE<ImGuiContext>(ImGuiContext*)
0203fac8 00000050 W ImVector<ImGuiTableTempData>::clear()
0203fb18 00000064 W ImVector<ImGuiTableTempData>::clear_destruct()
0203fb7c 00000050 W ImVector<ImGuiOldColumns>::clear()
0203fbcc 00000060 W ImVector<ImGuiOldColumns>::clear_destruct()
0203fc2c 000000b0 T ImGuiWindow::~ImGuiWindow()
0203fc2c 000000b0 T ImGuiWindow::~ImGuiWindow()
0203fcdc 0000003c W void IM_DELETE<ImGuiWindow>(ImGuiWindow*)
0203fd18 00000060 W ImVector<ImGuiWindow*>::clear_delete()
0203fd78 00000200 T ImGui::Shutdown()
0203ff78 00000074 T ImGui::DestroyContext(ImGuiContext*)
0203ffec 0000007c W ImVector<ImGuiWindowStackData>::reserve(int)
02040068 00000074 W ImVector<ImGuiWindowStackData>::resize(int)
020400dc 000000a4 W ImVector<ImGuiWindowStackData>::push_back(ImGuiWindowStackData const&)
02040180 0000007c W ImVector<ImGuiPopupData>::reserve(int)
020401fc 00000074 W ImVector<ImGuiPopupData>::resize(int)
02040270 0000015c T ImGui::ClosePopupToLevel(int, bool)
020403cc 000001a4 T ImGui::ClosePopupsOverWindow(ImGuiWindow*, bool)
02040570 00000278 T ImGui::FocusWindow(ImGuiWindow*, int)
020407e8 000000f0 T ImGui::StartMouseMovingWindow(ImGuiWindow*)
020408d8 000000b8 t ImGui::DockNodeStartMouseMovingWindow(ImGuiDockNode*, ImGuiWindow*)
02040990 00000238 T ImGui::UpdateMouseMovingWindowNewFrame()
02040bc8 00000108 T ImGui::FocusTopMostWindowUnderOne(ImGuiWindow*, ImGuiWindow*, ImGuiViewport*, int)
02040cd0 0000077c t ImGui::UpdateViewportsNewFrame()
0204144c 00000200 T ImGui::UpdateMouseMovingWindowEndFrame()
0204164c 00000244 t ImGui::NavUpdateCancelRequest()
02041890 00000168 T ImGui::CloseCurrentPopup()
020419f8 000000a4 W ImVector<ImGuiPopupData>::push_back(ImGuiPopupData const&)
02041a9c 00000180 T ImGui::OpenPopupEx(unsigned int, int)
02041c1c 0000007c W ImVector<ImGuiGroupData>::reserve(int)
02041c98 00000074 W ImVector<ImGuiGroupData>::resize(int)
02041d0c 00000140 T ImGui::BeginGroup()
02041e4c 0000007c W ImVector<ImDrawList*>::reserve(int)
02041ec8 00000074 W ImVector<ImDrawList*>::resize(int)
02041f3c 000000cc t InitViewportDrawData(ImGuiViewportP*)
02042008 000000cc t FlattenDrawDataIntoSingleLayer(ImDrawDataBuilder*)
020420d4 00000138 W ImVector<ImGuiWindow*>::insert(ImGuiWindow* const*, ImGuiWindow* const&)
0204220c 0000003c W ImVector<ImGuiWindow*>::push_front(ImGuiWindow* const&)
02042248 0000007c W ImVector<float>::reserve(int)
020422c4 00000074 W ImVector<float>::resize(int)
02042338 0000007c W ImVector<ImFont*>::reserve(int)
020423b4 0000009c W ImVector<ImFont*>::push_back(ImFont* const&)
02042450 00000070 T ImGui::PushFont(ImFont*)
020424c0 0000007c W ImVector<ImGuiKeyRoutingData>::reserve(int)
0204253c 00000074 W ImVector<ImGuiKeyRoutingData>::resize(int)
020425b0 000000b8 W ImVector<ImGuiKeyRoutingData>::push_back(ImGuiKeyRoutingData const&)
02042668 00000198 t ImGui::UpdateKeyRoutingTable(ImGuiKeyRoutingTable*)
02042800 000006a4 t ImGui::UpdateKeyboardInputs()
02042ea4 00000158 T ImGui::GetShortcutRoutingData(int)
02042ffc 0000012c T ImGui::SetShortcutRouting(int, unsigned int, int)
02043128 000000b4 T ImGui::Shortcut(int, unsigned int, int)
020431dc 00000984 t ImGui::NavUpdateWindowing()
02043b60 000009c8 t ImGui::NavUpdate()
02044528 00000078 W ImVector<unsigned char>::reserve(int)
020445a0 00000074 W ImVector<unsigned char>::resize(int)
02044614 00000228 T ImGui::SetDragDropPayload(char const*, void const*, unsigned int, int)
0204483c 0000007c W ImVector<ImGuiSettingsHandler>::reserve(int)
020448b8 000000a4 W ImVector<ImGuiSettingsHandler>::push_back(ImGuiSettingsHandler const&)
0204495c 00000074 T ImGui::AddSettingsHandler(ImGuiSettingsHandler const*)
020449d0 000000ac T ImGui::DockContextInitialize(ImGuiContext*)
02044a7c 000001c0 T ImGui::Initialize()
02044c3c 00000074 T ImGui::CreateContext(ImFontAtlas*)
02044cb0 0000007c W ImVector<ImGuiDockRequest>::reserve(int)
02044d2c 00000074 W ImVector<ImGuiDockRequest>::resize(int)
02044da0 000000a4 W ImVector<ImGuiDockRequest>::push_back(ImGuiDockRequest const&)
02044e44 000000a4 T ImGui::DockContextQueueDock(ImGuiContext*, ImGuiWindow*, ImGuiDockNode*, ImGuiWindow*, int, float, bool)
02044ee8 000004a4 T ImGui::BeginDockableDragDropTarget(ImGuiWindow*)
0204538c 00000068 T ImGui::DockContextQueueUndockWindow(ImGuiContext*, ImGuiWindow*)
020453f4 00000068 T ImGui::DockContextQueueUndockNode(ImGuiContext*, ImGuiDockNode*)
0204545c 00000158 T ImGui::StartMouseMovingWindowOrNode(ImGuiWindow*, ImGuiDockNode*, bool)
020455b4 0000007c W ImVector<ImGuiDockContextPruneNodeData>::reserve(int)
02045630 00000044 W ImPool<ImGuiDockContextPruneNodeData>::Reserve(int)
02045674 00000050 W ImVector<ImGuiDockContextPruneNodeData>::operator[](int)
020456c4 00000050 W ImPool<ImGuiDockContextPruneNodeData>::GetByKey(unsigned int)
02045714 0000007c W ImVector<ImGuiDockNode*>::reserve(int)
02045790 0000009c W ImVector<ImGuiDockNode*>::push_back(ImGuiDockNode* const&)
0204582c 00000124 t DockNodeTreeUpdateSplitterFindTouchingNode(ImGuiDockNode*, ImGuiAxis, int, ImVector<ImGuiDockNode*>*)
02045950 00000308 T ImGui::DockBuilderRemoveNodeChildNodes(unsigned int)
02045c58 0000006c T ImGui::DockContextClearNodes(ImGuiContext*, unsigned int, bool)
02045cc4 00000040 t ImGui::DockSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
02045d04 0000007c T ImGui::DockContextRebuildNodes(ImGuiContext*)
02045d80 00000164 T ImGui::DockContextNewFrameUpdateUndocking(ImGuiContext*)
02045ee4 0000007c W ImVector<ImGuiStackLevelInfo>::reserve(int)
02045f60 00000074 W ImVector<ImGuiStackLevelInfo>::resize(int)
02045fd4 000001b0 t ImGui::UpdateDebugToolStackQueries()
02046184 000000d0 W ImVector<ImGuiStackLevelInfo>::resize(int, ImGuiStackLevelInfo const&)
02046254 0000029c T ImGui::DebugHookIdInfo(unsigned int, int, void const*, void const*)
020464f0 0000009c T ImGuiWindow::GetID(char const*, char const*)
0204658c 000003ec T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
0204658c 000003ec T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
02046978 000000e4 t CreateNewWindow(char const*, int)
02046a5c 00000aa8 t ImGui::RenderWindowDecorations(ImGuiWindow*, ImRect const&, bool, bool, int, unsigned int const*, float)
02047504 000004ec t ImGui::RenderWindowTitleBarContents(ImGuiWindow*, ImRect const&, char const*, bool*)
020479f0 00000050 T ImGui::PushID(char const*)
02047a40 00000034 T ImGui::GetID(char const*)
02047a74 00000088 T ImGui::IsPopupOpen(char const*, int)
02047afc 00000094 T ImGui::OpenPopup(char const*, int)
02047b90 000004d8 T ImGui::BeginDocked(ImGuiWindow*, bool*)
02048068 00000078 T ImGuiWindow::GetID(int)
020480e0 00000fd0 t ImGui::UpdateWindowManualResize(ImGuiWindow*, ImVec2 const&, int*, int*, int, unsigned int*, ImRect const&)
020490b0 00002a1c T ImGui::Begin(char const*, bool*, int)
0204bacc 00000244 t ImGui::NavUpdateWindowingOverlay()
0204bd10 00000070 t ImGui::NavEndFrame()
0204bd80 00000398 T ImGui::BeginChildEx(char const*, unsigned int, ImVec2 const&, int, int)
0204c118 00000160 T ImGui::BeginTooltipEx(int, int)
0204c278 00000028 T ImGui::BeginTooltip()
0204c2a0 000001b4 t ImGui::UpdateDebugToolItemPicker()
0204c454 0000005c T ImGui::SetTooltipV(char const*, __va_list_tag*)
0204c4b0 00000084 T ImGui::SetTooltip(char const*, ...)
0204c534 000003a8 T ImGui::EndFrame()
0204c8dc 000000a8 T ImGui::SetItemTooltip(char const*, ...)
0204c984 000000d8 T ImGui::BeginPopupEx(unsigned int, int)
0204ca5c 00000070 T ImGui::BeginPopup(char const*, int)
0204cacc 00000124 t ImGui::DockNodeWindowMenuUpdate(ImGuiDockNode*, ImGuiTabBar*)
0204cbf0 0000005c T ImGui::BeginTooltipHidden()
0204cc4c 00000328 T ImGui::BeginDragDropSource(int)
0204cf74 000002b4 T ImGui::BeginDockableDragDropSource(ImGuiWindow*)
0204d228 0000004c T ImGui::PushID(int)
0204d274 00000714 t ImGui::DockNodeTreeUpdateSplitter(ImGuiDockNode*)
0204d988 00000060 T ImGui::PushOverrideID(unsigned int)
0204d9e8 00000c94 t ImGui::DockNodeUpdateTabBar(ImGuiDockNode*, ImGuiWindow*)
0204e67c 00000e78 t ImGui::DockNodeUpdate(ImGuiDockNode*)
0204f4f4 00000130 T ImGui::DockContextNewFrameUpdateDocking(ImGuiContext*)
0204f624 00000b58 T ImGui::NewFrame()
0205017c 00000084 T ImGui::GetIDWithSeed(char const*, char const*, unsigned int)
02050200 00000068 T ImGui::GetIDWithSeed(int, unsigned int)
02050268 0000007c W ImVector<ImDrawCmd>::reserve(int)
020502e4 000000a4 W ImVector<ImDrawCmd>::push_back(ImDrawCmd const&)
02050388 00000130 W ImVector<ImDrawCmd>::insert(ImDrawCmd const*, ImDrawCmd const&)
020504b8 0000003c W ImVector<ImDrawCmd>::push_front(ImDrawCmd const&)
020504f4 00000268 t ImGui::RenderDimmedBackgroundBehindWindow(ImGuiWindow*, unsigned int)
0205075c 000003a4 t ImGui::RenderDimmedBackgrounds()
02050b00 0000033c T ImGui::Render()
02050e3c 00000050 W ImVector<ImGuiDockContextPruneNodeData>::clear()
02050e8c 00000088 W ImPool<ImGuiDockContextPruneNodeData>::Clear()
02050f14 0000004c W ImPool<ImGuiDockContextPruneNodeData>::~ImPool()
02050f14 0000004c W ImPool<ImGuiDockContextPruneNodeData>::~ImPool()
02050f60 00000074 W ImVector<ImGuiDockContextPruneNodeData>::resize(int)
02050fd4 000000a0 W ImPool<ImGuiDockContextPruneNodeData>::Add()
02051074 0000005c W ImPool<ImGuiDockContextPruneNodeData>::GetOrAddByKey(unsigned int)
020510d0 0000038c t ImGui::DockContextPruneUnusedSettingsNodes(ImGuiContext*)
0205145c 00000058 t ImGui::DockSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
020514b4 00000074 W ImVector<ImVec2>::resize(int)
02051528 00000034 t ImUpperPowerOfTwo(int)
0205155c 00000064 t ImLerp(ImVec4 const&, ImVec4 const&, float)
020515c0 000000bc t ImFloor(float)
0205167c 00000030 t stbrp_setup_allow_out_of_mem
020516ac 000000c8 t stbrp_init_target
02051774 00000058 t rect_height_compare(void const*, void const*)
020517cc 00000034 t rect_original_order(void const*, void const*)
02051800 00000030 t stbtt__buf_get8(stbtt__buf*)
02051830 00000028 t stbtt__buf_peek8(stbtt__buf*)
02051858 00000018 t ttUSHORT(unsigned char*)
02051870 00000018 t ttSHORT(unsigned char*)
02051888 0000002c t ttULONG(unsigned char*)
020518b4 0000002c t ttLONG(unsigned char*)
020518e0 00000138 t stbtt__isfont(unsigned char*)
02051a18 000000cc t stbtt__find_table(unsigned char*, unsigned int, char const*)
02051ae4 000000f8 t stbtt_GetFontOffsetForIndex_internal(unsigned char*, int)
02051bdc 00000018 t stbtt_setvertex(stbtt_vertex*, unsigned char, int, int, int, int)
02051bf4 0000012c t stbtt__close_shape(stbtt_vertex*, int, int, int, int, int, int, int, int, int)
02051d20 0000007c t stbtt__track_vertex(stbtt__csctx*, int, int)
02051d9c 000000f4 t stbtt__csctx_v(stbtt__csctx*, unsigned char, int, int, int, int, int, int)
02051e90 00000078 t stbtt__csctx_close_shape(stbtt__csctx*)
02051f08 000000a0 t stbtt__csctx_rmove_to(stbtt__csctx*, float, float)
02051fa8 0000006c t stbtt__csctx_rline_to(stbtt__csctx*, float, float)
02052014 000000ac t stbtt__csctx_rccurve_to(stbtt__csctx*, float, float, float, float, float, float)
020520c0 00000124 t stbtt_GetGlyphHMetrics
020521e4 000000a8 t stbtt_GetFontVMetrics
0205228c 00000090 t stbtt_ScaleForPixelHeight
0205231c 00000064 t stbtt_ScaleForMappingEmToPixels
02052380 00000010 t stbtt__hheap_free(stbtt__hheap*, void*)
02052390 00000014 t stbtt__sized_triangle_area(float, float)
020523a4 000000ec t stbtt__sort_edges_ins_sort(stbtt__edge*, int)
02052490 00000274 t stbtt__sort_edges_quicksort(stbtt__edge*, int)
02052704 00000044 t stbtt__sort_edges(stbtt__edge*, int)
02052748 0000001c t stbtt__add_point(stbtt__point*, int, float, float)
02052764 00000198 t stbtt__tesselate_curve(stbtt__point*, int*, float, float, float, float, float, float, float, int)
020528fc 00000068 t stbtt__oversample_shift(int)
02052964 00000294 t stbtt_GetPackedQuad
02052bf8 00000020 t stbtt_GetFontOffsetForIndex
02052c18 00000018 t Decode85Byte(char)
02052c30 000000e0 t Decode85(unsigned char const*, unsigned char*)
02052d10 0000003c t CalcWordWrapNextLineStartA(char const*, char const*)
02052d4c 0000002c t stb_decompress_length(unsigned char const*)
02052d78 0000011c t stb_adler32(unsigned int, unsigned char*, unsigned int)
02052e94 0000000c t GetDefaultCompressedFontDataTTFBase85()
02052ea0 00000044 t FixRectCornerFlags(int)
02052ee4 00000098 t stb__match(unsigned char const*, unsigned int)
02052f7c 0000004c t stbtt__new_buf(void const*, unsigned int)
02052fc8 00000094 t stbtt__buf_range(stbtt__buf const*, int, int)
0205305c 00000098 t stbtt__buf_get(stbtt__buf*, int)
020530f4 000000ec t stbtt__cff_int(stbtt__buf*)
020531e0 00000048 t stbtt__buf_seek(stbtt__buf*, int)
02053228 00000028 t stbtt__buf_skip(stbtt__buf*, int)
02053250 0000003c t stbtt__cff_index_count(stbtt__buf*)
0205328c 000000a4 t stbtt__cff_skip_operand(stbtt__buf*)
02053330 000000e8 t stbtt__dict_get(stbtt__buf*, int)
02053418 00000088 t stbtt__dict_get_ints(stbtt__buf*, int, int, unsigned int*)
020534a0 00000120 t stbtt__cff_index_get(stbtt__buf, int)
020535c0 000000c4 t stbtt__get_subr(stbtt__buf, int)
02053684 000000dc t stbtt__cff_get_index(stbtt__buf*)
02053760 000000fc t stbtt__get_subrs(stbtt__buf, stbtt__buf)
0205385c 000001b8 t stbtt__cid_get_glyph_subrs(stbtt_fontinfo const*, int)
02053a14 00000c24 t stbtt__run_charstring(stbtt_fontinfo const*, int, stbtt__csctx*)
02054638 0000011c t stbtt__GetGlyphInfoT2(stbtt_fontinfo const*, int, int*, int*, int*, int*)
02054754 000005a4 t stbtt_InitFont_internal(stbtt_fontinfo*, unsigned char*, int)
02054cf8 00000020 t stbtt_InitFont
02054d18 00000444 t stbtt_FindGlyphIndex
0205515c 00000144 t stbtt__GetGlyfOffset(stbtt_fontinfo const*, int)
020552a0 00000118 t stbtt_GetGlyphBox
020553b8 0000011c t stbrp__skyline_find_min_y(stbrp_context*, stbrp_node*, int, int, int*)
020554d4 000002f0 t stbrp__skyline_find_best_pos(stbrp_context*, int, int)
020557c4 00000120 t stbrp__skyline_pack_rectangle(stbrp_context*, int, int)
020558e4 00000098 t stbtt__sized_trapezoid_area(float, float, float)
0205597c 0000002c t stbtt__position_trapezoid_area(float, float, float, float, float)
020559a8 0000038c t stbtt__handle_clipped_edge(float*, int, stbtt__active_edge*, float, float, float, float)
02055d34 000008c8 t stbtt__fill_active_edges_new(float*, float*, int, stbtt__active_edge*, float)
020565fc 000002c8 t stbtt__h_prefilter(unsigned char*, int, int, int, unsigned int)
020568c4 000002e0 t stbtt__v_prefilter(unsigned char*, int, int, int, unsigned int)
02056ba4 00000200 t stbtt_GetGlyphBitmapBoxSubpixel
02056da4 0000002c t stbtt_GetGlyphBitmapBox
02056dd0 000000e8 t stbtt__GetGlyphShapeT2(stbtt_fontinfo const*, int, stbtt_vertex**)
02056eb8 000000d8 t stbtt__hheap_alloc(stbtt__hheap*, unsigned int, void*)
02056f90 00000140 t stbtt__new_active(stbtt__hheap*, stbtt__edge*, int, float, void*)
020570d0 000000a0 t stb__lit(unsigned char const*, unsigned int)
02057170 00000300 t stb_decompress_token(unsigned char const*)
02057470 00000210 t stb_decompress(unsigned char*, unsigned char const*, unsigned int)
02057680 00000150 t stbtt_PackBegin
020577d0 00000044 t stbtt__hheap_cleanup(stbtt__hheap*, void*)
02057814 000003a4 t stbtt__rasterize_sorted_edges(stbtt__bitmap*, stbtt__edge*, int, int, int, int, void*)
02057bb8 00000264 t stbtt__rasterize(stbtt__bitmap*, stbtt__point*, int*, int, float, float, float, float, int, int, int, void*)
02057e1c 00000038 t stbtt_PackEnd
02057e54 00000aac t stbtt__GetGlyphShapeTT(stbtt_fontinfo const*, int, stbtt_vertex**)
02058900 00000034 t stbtt_GetGlyphShape
02058934 00000254 t stbtt__tesselate_cubic(stbtt__point*, int*, float, float, float, float, float, float, float, float, float, int)
02058b88 000004f8 t stbtt_FlattenCurves(stbtt_vertex*, int, float, int**, int*, void*)
02059080 00000118 t stbtt_Rasterize
02059198 0000013c t stbtt_MakeGlyphBitmapSubpixel
020592d4 000005ac t stbtt_PackFontRangesRenderIntoRects
02059880 000001a4 t stbrp_pack_rects
02059a24 00000040 W ImDrawCmd::ImDrawCmd()
02059a24 00000040 W ImDrawCmd::ImDrawCmd()
02059a64 0000003c W ImFontAtlasCustomRect::ImFontAtlasCustomRect()
02059a64 0000003c W ImFontAtlasCustomRect::ImFontAtlasCustomRect()
02059aa0 0000005c W ImBitVector::TestBit(int) const
02059afc 00000064 W ImBitVector::SetBit(int)
02059b60 00000c98 T ImGui::StyleColorsDark(ImGuiStyle*)
0205a7f8 0000011c T ImDrawListSharedData::ImDrawListSharedData()
0205a7f8 0000011c T ImDrawListSharedData::ImDrawListSharedData()
0205a914 00000150 T ImDrawListSharedData::SetCircleTessellationMaxError(float)
0205aa64 000000d8 T ImDrawList::_CalcCircleAutoSegmentCount(float) const
0205ab3c 00000134 T ImDrawList::PrimRect(ImVec2 const&, ImVec2 const&, unsigned int)
0205ac70 00000168 T ImDrawList::PrimRectUV(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0205add8 00000088 T ImFontConfig::ImFontConfig()
0205add8 00000088 T ImFontConfig::ImFontConfig()
0205ae60 0000009c T ImFontAtlas::ImFontAtlas()
0205ae60 0000009c T ImFontAtlas::ImFontAtlas()
0205aefc 00000084 T ImFontAtlas::ClearTexData()
0205af80 00000168 T ImFontAtlas::CalcCustomRectUV(ImFontAtlasCustomRect const*, ImVec2*, ImVec2*) const
0205b0e8 000000a8 T ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char*, float)
0205b190 00000048 T ImFontAtlasBuildMultiplyRectAlpha8(unsigned char const*, unsigned char*, int, int, int, int, int)
0205b1d8 00000018 T ImFontAtlasGetBuilderForStbTruetype()
0205b1f0 00000048 T ImFontAtlasUpdateConfigDataPointers(ImFontAtlas*)
0205b238 000000f4 T ImFontAtlasBuildRender8bppRectFromString(ImFontAtlas*, int, int, int, int, char const*, char, unsigned char)
0205b32c 00000100 T ImFontAtlasBuildRender32bppRectFromString(ImFontAtlas*, int, int, int, int, char const*, char, unsigned int)
0205b42c 0000000c T ImFontAtlas::GetGlyphRangesDefault()
0205b438 00000088 T ImFont::ImFont()
0205b438 00000088 T ImFont::ImFont()
0205b4c0 00000050 T ImFont::FindGlyph(unsigned short) const
0205b510 0000005c T ImFont::SetGlyphVisible(unsigned short, bool)
0205b56c 0000004c T ImFont::FindGlyphNoFallback(unsigned short) const
0205b5b8 0000008c t FindFirstExistingGlyph(ImFont*, unsigned short const*, int)
0205b644 00000238 T ImFont::CalcWordWrapPositionA(float, char const*, char const*, float) const
0205b87c 00000278 T ImFont::CalcTextSizeA(float, float, float, char const*, char const*, char const**) const
0205baf4 000000f0 T ImGui::CalcRoundingFlagsForRectInRect(ImRect const&, ImRect const&, float)
0205bbe4 00000050 W ImVector<ImFontAtlasCustomRect>::operator[](int)
0205bc34 0000004c W ImFontAtlas::GetCustomRectByIndex(int)
0205bc80 00000208 T ImFontAtlas::GetMouseCursorTexData(int, ImVec2*, ImVec2*, ImVec2*, ImVec2*)
0205be88 000002d4 t ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas*)
0205c15c 000002c0 t ImFontAtlasBuildRenderLinesTexData(ImFontAtlas*)
0205c41c 00000050 W ImVector<ImDrawCmd>::clear()
0205c46c 00000050 W ImVector<ImDrawVert>::clear()
0205c4bc 00000050 W ImVector<ImVec4>::clear()
0205c50c 00000050 W ImVector<void*>::clear()
0205c55c 00000068 T ImDrawList::_PopUnusedDrawCmd()
0205c5c4 00000044 W ImVector<ImVec4>::pop_back()
0205c608 00000044 W ImVector<void*>::pop_back()
0205c64c 00000060 W ImVector<ImVec2>::reserve_discard(int)
0205c6ac 000002f4 T ImDrawList::_PathArcToFastEx(ImVec2 const&, float, int, int, int)
0205c9a0 00000048 T ImDrawList::PathArcToFast(ImVec2 const&, float, int, int)
0205c9e8 000002cc T ImDrawList::PathRect(ImVec2 const&, ImVec2 const&, float, int)
0205ccb4 00000150 T ImDrawList::_PathArcToN(ImVec2 const&, float, float, float, int)
0205ce04 00000400 T ImDrawList::PathArcTo(ImVec2 const&, float, float, float, int)
0205d204 00000050 W ImVector<ImDrawChannel>::operator[](int)
0205d254 000000c8 T ImDrawListSplitter::ClearFreeMemory()
0205d31c 00000070 T ImDrawList::_ClearFreeMemory()
0205d38c 0000007c W ImVector<ImDrawChannel>::reserve(int)
0205d408 00000074 W ImVector<ImDrawChannel>::resize(int)
0205d47c 000000b4 W ImVector<ImDrawCmd>::erase(ImDrawCmd const*)
0205d530 00000050 W ImVector<ImDrawList*>::operator[](int)
0205d580 00000050 W ImVector<ImFontConfig>::clear()
0205d5d0 00000050 W ImVector<ImFontAtlasCustomRect>::clear()
0205d620 00000120 T ImFontAtlas::ClearInputData()
0205d740 0000004c W ImVector<ImFontConfig>::back()
0205d78c 00000050 W ImVector<ImFontBuildSrcData>::operator[](int)
0205d7dc 00000050 W ImVector<ImFontConfig>::operator[](int)
0205d82c 00000050 W ImVector<ImFontBuildDstData>::operator[](int)
0205d87c 000000c0 t UnpackBitVectorToFlatIndexList(ImBitVector const*, ImVector<int>*)
0205d93c 00000050 W ImVector<ImFontBuildDstData>::clear()
0205d98c 00000050 W ImVector<stbrp_rect>::operator[](int)
0205d9dc 00000050 W ImVector<stbtt_packedchar>::operator[](int)
0205da2c 00000050 W ImVector<stbrp_rect>::clear()
0205da7c 00000048 W ImFontBuildSrcData::~ImFontBuildSrcData()
0205da7c 00000048 W ImFontBuildSrcData::~ImFontBuildSrcData()
0205dac4 00000050 W ImVector<ImFontGlyph>::clear()
0205db14 00000078 T ImFont::ClearOutputData()
0205db8c 000000ac T ImFontAtlasBuildSetupFont(ImFontAtlas*, ImFont*, ImFontConfig*, float, float)
0205dc38 0000005c T ImFont::~ImFont()
0205dc38 0000005c T ImFont::~ImFont()
0205dc94 00000050 W ImVector<ImFontGlyph>::operator[](int)
0205dce4 0000004c W ImVector<ImFontGlyph>::back()
0205dd30 00000048 W ImBitVector::Create(int)
0205dd78 00000074 W ImVector<ImDrawCmd>::resize(int)
0205ddec 000000bc T ImDrawList::AddDrawCmd()
0205dea8 00000178 T ImDrawList::_OnChangedClipRect()
0205e020 00000084 T ImDrawList::PopClipRect()
0205e0a4 0000012c T ImDrawList::_OnChangedTextureID()
0205e1d0 00000064 T ImDrawList::PopTextureID()
0205e234 00000088 T ImDrawList::_OnChangedVtxOffset()
0205e2bc 000001bc T ImDrawListSplitter::SetCurrentChannel(ImDrawList*, int)
0205e478 00000390 T ImDrawListSplitter::Merge(ImDrawList*)
0205e808 0000014c T ImDrawListSplitter::Split(ImDrawList*, int)
0205e954 000000ac W ImVector<unsigned short>::resize(int, unsigned short const&)
0205ea00 00000074 W ImVector<ImDrawVert>::resize(int)
0205ea74 000000d4 T ImDrawList::PrimReserve(int, int)
0205eb48 00000ef8 T ImDrawList::AddPolyline(ImVec2 const*, int, unsigned int, int, float)
0205fa40 000000f0 T ImDrawList::AddLine(ImVec2 const&, ImVec2 const&, unsigned int, float)
0205fb30 00000144 T ImDrawList::AddRect(ImVec2 const&, ImVec2 const&, unsigned int, float, int, float)
0205fc74 00000140 T ImGui::RenderCheckMark(ImDrawList*, ImVec2, unsigned int, float)
0205fdb4 00000458 T ImDrawList::AddConvexPolyFilled(ImVec2 const*, int, unsigned int)
0206020c 00000090 T ImDrawList::AddTriangleFilled(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0206029c 00000230 T ImGui::RenderArrow(ImDrawList*, ImVec2, unsigned int, int, float)
020604cc 000001a4 T ImGui::RenderArrowPointingAt(ImDrawList*, ImVec2, ImVec2, int, unsigned int)
02060670 000000f4 T ImDrawList::AddCircleFilled(ImVec2 const&, float, unsigned int, int)
02060764 0000004c T ImGui::RenderBullet(ImDrawList*, ImVec2, unsigned int)
020607b0 000000b0 T ImDrawList::AddRectFilled(ImVec2 const&, ImVec2 const&, unsigned int, float, int)
02060860 00000160 T ImGui::RenderArrowDockMenu(ImDrawList*, ImVec2, float, unsigned int)
020609c0 00000398 T ImGui::RenderRectFilledWithHole(ImDrawList*, ImRect const&, ImRect const&, unsigned int, float)
02060d58 000001b8 T ImFont::RenderChar(ImDrawList*, float, ImVec2 const&, unsigned int, unsigned short) const
02060f10 000005f8 T ImFont::RenderText(ImDrawList*, float, ImVec2 const&, unsigned int, ImVec4 const&, char const*, char const*, float, bool) const
02061508 000001f0 T ImDrawList::AddText(ImFont const*, float, ImVec2 const&, unsigned int, char const*, char const*, float, ImVec4 const*)
020616f8 0000007c W ImVector<ImVec4>::reserve(int)
02061774 00000074 W ImVector<ImVec4>::resize(int)
020617e8 000000b8 W ImVector<ImVec4>::push_back(ImVec4 const&)
020618a0 0000011c T ImDrawList::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
020619bc 00000050 T ImDrawList::PushClipRectFullScreen()
02061a0c 0000007c W ImVector<void*>::reserve(int)
02061a88 00000074 W ImVector<void*>::resize(int)
02061afc 000000f4 T ImDrawList::_ResetForNewFrame()
02061bf0 0000009c W ImVector<void*>::push_back(void* const&)
02061c8c 00000048 T ImDrawList::PushTextureID(void*)
02061cd4 000000f8 T ImDrawList::AddImage(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
02061dcc 00000080 T ImDrawData::Clear()
02061e4c 0000009c W ImVector<ImDrawList*>::push_back(ImDrawList* const&)
02061ee8 000001bc T ImGui::AddDrawListToDrawDataEx(ImDrawData*, ImVector<ImDrawList*>*, ImDrawList*)
020620a4 0000003c W void IM_DELETE<ImFont>(ImFont*)
020620e0 00000060 W ImVector<ImFont*>::clear_delete()
02062140 00000064 T ImFontAtlas::ClearFonts()
020621a4 0000003c T ImFontAtlas::Clear()
020621e0 00000088 T ImFontAtlas::~ImFontAtlas()
020621e0 00000088 T ImFontAtlas::~ImFontAtlas()
02062268 0000007c W ImVector<ImFontConfig>::reserve(int)
020622e4 000000a4 W ImVector<ImFontConfig>::push_back(ImFontConfig const&)
02062388 000001dc T ImFontAtlas::AddFont(ImFontConfig const*)
02062564 00000138 T ImFontAtlas::AddFontFromMemoryTTF(void*, int, float, ImFontConfig const*, unsigned short const*)
0206269c 00000170 T ImFontAtlas::AddFontFromFileTTF(char const*, float, ImFontConfig const*, unsigned short const*)
0206280c 00000108 T ImFontAtlas::AddFontFromMemoryCompressedTTF(void const*, int, float, ImFontConfig const*, unsigned short const*)
02062914 000000d4 T ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(char const*, float, ImFontConfig const*, unsigned short const*)
020629e8 00000154 T ImFontAtlas::AddFontDefault(ImFontConfig const*)
02062b3c 00000090 T ImFontAtlas::Build()
02062bcc 000000a4 T ImFontAtlas::GetTexDataAsAlpha8(unsigned char**, int*, int*, int*)
02062c70 00000124 T ImFontAtlas::GetTexDataAsRGBA32(unsigned char**, int*, int*, int*)
02062d94 0000007c W ImVector<ImFontAtlasCustomRect>::reserve(int)
02062e10 000000d0 W ImVector<ImFontAtlasCustomRect>::push_back(ImFontAtlasCustomRect const&)
02062ee0 000000bc T ImFontAtlas::AddCustomRectRegular(int, int)
02062f9c 00000114 T ImFontAtlasBuildInit(ImFontAtlas*)
020630b0 0000007c W ImVector<ImFontBuildSrcData>::reserve(int)
0206312c 00000074 W ImVector<ImFontBuildSrcData>::resize(int)
020631a0 0000007c W ImVector<ImFontBuildDstData>::reserve(int)
0206321c 00000074 W ImVector<ImFontBuildDstData>::resize(int)
02063290 0000007c W ImVector<stbrp_rect>::reserve(int)
0206330c 00000074 W ImVector<stbrp_rect>::resize(int)
02063380 0000029c T ImFontAtlasBuildPackCustomRects(ImFontAtlas*, void*)
0206361c 0000007c W ImVector<stbtt_packedchar>::reserve(int)
02063698 00000074 W ImVector<stbtt_packedchar>::resize(int)
0206370c 00000050 W ImVector<ImFontBuildSrcData>::clear()
0206375c 00000060 W ImVector<ImFontBuildSrcData>::clear_destruct()
020637bc 0000007c W ImVector<ImFontGlyph>::reserve(int)
02063838 00000074 W ImVector<ImFontGlyph>::resize(int)
020638ac 000002fc T ImFont::AddGlyph(ImFontConfig const*, unsigned short, float, float, float, float, float, float, float, float, float)
02063ba8 000000ac W ImVector<float>::resize(int, float const&)
02063c54 000000ac T ImFont::GrowIndex(int)
02063d00 00000464 T ImFont::BuildLookupTable()
02064164 000001dc T ImFontAtlasBuildFinish(ImFontAtlas*)
02064340 00000e90 t ImFontAtlasBuildWithStbTruetype(ImFontAtlas*)
020651d0 0000000c t TableSettingsCalcChunkSize(int)
020651dc 00000050 t TableGetColumnAvailSortDirection(ImGuiTableColumn*, int)
0206522c 000000a4 t TableGetColumnBorderCol(ImGuiTable*, int, int)
020652d0 0000008c t TableSettingsInit(ImGuiTableSettings*, unsigned int, int, int)
0206535c 00000330 t TableSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
0206568c 00000030 W ImBitArrayClearAllBits(unsigned int*, int)
020656bc 00000088 W ImBitArraySetBitRange(unsigned int*, int, int)
02065744 00000088 W ImGuiTableColumn::ImGuiTableColumn()
02065744 00000088 W ImGuiTableColumn::ImGuiTableColumn()
020657cc 0000014c W ImGuiTable::ImGuiTable()
020657cc 0000014c W ImGuiTable::ImGuiTable()
02065918 000000a0 W ImGuiTableTempData::ImGuiTableTempData()
02065918 000000a0 W ImGuiTableTempData::ImGuiTableTempData()
020659b8 00000054 W ImGui::ItemSize(ImRect const&, float)
02065a0c 00000094 W TableFixFlags(int, ImGuiWindow*)
02065aa0 00000098 T ImGui::TableGetColumnWidthAuto(ImGuiTable*, ImGuiTableColumn*)
02065b38 00000084 T ImGui::TableFixColumnSortDirection(ImGuiTable*, ImGuiTableColumn*)
02065bbc 000000d0 T ImGui::TableOpenContextMenu(int)
02065c8c 00000084 T ImGui::TableBeginContextMenuPopup(ImGuiTable*)
02065d10 00000024 T ImGui::TableResetSettings(ImGuiTable*)
02065d34 0000008c T ImGui::TableSettingsAddSettingsHandler()
02065dc0 0000003c T ImGui::TableGcCompactTransientBuffers(ImGuiTableTempData*)
02065dfc 0000009c T ImGui::SetWindowClipRectBeforeSetChannel(ImGuiWindow*, ImRect const&)
02065e98 00000078 T ImGui::TablePushBackgroundChannel()
02065f10 00000014 T ImGui::GetColumnOffsetFromNorm(ImGuiOldColumns const*, float)
02065f24 00000014 T ImGui::GetColumnNormFromOffset(ImGuiOldColumns const*, float)
02065f38 00000084 T ImGui::PushColumnsBackground()
02065fbc 00000068 T ImGui::PopColumnsBackground()
02066024 00000040 W ImGui::TableGetInstanceID(ImGuiTable*, int)
02066064 0000006c T ImGui::TableGetColumnResizeID(ImGuiTable*, int, int)
020660d0 00000058 W ImPool<ImGuiTable>::GetIndex(ImGuiTable const*) const
02066128 00000050 W ImVector<ImGuiTableTempData>::operator[](int)
02066178 00000174 T ImGui::TableBeginCell(ImGuiTable*, int)
020662ec 000000fc T ImGui::TableEndCell(ImGuiTable*)
020663e8 00000054 T ImGui::TableSetColumnWidthAutoSingle(ImGuiTable*, int)
0206643c 00000080 T ImGui::TableSetColumnWidthAutoAll(ImGuiTable*)
020664bc 000001b8 T ImGui::TableUpdateColumnsWeightFromWidth(ImGuiTable*)
02066674 00000070 T ImGui::TablePopBackgroundChannel()
020666e4 0000023c T ImGui::TableSetupDrawChannels(ImGuiTable*)
02066920 0000041c T ImGui::TableSortSpecsSanitize(ImGuiTable*)
02066d3c 00000050 W ImSpan<short>::operator[](int)
02066d8c 0000030c T ImGui::TableUpdateBorders(ImGuiTable*)
02067098 000004c0 T ImGui::TableDrawBorders(ImGuiTable*)
02067558 00000088 W ImSpanAllocator<6>::Reserve(int, unsigned int, int)
020675e0 00000058 W ImSpanAllocator<6>::GetSpanPtrBegin(int)
02067638 0000005c W ImSpan<ImGuiTableColumn>::index_from_ptr(ImGuiTableColumn const*) const
02067694 0000021c t TableSetupColumnFlags(ImGuiTable*, ImGuiTableColumn*, int)
020678b0 00000050 W ImSpan<ImGuiTableColumn>::operator[](int) const
02067900 00000088 T ImGui::TableGetCellBgRect(ImGuiTable const*, int)
02067988 0000013c T ImGui::TableGetMaxColumnWidth(ImGuiTable const*, int)
02067ac4 00000298 T ImGui::TableSetColumnWidth(int, float)
02067d5c 000002f8 T ImGui::TableBeginApplyRequests(ImGuiTable*)
02068054 0000004c W ImVector<char>::operator[](int) const
020680a0 00000084 T ImGui::TableGetColumnName(ImGuiTable const*, int)
02068124 00000318 T ImGui::TableDrawDefaultContextMenu(ImGuiTable*, int)
0206843c 00000050 W ImSpan<ImGuiTableCellData>::operator[](int)
0206848c 000001c0 T ImGui::TableSetBgColor(int, unsigned int, int)
0206864c 00000178 T ImGui::TableBeginRow(ImGuiTable*)
020687c4 000007a4 T ImGui::TableEndRow(ImGuiTable*)
02068f68 00000060 W ImChunkStream<ImGuiTableSettings>::alloc_chunk(unsigned int)
02068fc8 00000070 T ImGui::TableSettingsCreate(unsigned int, int)
02069038 00000070 T ImGui::TableSettingsFindByID(unsigned int)
020690a8 000000a8 t TableSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
02069150 0000031c t TableSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
0206946c 00000174 T ImGui::TableGcCompactSettings()
020695e0 0000004c W ImChunkStream<ImGuiTableSettings>::ptr_from_offset(int)
0206962c 0000009c T ImGui::TableGetBoundSettings(ImGuiTable*)
020696c8 0000005c W ImChunkStream<ImGuiTableSettings>::offset_from_ptr(ImGuiTableSettings const*)
02069724 0000025c T ImGui::TableSaveSettings(ImGuiTable*)
02069980 000002a8 T ImGui::TableLoadSettings(ImGuiTable*)
02069c28 00000050 W ImVector<ImGuiTableColumnSortSpecs>::clear()
02069c78 000000e0 T ImGui::TableGcCompactTransientBuffers(ImGuiTable*)
02069d58 00000050 W ImVector<ImGuiOldColumnData>::operator[](int)
02069da8 000000a8 T ImGui::GetColumnOffset(int)
02069e50 00000120 t GetDraggedColumnOffset(ImGuiOldColumns*, int)
02069f70 000000b4 t GetColumnWidthEx(ImGuiOldColumns*, int, bool)
0206a024 000001c4 T ImGui::SetColumnOffset(int, float)
0206a1e8 00000484 T ImGui::EndColumns()
0206a66c 0000007c W ImVector<ImGuiTableTempData>::reserve(int)
0206a6e8 000000d0 W ImVector<ImGuiTableTempData>::resize(int, ImGuiTableTempData const&)
0206a7b8 0000007c W ImVector<ImGuiTableInstanceData>::reserve(int)
0206a834 000000c8 W ImVector<ImGuiTableInstanceData>::push_back(ImGuiTableInstanceData const&)
0206a8fc 0000006c W ImSpanAllocator<6>::GetSpanPtrEnd(int)
0206a968 00000064 W void ImSpanAllocator<6>::GetSpan<ImGuiTableColumn>(int, ImSpan<ImGuiTableColumn>*)
0206a9cc 00000064 W void ImSpanAllocator<6>::GetSpan<short>(int, ImSpan<short>*)
0206aa30 00000064 W void ImSpanAllocator<6>::GetSpan<ImGuiTableCellData>(int, ImSpan<ImGuiTableCellData>*)
0206aa94 00000138 T ImGui::TableBeginInitMemory(ImGuiTable*, int)
0206abcc 000008ac T ImGui::TableMergeDrawChannels(ImGuiTable*)
0206b478 0000007c W ImVector<ImGuiTableColumnSortSpecs>::reserve(int)
0206b4f4 00000074 W ImVector<ImGuiTableColumnSortSpecs>::resize(int)
0206b568 00000168 T ImGui::TableSortSpecsBuild(ImGuiTable*)
0206b6d0 00001388 T ImGui::TableUpdateLayout(ImGuiTable*)
0206ca58 000000dc T ImGui::TableNextRow(int, float)
0206cb34 000000b8 T ImGui::TableNextColumn()
0206cbec 00000ad8 T ImGui::EndTable()
0206d6c4 00000070 t TableSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
0206d734 00000070 t TableSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
0206d7a4 0000007c W ImVector<ImGuiTable>::reserve(int)
0206d820 00000074 W ImVector<ImGuiTable>::resize(int)
0206d894 00000090 W ImPool<ImGuiTable>::Add()
0206d924 0000005c W ImPool<ImGuiTable>::GetOrAddByKey(unsigned int)
0206d980 00000dc4 T ImGui::BeginTableEx(char const*, unsigned int, int, int, ImVec2 const&, float)
0206e744 00000078 T ImGui::BeginTable(char const*, int, int, ImVec2 const&, float)
0206e7bc 00000080 t ImTrunc(ImVec2 const&)
0206e83c 00000040 t ShrinkWidthItemComparer(void const*, void const*)
0206e87c 0000006c t CalcMaxPopupHeightFromItemCount(int)
0206e8e8 00000054 t InputTextCalcTextLenAndLineCount(char const*, char const**)
0206e93c 00000008 t ImStb::STB_TEXTEDIT_STRINGLEN(ImGuiInputTextState const*)
0206e944 00000014 t ImStb::STB_TEXTEDIT_KEYTOTEXT(int)
0206e958 000000ac t ImStb::is_separator(unsigned int)
0206ea04 0000007c t ImStb::stb_textedit_clamp(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0206ea80 0000001c t ImStb::stb_textedit_sortselection(ImStb::STB_TexteditState*)
0206ea9c 00000050 t ImStb::stb_textedit_move_to_first(ImStb::STB_TexteditState*)
0206eaec 0000006c t ImStb::stb_textedit_move_to_last(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0206eb58 00000028 t ImStb::stb_textedit_prep_selection_at_cursor(ImStb::STB_TexteditState*)
0206eb80 00000014 t ImStb::stb_textedit_flush_redo(ImStb::StbUndoState*)
0206eb94 0000005c t ImStb::stb_textedit_clear_state(ImStb::STB_TexteditState*, int)
0206ebf0 00000020 t ImStb::stb_textedit_initialize_state(ImStb::STB_TexteditState*, int)
0206ec10 00000070 t TabItemComparerBySection(void const*, void const*)
0206ec80 00000010 t TabItemComparerByBeginOrder(void const*, void const*)
0206ec90 00000028 t TabBarCalcScrollableWidth(ImGuiTabBar*, ImGuiTabBarSection*)
0206ecb8 0000001c t ImGui::TabBarCalcMaxTabWidth()
0206ecd4 00000040 t ImGui::TabBarScrollClamp(ImGuiTabBar*, float)
0206ed14 00000034 t int DataTypeCompareT<signed char>(signed char const*, signed char const*)
0206ed48 00000034 t int DataTypeCompareT<unsigned char>(unsigned char const*, unsigned char const*)
0206ed7c 00000034 t int DataTypeCompareT<short>(short const*, short const*)
0206edb0 00000034 t int DataTypeCompareT<unsigned short>(unsigned short const*, unsigned short const*)
0206ede4 0000002c t int DataTypeCompareT<int>(int const*, int const*)
0206ee10 0000002c t int DataTypeCompareT<unsigned int>(unsigned int const*, unsigned int const*)
0206ee3c 00000058 t int DataTypeCompareT<long long>(long long const*, long long const*)
0206ee94 00000050 t int DataTypeCompareT<unsigned long long>(unsigned long long const*, unsigned long long const*)
0206eee4 0000002c t int DataTypeCompareT<float>(float const*, float const*)
0206ef10 0000002c t int DataTypeCompareT<double>(double const*, double const*)
0206ef3c 0000006c t bool DataTypeClampT<signed char>(signed char*, signed char const*, signed char const*)
0206efa8 00000064 t bool DataTypeClampT<unsigned char>(unsigned char*, unsigned char const*, unsigned char const*)
0206f00c 00000064 t bool DataTypeClampT<short>(short*, short const*, short const*)
0206f070 00000064 t bool DataTypeClampT<unsigned short>(unsigned short*, unsigned short const*, unsigned short const*)
0206f0d4 0000005c t bool DataTypeClampT<int>(int*, int const*, int const*)
0206f130 0000005c t bool DataTypeClampT<unsigned int>(unsigned int*, unsigned int const*, unsigned int const*)
0206f18c 00000094 t bool DataTypeClampT<long long>(long long*, long long const*, long long const*)
0206f220 0000008c t bool DataTypeClampT<unsigned long long>(unsigned long long*, unsigned long long const*, unsigned long long const*)
0206f2ac 0000005c t bool DataTypeClampT<float>(float*, float const*, float const*)
0206f308 0000005c t bool DataTypeClampT<double>(double*, double const*, double const*)
0206f364 00000074 t char const* ImAtoi<int>(char const*, int*)
0206f3d8 0000008c t InputScalar_DefaultCharsFilter(int, char const*)
0206f464 000000d0 t ImStb::stb_textedit_discard_undo(ImStb::StbUndoState*)
0206f534 000000a0 t ImStb::stb_text_create_undo_record(ImStb::StbUndoState*, int)
0206f5d4 000000a0 t ImStb::stb_text_createundo(ImStb::StbUndoState*, int, int, int)
0206f674 0000002c t ImStb::stb_text_makeundo_insert(ImStb::STB_TexteditState*, int, int)
0206f6a0 0000014c t ImStb::stb_textedit_discard_redo(ImStb::StbUndoState*)
0206f7ec 000000bc t ImStb::STB_TEXTEDIT_DELETECHARS(ImGuiInputTextState*, int, int)
0206f8a8 00000084 t ImGui::TabBarCalcTabID(ImGuiTabBar*, char const*, ImGuiWindow*)
0206f92c 00000044 W ImGuiInputTextState::CursorClamp()
0206f970 00000058 W ImGuiTabItem::ImGuiTabItem()
0206f970 00000058 W ImGuiTabItem::ImGuiTabItem()
0206f9c8 00000578 T ImGui::TextEx(char const*, char const*, int)
0206ff40 00000064 T ImGui::TextV(char const*, __va_list_tag*)
0206ffa4 00000084 T ImGui::Text(char const*, ...)
02070028 00000054 T ImGui::TextColoredV(ImVec4 const&, char const*, __va_list_tag*)
0207007c 00000080 T ImGui::TextColored(ImVec4 const&, char const*, ...)
020700fc 000007cc T ImGui::ButtonBehavior(ImRect const&, unsigned int, bool*, bool*, int)
020708c8 0000031c T ImGui::ButtonEx(char const*, ImVec2 const&, int)
02070be4 00000024 T ImGui::Button(char const*, ImVec2 const&)
02070c08 000002bc T ImGui::ArrowButtonEx(char const*, int, ImVec2, int)
02070ec4 00000318 T ImGui::CloseButton(unsigned int, ImVec2 const&)
020711dc 00000290 T ImGui::CollapseButton(unsigned int, ImVec2 const&, ImGuiDockNode*)
0207146c 00000040 T ImGui::GetWindowScrollbarID(ImGuiWindow*, ImGuiAxis)
020714ac 00000164 T ImGui::GetWindowScrollbarRect(ImGuiWindow*, ImGuiAxis)
02071610 00000870 T ImGui::ScrollbarEx(ImRect const&, unsigned int, ImGuiAxis, long long*, long long, long long, int)
02071e80 000001a8 T ImGui::Scrollbar(ImGuiAxis)
02072028 000000a0 T ImGui::Dummy(ImVec2 const&)
020720c8 00000390 T ImGui::SeparatorEx(int, float)
02072458 00000068 T ImGui::Separator()
020724c0 000003a0 T ImGui::SplitterBehavior(ImRect const&, unsigned int, ImGuiAxis, float*, float*, float, float, float, float, unsigned int)
02072860 00000294 T ImGui::ShrinkWidths(ImGuiShrinkWidthItem*, int, float)
02072af4 000002c8 T ImGui::BeginComboPopup(unsigned int, ImRect const&, int)
02072dbc 00000768 T ImGui::BeginCombo(char const*, char const*, int)
02073524 00000020 T ImGui::EndCombo()
02073544 00000048 T ImGui::DataTypeGetInfo(int)
0207358c 000000ec T ImGui::DataTypeFormatString(char*, int, int, void const*, char const*)
02073678 000000b8 T ImGui::DataTypeCompare(int, void const*, void const*)
02073730 000000c0 T ImGui::DataTypeClamp(int, void*, void const*, void const*)
020737f0 00000034 T ImParseFormatFindStart(char const*)
02073824 00000088 T ImParseFormatFindEnd(char const*)
020738ac 00000098 T ImParseFormatTrimDecorations(char const*, char*, unsigned int)
02073944 000000b8 T ImParseFormatSanitizeForPrinting(char const*, char*, unsigned int)
020739fc 0000012c T ImParseFormatSanitizeForScanning(char const*, char*, unsigned int)
02073b28 0000021c T ImGui::DataTypeApplyFromText(char const*, int, void*, char const*)
02073d44 00000104 T ImParseFormatPrecision(char const*, int)
02073e48 00000028 T ImGuiInputTextCallbackData::ImGuiInputTextCallbackData()
02073e48 00000028 T ImGuiInputTextCallbackData::ImGuiInputTextCallbackData()
02073e70 00000360 t InputTextFilterCharacter(ImGuiContext*, unsigned int*, int, int (*)(ImGuiInputTextCallbackData*), void*, ImGuiInputSource)
020741d0 0000069c T ImGui::Selectable(char const*, bool, int, ImVec2 const&)
0207486c 000000a0 T ImGuiMenuColumns::CalcNextTotalWidth(bool)
0207490c 00000078 T ImGuiMenuColumns::Update(float, bool)
02074984 00000128 T ImGuiMenuColumns::DeclColumns(float, float, float, float)
02074aac 00000088 T ImGuiTabBar::ImGuiTabBar()
02074aac 00000088 T ImGuiTabBar::ImGuiTabBar()
02074b34 00000070 T ImGui::TabBarGetTabName(ImGuiTabBar*, ImGuiTabItem*)
02074ba4 0000000c T ImGui::TabBarQueueFocus(ImGuiTabBar*, ImGuiTabItem*)
02074bb0 00000074 T ImGui::TabBarCloseTab(ImGuiTabBar*, ImGuiTabItem*)
02074c24 0000007c T ImGui::TabBarQueueReorder(ImGuiTabBar*, ImGuiTabItem*, int)
02074ca0 000000dc T ImGui::TabItemCalcSize(char const*, bool)
02074d7c 00000048 T ImGui::TabItemCalcSize(ImGuiWindow*)
02074dc4 00000410 T ImGui::TabItemLabelAndCloseButton(ImDrawList*, ImRect const&, int, ImVec2, char const*, unsigned int, unsigned int, bool, bool*, bool*)
020751d4 00000050 W ImVector<float>::operator[](int) const
02075224 00000038 W ImFont::GetCharAdvance(unsigned short) const
0207525c 000001d0 t InputTextCalcTextSizeW(ImGuiContext*, unsigned short const*, unsigned short const*, unsigned short const**, ImVec2*, bool)
0207542c 00000098 t ImStb::STB_TEXTEDIT_LAYOUTROW(ImStb::StbTexteditRow*, ImGuiInputTextState*, int)
020754c4 0000017c t ImStb::is_word_boundary_from_right(ImGuiInputTextState*, int)
02075640 0000006c t ImStb::STB_TEXTEDIT_MOVEWORDLEFT_IMPL(ImGuiInputTextState*, int)
020756ac 00000074 t ImStb::STB_TEXTEDIT_MOVEWORDRIGHT_WIN(ImGuiInputTextState*, int)
02075720 00000168 t ImStb::is_word_boundary_from_left(ImGuiInputTextState*, int)
02075888 00000074 t ImStb::STB_TEXTEDIT_MOVEWORDRIGHT_MAC(ImGuiInputTextState*, int)
020758fc 00000038 t ImStb::STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(ImGuiInputTextState*, int)
02075934 00000074 t ImStb::STB_TEXTEDIT_GETWIDTH(ImGuiInputTextState*, int, int)
020759a8 00000050 W ImVector<unsigned short>::operator[](int) const
020759f8 00000054 t ImStb::STB_TEXTEDIT_GETCHAR(ImGuiInputTextState const*, int)
02075a4c 000000a0 t ImStb::stb_text_makeundo_replace(ImGuiInputTextState*, ImStb::STB_TexteditState*, int, int, int)
02075aec 000001ac t ImStb::stb_textedit_find_charpos(ImStb::StbFindState*, ImGuiInputTextState*, int, int)
02075c98 000000a0 t ImStb::stb_text_makeundo_delete(ImGuiInputTextState*, ImStb::STB_TexteditState*, int, int)
02075d38 00000068 t ImStb::stb_textedit_delete(ImGuiInputTextState*, ImStb::STB_TexteditState*, int, int)
02075da0 00000094 t ImStb::stb_textedit_delete_selection(ImGuiInputTextState*, ImStb::STB_TexteditState*)
02075e34 00000050 t ImStb::stb_textedit_cut(ImGuiInputTextState*, ImStb::STB_TexteditState*)
02075e84 000001ac t ImStb::stb_text_locate_coord(ImGuiInputTextState*, float, float)
02076030 00000084 t ImStb::stb_textedit_click(ImGuiInputTextState*, ImStb::STB_TexteditState*, float, float)
020760b4 00000094 t ImStb::stb_textedit_drag(ImGuiInputTextState*, ImStb::STB_TexteditState*, float, float)
02076148 00000060 W ImVector<char>::reserve_discard(int)
020761a8 0000019c t InputTextReconcileUndoStateAfterUserCallback(ImGuiInputTextState*, char const*, int)
02076344 000000b8 T ImGui::InputTextDeactivateHook(unsigned int)
020763fc 000000d0 t IsRootOfOpenMenuSet()
020764cc 0000068c T ImGui::MenuItemEx(char const*, char const*, char const*, bool, bool)
02076b58 00000030 T ImGui::MenuItem(char const*, char const*, bool, bool)
02076b88 00000064 W ImPool<ImGuiTabBar>::GetIndex(ImGuiTabBar const*) const
02076bec 00000060 t GetTabBarRefFromTabBar(ImGuiTabBar*)
02076c4c 00000044 W ImVector<ImGuiPtrOrIndex>::pop_back()
02076c90 00000050 W ImVector<ImGuiPtrOrIndex>::back()
02076ce0 000001c8 t ImGui::TabBarTabListPopupButton(ImGuiTabBar*)
02076ea8 0000009c T ImGui::TabBarFindTabByID(ImGuiTabBar*, unsigned int)
02076f44 00000188 t ImGui::TabBarScrollToTab(ImGuiTabBar*, unsigned int, ImGuiTabBarSection*)
020770cc 000002cc t ImGui::TabBarScrollingButtons(ImGuiTabBar*)
02077398 0000009c T ImGui::TabBarFindMostRecentlySelectedTabForActiveWindow(ImGuiTabBar*)
02077434 00000204 T ImGui::TabBarQueueReorderFromMousePos(ImGuiTabBar*, ImGuiTabItem*, ImVec2)
02077638 00000164 T ImGui::TabBarProcessReorder(ImGuiTabBar*)
0207779c 00000050 W ImVector<ImGuiShrinkWidthItem>::operator[](int)
020777ec 000000b4 W ImVector<ImGuiTabItem>::erase(ImGuiTabItem const*)
020778a0 00000090 T ImGui::TabBarRemoveTab(ImGuiTabBar*, unsigned int)
02077930 000002ac T ImGui::TabItemBackground(ImDrawList*, ImRect const&, int, unsigned int)
02077bdc 000003f8 W float ImGui::ScaleRatioFromValueT<int, int, float>(int, int, int, int, bool, float, float)
02077fd4 00000414 W int ImGui::ScaleValueFromRatioT<int, int, float>(int, float, int, int, bool, float, float)
020783e8 000000c4 W int ImGui::RoundScalarWithFormatT<int>(char const*, int, int)
020784ac 00000938 W bool ImGui::SliderBehaviorT<int, int, float>(ImRect const&, unsigned int, int, int*, int, int, char const*, int, ImRect*)
02078de4 000001f0 W float ImGui::ScaleRatioFromValueT<unsigned int, int, float>(int, unsigned int, unsigned int, unsigned int, bool, float, float)
02078fd4 0000026c W unsigned int ImGui::ScaleValueFromRatioT<unsigned int, int, float>(int, float, unsigned int, unsigned int, bool, float, float)
02079240 000000fc W unsigned int ImGui::RoundScalarWithFormatT<unsigned int>(char const*, int, unsigned int)
0207933c 00000930 W bool ImGui::SliderBehaviorT<unsigned int, int, float>(ImRect const&, unsigned int, int, unsigned int*, unsigned int, unsigned int, char const*, int, ImRect*)
02079c6c 00000554 W float ImGui::ScaleRatioFromValueT<long long, long long, double>(int, long long, long long, long long, bool, float, float)
0207a1c0 00000514 W long long ImGui::ScaleValueFromRatioT<long long, long long, double>(int, float, long long, long long, bool, float, float)
0207a6d4 000000d4 W long long ImGui::RoundScalarWithFormatT<long long>(char const*, int, long long)
0207a7a8 00000978 W bool ImGui::SliderBehaviorT<long long, long long, double>(ImRect const&, unsigned int, int, long long*, long long, long long, char const*, int, ImRect*)
0207b120 00000290 W float ImGui::ScaleRatioFromValueT<unsigned long long, long long, double>(int, unsigned long long, unsigned long long, unsigned long long, bool, float, float)
0207b3b0 00000270 W unsigned long long ImGui::ScaleValueFromRatioT<unsigned long long, long long, double>(int, float, unsigned long long, unsigned long long, bool, float, float)
0207b620 000000d4 W unsigned long long ImGui::RoundScalarWithFormatT<unsigned long long>(char const*, int, unsigned long long)
0207b6f4 00000974 W bool ImGui::SliderBehaviorT<unsigned long long, long long, double>(ImRect const&, unsigned int, int, unsigned long long*, unsigned long long, unsigned long long, char const*, int, ImRect*)
0207c068 00000318 W float ImGui::ScaleRatioFromValueT<float, float, float>(int, float, float, float, bool, float, float)
0207c380 000002cc W float ImGui::ScaleValueFromRatioT<float, float, float>(int, float, float, float, bool, float, float)
0207c64c 000000b8 W float ImGui::RoundScalarWithFormatT<float>(char const*, int, float)
0207c704 000008e0 W bool ImGui::SliderBehaviorT<float, float, float>(ImRect const&, unsigned int, int, float*, float, float, char const*, int, ImRect*)
0207cfe4 00000350 W float ImGui::ScaleRatioFromValueT<double, double, double>(int, double, double, double, bool, float, float)
0207d334 000002bc W double ImGui::ScaleValueFromRatioT<double, double, double>(int, float, double, double, bool, float, float)
0207d5f0 000000b8 W double ImGui::RoundScalarWithFormatT<double>(char const*, int, double)
0207d6a8 000008e4 W bool ImGui::SliderBehaviorT<double, double, double>(ImRect const&, unsigned int, int, double*, double, double, char const*, int, ImRect*)
0207df8c 000003e0 T ImGui::SliderBehavior(ImRect const&, unsigned int, int, void*, void const*, void const*, char const*, int, ImRect*)
0207e36c 000001e0 t ImStb::STB_TEXTEDIT_INSERTCHARS(ImGuiInputTextState*, int, unsigned short const*, int)
0207e54c 00000204 t ImStb::stb_text_undo(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0207e750 000001cc t ImStb::stb_text_redo(ImGuiInputTextState*, ImStb::STB_TexteditState*)
0207e91c 00000d04 t ImStb::stb_textedit_key(ImGuiInputTextState*, ImStb::STB_TexteditState*, int)
0207f620 00000048 T ImGuiInputTextState::OnKeyPressed(int)
0207f668 000000a8 t ImStb::stb_textedit_paste_internal(ImGuiInputTextState*, ImStb::STB_TexteditState*, unsigned short*, int)
0207f710 00000020 t ImStb::stb_textedit_paste(ImGuiInputTextState*, ImStb::STB_TexteditState*, unsigned short const*, int)
0207f730 000000d4 t ImStb::stb_textedit_replace(ImGuiInputTextState*, ImStb::STB_TexteditState*, unsigned short const*, int)
0207f804 00003490 T ImGui::InputTextEx(char const*, char const*, char*, int, ImVec2 const&, int, int (*)(ImGuiInputTextCallbackData*), void*)
02082c94 00000130 T ImGui::TempInputText(ImRect const&, unsigned int, char const*, char*, int, int)
02082dc4 000001b8 T ImGui::TempInputScalar(ImRect const&, unsigned int, char const*, int, void*, char const*, void const*, void const*)
02082f7c 00000680 T ImGui::SliderScalar(char const*, int, void*, void const*, void const*, char const*, int)
020835fc 00000040 T ImGui::SliderFloat(char const*, float*, float, float, char const*, int)
0208363c 00000040 t GetTabBarFromTabBarRef(ImGuiPtrOrIndex const&)
0208367c 0000007c W ImVector<ImGuiPtrOrIndex>::reserve(int)
020836f8 000000a8 W ImVector<ImGuiPtrOrIndex>::push_back(ImGuiPtrOrIndex const&)
020837a0 000002d0 T ImGui::BeginTabBarEx(ImGuiTabBar*, ImRect const&, int)
02083a70 0000007c W ImVector<ImGuiTabItem>::reserve(int)
02083aec 00000074 W ImVector<ImGuiTabItem>::resize(int)
02083b60 000000a4 W ImVector<ImGuiTabItem>::push_back(ImGuiTabItem const&)
02083c04 00000100 T ImGui::TabBarAddTab(ImGuiTabBar*, int, ImGuiWindow*)
02083d04 0000007c W ImVector<ImGuiShrinkWidthItem>::reserve(int)
02083d80 00000074 W ImVector<ImGuiShrinkWidthItem>::resize(int)
02083df4 00000c08 t ImGui::TabBarLayout(ImGuiTabBar*)
020849fc 00000168 T ImGui::EndTabBar()
02084b64 00000f58 T ImGui::TabItemEx(ImGuiTabBar*, char const*, bool*, int, ImGuiWindow*)
02085abc 00000030 t ImGui_ImplGX2_GetBackendData()
02085aec 000001d4 t ImGui_ImplGX2_SetupRenderState(ImDrawData*, int, int)
02085d50 0000009c T ImGui_ImplGX2_Init()
02085dec 000001e0 T ImGui_ImplGX2_CreateFontsTexture()
0208601c 00000028 W void IM_DELETE<ImGui_ImplGX2_Data>(ImGui_ImplGX2_Data*)
02086044 00000050 W ImVector<ImDrawCmd>::operator[](int) const
02086094 00000544 T ImGui_ImplGX2_RenderDrawData(ImDrawData*)
02086638 00000028 W void IM_DELETE<GX2Texture>(GX2Texture*)
02086660 00000028 W void IM_DELETE<GX2Sampler>(GX2Sampler*)
02086688 00000028 W void IM_DELETE<ImGui_ImplGX2_Texture>(ImGui_ImplGX2_Texture*)
020866b0 00000084 T ImGui_ImplGX2_DestroyFontsTexture()
02086744 00000028 W void IM_DELETE<WHBGfxShaderGroup>(WHBGfxShaderGroup*)
0208676c 000000fc T ImGui_ImplGX2_CreateDeviceObjects()
02086868 0000005c T ImGui_ImplGX2_NewFrame()
020868c4 00000068 T ImGui_ImplGX2_DestroyDeviceObjects()
0208692c 00000078 T ImGui_ImplGX2_Shutdown()
020869a4 00000030 t ImGui_ImplWiiU_GetBackendData()
020869d4 00000140 t ImGui_ImplWiiU_UpdateTouchInput(ImGui_ImplWiiU_ControllerInput*)
02086b24 0000095c t ImGui_ImplWiiU_UpdateControllerInput(ImGui_ImplWiiU_ControllerInput*)
02087480 00000068 W nn::swkbd::ConfigArg::ConfigArg()
02087480 00000068 W nn::swkbd::ConfigArg::ConfigArg()
020874e8 00000078 W nn::swkbd::AppearArg::AppearArg()
020874e8 00000078 W nn::swkbd::AppearArg::AppearArg()
02087560 00000058 W ImGui_ImplWiiU_Data::ImGui_ImplWiiU_Data()
02087560 00000058 W ImGui_ImplWiiU_Data::ImGui_ImplWiiU_Data()
020875b8 00000148 T ImGui_ImplWiiU_Init()
02087710 000000ac T ImGui_ImplWiiU_DrawKeyboardOverlay(ImGui_ImplWiiU_KeyboardOverlayType)
020877bc 00000068 W ImGuiInputTextState::ClearText()
02087824 00000168 t ImGui_ImplWiiU_UpdateKeyboardInput(ImGui_ImplWiiU_ControllerInput*)
0208799c 0000014c T ImGui_ImplWiiU_ProcessInput(ImGui_ImplWiiU_ControllerInput*)
02087ae8 00000028 W void IM_DELETE<ImGui_ImplWiiU_Data>(ImGui_ImplWiiU_Data*)
02087b10 000000ac T ImGui_ImplWiiU_Shutdown()
02087bcc 00000070 W RootTask* rio::TaskMgr::createTask<RootTask>()
02087c3c 00000080 W bool rio::Initialize<RootTask>(rio::InitializeArg const&)
02087ccc 00000048 T main
02087d14 000000a4 T Model::Model()
02087d14 000000a4 T Model::Model()
02087db8 00000040 T Model::~Model()
02087db8 00000040 T Model::~Model()
02087df8 0000002c T Model::initialize_(FFLCharModelDesc const*)
02087e24 00000080 T Model::updateMtxSRT_()
02087ea4 00000098 T Model::setViewUniform_(rio::BaseMtx34<float> const&, rio::BaseMtx34<float> const&, rio::BaseMtx44<float> const&)
02087f4c 000000c0 T Model::drawOpaNormal_()
0208801c 00000098 T Model::drawOpaSpecial_()
020880c4 00000058 T Model::drawOpa(rio::BaseMtx34<float> const&, rio::BaseMtx44<float> const&)
0208811c 000000c8 T Model::drawXluNormal_()
020881f4 00000160 T Model::drawXluSpecial_()
02088364 00000060 T Model::drawXlu(rio::BaseMtx34<float> const&, rio::BaseMtx44<float> const&)
020883c4 00000030 T Model::initializeCpu_()
020883f4 0000004c T Model::initializeGpu_(Shader const&)
02088440 00000030 T Model::setCharModelSource_(FFLMiddleDB const*, unsigned short)
02088470 00000048 W RootTask::~RootTask()
02088470 00000048 W RootTask::~RootTask()
020884b8 00000054 W RootTask::~RootTask()
0208850c 00000124 T RootTask::exit_()
02088630 000000b4 T RootTask::RootTask()
02088630 000000b4 T RootTask::RootTask()
020886e4 00000118 T RootTask::initImgui()
020887fc 000000dc T RootTask::updateProjectionMatrix()
020888d8 00000058 W unsigned int std::__detail::__to_chars_len<unsigned int>(unsigned int, int)
02088930 000000dc W void std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)
02088a0c 000000ac W bool Model::initialize<FFLMiddleDB>(Model::InitArg<FFLMiddleDB> const&, Shader const&)
02088ac8 000000e8 T RootTask::createModel_(unsigned short)
02088bb0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(unsigned int, char, std::allocator<char> const&)
02088bb0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(unsigned int, char, std::allocator<char> const&)
02088bd8 000000a0 W std::__cxx11::to_string(int)
02088c78 00000414 T RootTask::Render()
0208908c 00000114 T RootTask::calc_()
020891b0 000002f8 T RootTask::prepare_()
020894d8 00000004 t (anonymous namespace)::getColorUniform(FFLColor const&)
020894dc 0000017c t (anonymous namespace)::safeNormalizeVec3(rio::BaseVec3<float>*)
02089658 00000134 t (anonymous namespace)::gramSchmidtOrthonormalizeMtx34(rio::BaseMtx34<float>*)
0208978c 00000118 T Shader::Shader()
0208978c 00000118 T Shader::Shader()
020898a4 00000050 T Shader::~Shader()
020898a4 00000050 T Shader::~Shader()
020898f4 000003a0 T Shader::initialize()
02089cb4 000000dc T Shader::bind(bool) const
02089da0 00000028 T Shader::applyAlphaTest(bool, rio::Graphics::CompareFunc, float) const
02089dd8 00000020 T Shader::applyAlphaTestCallback_(void*, bool, rio::Graphics::CompareFunc, float)
02089df8 00000078 T Shader::setCulling(FFLCullMode)
02089e70 00000058 T Shader::bindTexture_(FFLModulateParam const&)
02089ec8 0000003c T Shader::setConstColor_(unsigned int, FFLColor const&)
02089f04 00000030 T Shader::setModulateMode_(FFLModulateMode)
02089f34 000000b4 T Shader::setModulate_(FFLModulateParam const&)
02089fe8 000000f4 T Shader::setMaterial_(FFLDrawParam const&)
0208a0dc 000000e0 T Shader::draw_(FFLDrawParam const&)
0208a1dc 00000020 T Shader::drawCallback_(void*, FFLDrawParam const&)
0208a1fc 00000060 T Shader::setMatrix_(rio::BaseMtx44<float> const&)
0208a25c 00000020 T Shader::setMatrixCallback_(void*, rio::BaseMtx44<float> const&)
0208a27c 00000170 W rio::Matrix34<float>::setInverseTranspose(rio::Matrix34<float> const&)
0208a3ec 0000011c T Shader::setViewUniform(rio::BaseMtx34<float> const&, rio::BaseMtx34<float> const&, rio::BaseMtx44<float> const&) const
0208a508 00000054 T getCafeVPADDevice(ImGui_ImplWiiU_ControllerInput*)
0208a55c 00000088 T getCafeKPADDevice(ImGui_ImplWiiU_ControllerInput*)
0208a5e4 00000128 T useFlyCam(rio::LookAtCamera*, rio::Controller*)
0208a70c 00000028 t __static_initialization_and_destruction_1()
0208a734 00000034 t __static_initialization_and_destruction_0()
0208a768 00000028 W std::__new_allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> > >::deallocate(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> >*, unsigned int)
0208a790 0000004c W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> > >::_M_drop_node(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> >*)
0208a7dc 00000068 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> >*)
0208a844 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> > >::~_Rb_tree()
0208a844 00000024 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, ImGuiStyle> > >::~_Rb_tree()
0208a868 00000038 T ThemeMgr::~ThemeMgr()
0208a868 00000038 T ThemeMgr::~ThemeMgr()
0208a8a0 00000054 T ThemeMgr::destroySingleton()
0208a8f4 00000020 t _GLOBAL__sub_I__ZN8ThemeMgr9sInstanceE
0208a914 00000020 t _GLOBAL__sub_D__ZN8ThemeMgr9sInstanceE
0208a934 00000048 W __init_wut
0208a97c 00000038 W __fini_wut
0208a9b4 00000028 W __preinit_user
0208a9dc 0000000c T __wut_malloc_lock
0208a9f8 0000000c T __wut_malloc_unlock
0208aa14 0000000c T __init_wut_malloc_lock
0208aa30 00000034 T __wut__abort
0208aa84 00000150 T __wut__assert_func
0208ac04 00000004 T _sbrk_r
0208ac08 00000008 T __syscall_lock_init
0208ac10 00000004 T __syscall_lock_acquire
0208ac14 00000004 T __syscall_lock_release
0208ac18 00000004 T __syscall_lock_close
0208ac1c 00000008 T __syscall_lock_init_recursive
0208ac24 00000004 T __syscall_malloc_lock
0208ac28 00000004 T __syscall_malloc_unlock
0208ac2c 00000004 T __syscall_getreent
0208ac30 0000003c T __syscall_exit
0208ac6c 00000010 T __syscall_abort
0208ac7c 00000010 T __syscall_assert_func
0208ac8c 00000014 T __init_wut_newlib
0208aca0 00000004 T __fini_wut_newlib
0208aca4 000000a8 t __wut_thread_cleanup
0208ad4c 00000104 T __wut_getreent
0208ae70 000000c8 T __wut_sbrk_r
0208af48 00000088 T __init_wut_sbrk_heap
0208aff0 00000060 T __fini_wut_sbrk_heap
0208b060 00000008 W wut_set_thread_specific
0208b078 00000008 W wut_get_thread_specific
0208b090 00000004 T __wut_alloc_from_defaultheap
0208b094 00000010 T __wut_alloc_from_defaultheap_ex
0208b0a4 00000004 T __wut_free_to_defaultheap
0208b0a8 00000034 T __init_wut_defaultheap
0208b0dc 00000044 t crashReportThread
0208b120 000000c4 t disassemblyPrintCallback
0208b1e4 000000c4 t writeRegister
0208b2a8 00000594 t handleException
0208b8cc 00000010 t handleProgram
0208b8dc 00000010 t handleISI
0208b8ec 00000010 t handleDSI
0208b8fc 00000010 t handleAlignment
0208b90c 00000070 T WHBInitCrashHandler
0208b98c 0000024c T WHBGfxLoadGFDPixelShader
0208bc28 0000004c T WHBGfxFreePixelShader
0208bc84 0000024c T WHBGfxLoadGFDVertexShader
0208bf20 0000004c T WHBGfxFreeVertexShader
0208bf7c 0000021c T WHBGfxInitShaderAttribute
0208c198 00000080 T WHBGfxInitFetchShader
0208c248 000000b4 T WHBGfxFreeShaderGroup
0208c30c 000000ac T WHBGfxLoadGFDShaderGroup
0208c3b8 00000070 T WHBAddLogHandler
0208c428 00000068 T WHBRemoveLogHandler
0208c490 000000f0 T WHBLogPrint
0208c580 000001bc T WHBLogPrintf
0208c73c 00000068 t cafeLogHandler
0208c7b4 0000000c T WHBLogCafeInit
0208c7c0 0000000c T WHBLogCafeDeinit
0208c7cc 0000004c t udpLogHandler
0208c818 000000c4 T WHBLogUdpInit
0208c8fc 0000004c T WHBLogUdpDeinit
0208c948 00000094 t setLastError
0208c9dc 000000c4 t _GFDCheckHeaderVersions
0208caa0 00000478 t _GFDGetGenericBlock
0208cf18 000000f4 t _GFDGetBlockCount.part.0
0208d00c 0000011c t _GFDGetBlockDataSize
0208d128 00000058 T GFDGetPixelShaderCount
0208d180 00000010 T GFDGetPixelShaderHeaderSize
0208d190 00000010 T GFDGetPixelShaderProgramSize
0208d1a0 00000058 T GFDGetPixelShader
0208d1f8 00000058 T GFDGetVertexShaderCount
0208d250 00000010 T GFDGetVertexShaderHeaderSize
0208d260 00000010 T GFDGetVertexShaderProgramSize
0208d270 00000048 T GFDGetVertexShader
0208d2b8 00000008 T __gthr_impl_active
0208d2c0 00000004 T __gthr_impl_once
0208d2c4 00000030 T __gthr_impl_key_delete
0208d2f4 00000030 T __gthr_impl_getspecific
0208d324 00000030 T __gthr_impl_setspecific
0208d354 00000004 T __gthr_impl_mutex_init_function
0208d358 00000004 T __gthr_impl_mutex_destroy
0208d35c 00000004 T __gthr_impl_mutex_lock
0208d360 00000004 T __gthr_impl_mutex_unlock
0208d364 00000004 T __gthr_impl_recursive_mutex_init_function
0208d368 00000004 T __gthr_impl_recursive_mutex_lock
0208d36c 00000004 T __gthr_impl_recursive_mutex_unlock
0208d370 00000004 T __gthr_impl_cond_init_function
0208d374 00000004 T __gthr_impl_cond_broadcast
0208d378 00000004 T __gthr_impl_cond_wait_recursive
0208d37c 00000004 T __init_wut_stdcpp
0208d380 00000004 T __fini_wut_stdcpp
0208d384 0000006c T __wut_key_delete(__wut_key_t)
0208d3f0 00000074 T __wut_getspecific(__wut_key_t)
0208d464 00000088 T __wut_setspecific(__wut_key_t, void const*)
0208d4ec 00000004 T __wut_mutex_init_function(OSMutex*)
0208d500 00000024 T __wut_mutex_lock(OSMutex*)
0208d534 00000024 T __wut_mutex_unlock(OSMutex*)
0208d568 00000008 T __wut_mutex_destroy(OSMutex*)
0208d570 000000ac T __wut_once(unsigned int volatile*, void (*)())
0208d64c 00000024 T __wut_recursive_mutex_init_function(OSMutex*)
0208d680 00000024 T __wut_recursive_mutex_lock(OSMutex*)
0208d6b4 00000024 T __wut_recursive_mutex_unlock(OSMutex*)
0208d6e8 000001d0 T __init_wut_devoptab
0208d908 0000008c T __fini_wut_devoptab
0208d9b4 000000a0 T __wut_fsa_dirclose
0208da84 000001ac T __wut_fsa_dirnext
0208dc60 00000168 T __wut_fsa_diropen
0208de08 000000a0 T __wut_fsa_dirreset
0208ded8 000000d4 T __wut_fsa_fstat
0208dfdc 0000009c T __wut_fsa_fsync
0208e0a8 000000e0 T __wut_fsa_mkdir
0208e198 000004a4 T __wut_fsa_open
0208e6ac 000001b4 T __wut_fsa_read
0208e890 00000114 T __wut_fsa_rename
0208e9b4 000000c4 T __wut_fsa_rmdir
0208ea88 00000184 T __wut_fsa_seek
0208ec4c 00000118 T __wut_fsa_stat
0208ed74 00000168 T __wut_fsa_statvfs
0208eeec 000000c8 T __wut_fsa_ftruncate
0208eff4 000000c4 T __wut_fsa_unlink
0208f0c8 00000040 T __wut_fsa_hashstring
0208f108 0000035c T __wut_fsa_fixpath
0208f464 00000080 T __wut_fsa_translate_stat_mode
0208f4e4 00000144 T __wut_fsa_translate_stat
0208f628 00000028 T __wut_fsa_translate_error
0208f650 000001d4 T __wut_fsa_write
0208f854 00000070 t nn::swkbd::allocForDynLoad(int, int, void**)
0208f8d4 00000010 t nn::swkbd::freeForDynLoad(void*)
0208f8f4 00000610 T nn::swkbd::Create(nn::swkbd::CreateArg const&)
0208ffa4 00000010 T nn::swkbd::AppearInputForm(nn::swkbd::AppearArg const&)
0208ffb4 00000010 T nn::swkbd::CalcSubThreadFont()
0208ffc4 00000010 T nn::swkbd::CalcSubThreadPredict()
0208ffd4 00000010 T nn::swkbd::Calc(nn::swkbd::ControllerInfo const&)
0208ffe4 0000006c T nn::swkbd::Destroy()
02090070 00000010 T nn::swkbd::DisappearInputForm()
02090080 00000010 T nn::swkbd::DrawDRC()
02090090 00000010 T nn::swkbd::DrawTV()
020900a0 00000010 T nn::swkbd::GetInputFormString()
020900b0 00000010 T nn::swkbd::GetStateInputForm()
020900c0 00000008 T nn::swkbd::GetWorkMemorySize(unsigned int)
020900c8 00000010 T nn::swkbd::IsDecideCancelButton(bool*)
020900d8 00000010 T nn::swkbd::IsDecideOkButton(bool*)
020900e8 00000010 T nn::swkbd::IsNeedCalcSubThreadFont()
020900f8 00000010 T nn::swkbd::IsNeedCalcSubThreadPredict()
02090108 000000cc T __wut_lock_init
020901f4 000000c0 T __wut_lock_close
020902c4 00000054 T __wut_lock_acquire
02090328 00000054 T __wut_lock_release
0209038c 000000a8 T sendto
02090444 00000094 T setsockopt
020904e8 00000058 T shutdown
02090550 000000d0 T socket
02090630 00000038 W __init_wut_socket
020906a8 00000030 W __fini_wut_socket
02090708 0000008c T __wut_get_nsysnet_fd
02090794 00000088 T __wut_get_nsysnet_result
0209082c 00000010 T __wut_socket_open
0209083c 00000044 T __wut_socket_read
02090890 00000044 T __wut_socket_write
020908e4 0000001c T GfxHeapAllocMEM2
02090900 00000010 T GfxHeapFreeMEM2
02090910 00000004 T __wut_cond_init_function(OSCondition*)
02090924 00000024 T __wut_cond_broadcast(OSCondition*)
02090958 00000024 T __wut_cond_wait_recursive(OSCondition*, OSMutex*)
0209098c 00000120 T __wut_fsa_chdir
02090abc 000000e0 T __wut_fsa_chmod
02090bac 0000009c T __wut_fsa_close
02090c78 00000038 T __wut_socket_close
02090cc0 0000017c t updatewindow
02090e3c 0000005c t inflateStateCheck
02090e98 000000b8 T inflateResetKeep
02090f50 00000114 T inflateReset2
02091064 00000144 T inflateInit2_
020911a8 00001f40 T inflate
020930e8 00000088 T inflateEnd
02093170 00000640 T inflate_table
020937b0 00000008 T zcalloc
020937b8 00000008 T zcfree
020937c0 000003ec T adler32_z
02093bac 00000004 T adler32
02093bb0 00000444 T crc32_z
02093ff4 00000004 T crc32
02093ff8 0000070c T inflate_fast
02094704 0000007c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
02094780 00000018 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
02094798 00000010 T __cxxabiv1::__class_type_info::~__class_type_info()
02094798 00000010 T __cxxabiv1::__class_type_info::~__class_type_info()
020947a8 00000040 T __cxxabiv1::__class_type_info::~__class_type_info()
020947e8 00000094 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0209487c 00000104 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
02094980 00000138 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
02094ab8 00000004 T operator delete(void*)
02094abc 00000004 T operator delete(void*, unsigned int)
02094ac0 00000004 T operator delete[](void*)
02094ac4 000000c4 T __cxa_begin_catch
02094b88 000000c0 T __cxa_end_catch
02094c48 00000068 t eh_globals_dtor(void*)
02094cb0 0000004c T __cxa_get_globals_fast
02094cfc 000000bc T __cxa_get_globals
02094db8 000000a0 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
02094e58 0000013c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
02094f94 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
02094ffc 0000011c t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
02095118 00000138 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
02095250 000007a4 T __gxx_personality_v0
020959f4 000000f8 T __cxa_call_unexpected
02095aec 00000020 T __cxxabiv1::__terminate(void (*)())
02095b0c 00000024 T std::terminate()
02095b30 00000018 T __cxxabiv1::__unexpected(void (*)())
02095b48 00000024 T std::unexpected()
02095b6c 00000018 T std::get_terminate()
02095b84 00000018 T std::get_unexpected()
02095b9c 0000008c t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
02095c28 00000070 T __cxa_init_primary_exception
02095c98 00000068 T __cxa_throw
02095d00 0000008c T __cxa_rethrow
02095d8c 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
02095d98 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
02095da4 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
02095db0 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
02095dbc 00000010 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
02095dbc 00000010 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
02095dcc 00000040 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
02095e0c 00000010 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
02095e0c 00000010 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
02095e1c 00000040 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
02095e5c 00000010 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
02095e5c 00000010 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
02095e6c 00000040 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
02095eac 00000010 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
02095eac 00000010 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
02095ebc 00000040 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
02095efc 00000064 t (anonymous namespace)::init_static_cond()
02095f60 00000064 t (anonymous namespace)::init()
02095fc4 00000264 T __cxa_guard_acquire
02096228 00000118 T __cxa_guard_release
02096340 00000010 T __gnu_cxx::recursive_init_error::~recursive_init_error()
02096340 00000010 T __gnu_cxx::recursive_init_error::~recursive_init_error()
02096350 00000040 T __gnu_cxx::recursive_init_error::~recursive_init_error()
02096390 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
02096390 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
020963a0 00000080 T operator new(unsigned int)
02096420 00000004 T operator new[](unsigned int)
02096424 00000010 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
02096424 00000010 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
02096434 00000040 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
02096474 000001d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
02096648 000000b4 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
020966fc 00000094 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
02096790 00000004 T std::type_info::~type_info()
02096790 00000004 T std::type_info::~type_info()
02096794 00000008 T std::type_info::__is_pointer_p() const
02096794 00000008 T std::type_info::__is_function_p() const
0209679c 00000010 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0209679c 00000010 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
020967ac 00000040 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
020967ec 00000188 T __cxxabiv1::__vmi_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
02096974 00000748 T __cxxabiv1::__vmi_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
020970bc 000002f8 T __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
020973b4 0000006c T std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
02097420 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
02097488 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
020974a0 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0209756c 00000020 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
0209758c 00000148 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
020976d4 0000015c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
02097830 000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
02097830 000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
020978e0 0000014c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
02097a2c 000000d8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
02097b04 000001b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
02097cb4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned int, char)
02097cec 00000234 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
02097f20 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
02097fa4 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
020980a4 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
020980d8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
02098144 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
02098268 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int) const
020982c0 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char, unsigned int) const
02098330 000000d4 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
02098404 00000040 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02098404 00000040 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
02098444 000000b4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
020984f8 0000000c T std::bad_alloc::what() const
02098504 00000010 T std::bad_alloc::~bad_alloc()
02098504 00000010 T std::bad_alloc::~bad_alloc()
02098514 00000040 T std::bad_alloc::~bad_alloc()
02098554 0000000c T std::bad_array_new_length::what() const
02098560 00000010 T std::bad_array_new_length::~bad_array_new_length()
02098560 00000010 T std::bad_array_new_length::~bad_array_new_length()
02098570 00000040 T std::bad_array_new_length::~bad_array_new_length()
020985b0 00000144 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
020986f4 000000fc t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
020987f0 00000064 T __cxa_allocate_exception
02098854 00000030 T __cxa_free_exception
02098884 00000058 T __cxa_call_terminate
020988dc 00000004 T std::exception::~exception()
020988dc 00000004 T std::exception::~exception()
020988e0 00000004 T std::bad_exception::~bad_exception()
020988e0 00000004 T std::bad_exception::~bad_exception()
020988e4 0000000c T transaction clone for std::exception::what() const
020988e4 0000000c T std::exception::what() const
020988f0 0000000c T transaction clone for std::bad_exception::what() const
020988f0 0000000c T std::bad_exception::what() const
020988fc 00000008 T std::bad_exception::~bad_exception()
02098904 00000018 T std::get_new_handler()
0209891c 00000008 T std::logic_error::what() const
0209891c 00000008 T std::runtime_error::what() const
02098924 000000c8 T std::out_of_range::~out_of_range()
020989ec 000000cc T std::length_error::~length_error()
020989ec 000000cc T std::length_error::~length_error()
02098ab8 000000cc T std::logic_error::~logic_error()
02098ab8 000000cc T std::logic_error::~logic_error()
02098b84 000000cc T std::out_of_range::~out_of_range()
02098b84 000000cc T std::out_of_range::~out_of_range()
02098c50 000000c8 T std::logic_error::~logic_error()
02098d18 000000c8 T std::length_error::~length_error()
02098de0 00000118 T std::logic_error::logic_error(char const*)
02098de0 00000118 T std::logic_error::logic_error(char const*)
02098ef8 00000038 T std::length_error::length_error(char const*)
02098ef8 00000038 T std::length_error::length_error(char const*)
02098f30 00000038 T std::out_of_range::out_of_range(char const*)
02098f30 00000038 T std::out_of_range::out_of_range(char const*)
02098f68 000000ac W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
02099014 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
02099018 00000078 T fmodf
02099090 000000e0 T sin
02099170 00000114 T ceilf
02099284 00000158 T pow
020993dc 00000078 T fminf
02099454 00000084 T logf
020994d8 000003e8 T __ieee754_rem_pio2
020998c0 00000088 T acosf
02099948 00000110 T floorf
02099a58 00000200 T __ieee754_fmodf
02099c58 00000eb0 T __kernel_rem_pio2
0209ab08 00000194 T scalbn
0209ac9c 000000e0 T cosf
0209ad7c 0000031c T __ieee754_acosf
0209b098 00000074 T sqrtf
0209b10c 000000cc T __kernel_sin
0209b1d8 00000004 T atan2f
0209b1dc 00000078 T fmaxf
0209b254 00000088 T tanf
0209b2dc 000000dc T cos
0209b3b8 00000c84 T __ieee754_pow
0209c03c 0000000c T nanf
0209c048 00000158 T powf
0209c1a0 00000188 T __kernel_cosf
0209c328 00000084 T log
0209c3ac 000000e4 T sinf
0209c490 0000002c T finitef
0209c4bc 00000180 T floor
0209c63c 00000058 T __fpclassifyf
0209c694 00000020 T finite
0209c6b4 00000300 T __ieee754_log
0209c9b4 00000158 T __ieee754_sqrtf
0209cb0c 00000270 T __ieee754_atan2f
0209cd7c 00000290 T atanf
0209d00c 00000188 T __kernel_cos
0209d194 000000cc T __kernel_sinf
0209d260 000002e8 T __ieee754_sqrt
0209d548 00000028 T fabs
0209d570 00000040 t with_errno
0209d5b0 0000002c t xflow
0209d5dc 0000000c T __math_uflow
0209d5e8 0000000c T __math_oflow
0209d5f4 00000418 T __ieee754_rem_pio2f
0209da0c 000002e4 T __kernel_tanf
0209dcf0 00000020 T fabsf
0209dd10 0000000c T nan
0209dd1c 000002ec T __ieee754_logf
0209e008 00000ee0 T __kernel_rem_pio2f
0209eee8 000009c8 T __ieee754_powf
0209f8b0 00000174 T scalbnf
0209fa24 00000040 t with_errnof
0209fa64 0000001c t xflowf
0209fa80 0000000c T __math_uflowf
0209fa8c 0000000c T __math_oflowf
0209fa98 00000040 T __fixsfdi
0209fad8 00000040 T __fixdfdi
0209fb18 000000fc T __fixunssfdi
0209fc14 000000fc T __fixunsdfdi
0209fd10 0000009c T __floatdisf
0209fdac 00000050 T __floatdidf
0209fdfc 00000068 T __floatundisf
0209fe64 00000044 T __floatundidf
0209fea8 000003ec T __divdi3
020a0294 000003bc T __udivdi3
020a0650 0000001c T __gthread_active_p
020a066c 0000001c T __gthread_once
020a0688 0000001c T __gthread_key_create
020a06a4 00000044 T __gthread_key_delete
020a06e8 00000044 T __gthread_getspecific
020a072c 00000044 T __gthread_setspecific
020a0770 00000014 T __gthread_mutex_init_function
020a0784 0000001c T __gthread_mutex_destroy
020a07a0 0000001c T __gthread_mutex_lock
020a07bc 0000001c T __gthread_mutex_unlock
020a07d8 0000001c T __gthread_recursive_mutex_init_function
020a07f4 0000001c T __gthread_recursive_mutex_lock
020a0810 0000001c T __gthread_recursive_mutex_unlock
020a082c 00000014 T __gthread_cond_init_function
020a0840 0000001c T __gthread_cond_broadcast
020a085c 0000001c T __gthread_cond_wait_recursive
020a0878 00000048 T __eabi
020a08c0 000001d0 t init_dwarf_reg_size_table
020a0a90 000001d0 t uw_install_context_1
020a0c60 0000018c t read_encoded_value
020a0dec 0000087c t execute_stack_op
020a1668 00000394 t uw_update_context_1
020a19fc 000008ec t execute_cfa_program_specialized
020a22e8 00000924 t execute_cfa_program_generic
020a2c0c 00000534 t uw_frame_state_for
020a3140 000002d0 t uw_init_context_1
020a3410 000001c4 t _Unwind_RaiseException_Phase2
020a35d4 000001f4 t _Unwind_ForcedUnwind_Phase2
020a37c8 00000068 T _Unwind_SetGR
020a3830 00000014 T _Unwind_GetIPInfo
020a3844 00000008 T _Unwind_SetIP
020a384c 00000008 T _Unwind_GetLanguageSpecificData
020a3854 00000008 T _Unwind_GetRegionStart
020a385c 00000008 T _Unwind_GetDataRelBase
020a3864 00000008 T _Unwind_GetTextRelBase
020a386c 00000004 t _Unwind_DebugHook
020a3870 000002f4 T _Unwind_RaiseException
020a3b64 000001dc T _Unwind_Resume
020a3d40 000001e0 T _Unwind_Resume_or_Rethrow
020a3f20 0000001c T _Unwind_DeleteException
020a3f3c 00000020 t fde_unencoded_compare
020a3f5c 00000074 t fde_unencoded_extract
020a3fd0 00000140 t frame_downheap
020a4110 0000000c t init_object_mutex
020a411c 0000013c t read_encoded_value_with_base
020a4258 0000028c t fde_radixsort
020a44e4 0000015c t __deregister_frame_info_bases.part.0
020a4640 0000014c t get_cie_encoding
020a478c 000000fc t fde_mixed_encoding_extract
020a4888 0000024c t classify_object_over_fdes.constprop.0
020a4ad4 00000108 t fde_single_encoding_extract
020a4bdc 000000d0 t fde_single_encoding_compare
020a4cac 0000015c t fde_mixed_encoding_compare
020a4e08 000002bc t add_fdes.isra.0
020a50c4 00000310 t linear_search_fdes
020a53d4 000006b0 t search_object
020a5a84 0000009c T __register_frame_info
020a5b20 00000020 T __deregister_frame_info
020a5b40 00000260 T _Unwind_Find_FDE
020a5da0 00000024 T __assert_func
020a5dc4 000001b4 T chdir
020a5f78 00000278 T _concatenate_path
020a61f0 00000020 T __getreent
020a6210 000000e0 T __release_handle
020a62f0 00000120 T __alloc_handle
020a6410 00000090 T __get_handle
020a64a0 00000178 T _close_r
020a6618 00000008 t null_write
020a6620 00000018 T setDefaultDevice
020a6638 0000014c T FindDevice
020a6784 00000044 T RemoveDevice
020a67c8 00000118 T AddDevice
020a68e0 00000014 T __libc_lock_init
020a68f4 00000014 T __libc_lock_acquire
020a6908 00000014 T __libc_lock_release
020a691c 00000014 T __libc_lock_close
020a6930 00000014 T __libc_lock_init_recursive
020a6944 00000014 T __malloc_lock
020a6958 00000014 T __malloc_unlock
020a696c 00000028 T _exit
020a6994 00000108 T strncpy
020a6a9c 0000009c T strcmp
020a6b38 00000060 T rand
020a6b98 00000038 T getenv
020a6bd0 00000198 T memset
020a6d68 0000042c T _fread_r
020a7194 00000060 T fread
020a71f4 000000ec T _vsnprintf_r
020a72e0 00000060 T vsnprintf
020a7340 00001024 T qsort
020a8364 00000054 T ftell
020a83b8 00000008 T atof
020a83c0 00000084 t sulp
020a8444 0000151c T _strtod_l
020a9960 0000008c T _strtod_r
020a99ec 00000090 T strtod
020a9a7c 00000190 T __smakebuf_r
020a9c0c 000000dc T sscanf
020a9ce8 00000030 T strdup
020a9d18 0000004c T __locale_mb_cur_max
020a9d64 00000154 T strchr
020a9eb8 0000233c T _svfprintf_r
020ac1f4 0000016c t rshift
020ac360 00000954 T __gethex
020accb4 00000140 t critical_factorization
020acdf4 00000408 t two_way_long_needle
020ad1fc 000002c0 T strstr
020ad4bc 00000124 T memcpy
020ad5e0 00000210 t _strtoul_l.isra.0
020ad7f0 00000060 T _strtoul_r
020ad850 00000064 T strtoul
020ad8b4 00000300 T __utf8_mbtowc
020adbb4 00000030 T close
020adbe4 00000244 T _ftello_r
020ade28 000002f4 T __sflush_r
020ae11c 00000108 T _fflush_r
020ae224 00000058 T fflush
020ae27c 000000dc T strncmp
020ae358 00000110 T _wcrtomb_r
020ae468 000001bc T memmove
020ae624 00000040 T calloc
020ae664 00000088 T vsprintf
020ae6ec 00000020 T __errno
020ae70c 00000100 T _calloc_r
020ae80c 00000080 T strlen
020ae88c 0000006c T _strdup_r
020ae8f8 000001dc T _memalign_r
020aead4 0000085c T _malloc_r
020af330 0000030c t quorem
020af63c 00001470 T _dtoa_r
020b0aac 00000138 T _malloc_trim_r
020b0be4 00000330 T _free_r
020b0f14 00001ee8 T __ssvfscanf_r
020b2dfc 00000010 T _fseek_r
020b2e0c 00000054 T fseek
020b2e60 0000013c T memcmp
020b2f9c 00000238 t _strtol_l.isra.0
020b31d4 00000060 T _strtol_r
020b3234 000001e0 T _fclose_r
020b3414 00000030 T fclose
020b3444 00000108 T __utf8_wctomb
020b354c 00000078 T strrchr
020b35c4 000006c0 T _fseeko_r
020b3c84 00000184 T snprintf
020b3e08 00000120 T stpncpy
020b3f28 00000058 T malloc
020b3f80 00000030 T free
020b3fb0 00000074 T __sread
020b4024 00000008 T __seofread
020b402c 000000b8 T __swrite
020b40e4 00000070 T __sseek
020b4154 00000008 T __sclose
020b415c 0000010c T _reclaim_reent
020b4268 00000008 T iswspace
020b4270 0000012c T _mbrtowc_r
020b439c 00000040 t lflush
020b43dc 000001fc T __srefill_r
020b45d8 00000144 T _findenv_r
020b471c 000001a8 T _fwrite_r
020b48c4 00000060 T fwrite
020b4924 0000001c t stdio_exit_handler
020b4940 00000088 t cleanup_stdio
020b49c8 00000184 t global_stdio_init.part.0
020b4b4c 000001d0 T __sfp
020b4d1c 000000a4 T __sinit
020b4dc0 00000040 T __sfp_lock_acquire
020b4e00 0000000c T __sfp_lock_release
020b4e0c 000005b0 T __sfvwrite_r
020b53bc 000001b0 T memchr
020b556c 00000014 T atexit
020b5580 0000010c T __ssprint_r
020b568c 000000d0 T sprintf
020b575c 000000c8 T strnlen
020b5824 0000009c T printf
020b58c0 000000f4 T _sungetc_r
020b59b4 00000080 T __ssrefill_r
020b5a34 000000c8 T _sfread_r
020b5afc 00000054 T __match
020b5b50 0000056c T __hexnan
020b60bc 000000f0 T __submore
020b61ac 00000158 T _fopen_r
020b6304 00000040 T fopen
020b6344 00000040 T memalign
020b6384 00000090 T frexp
020b6414 000002f8 t _strtoll_l.isra.0
020b670c 00000060 T _strtoll_r
020b676c 00000040 T __env_lock
020b67ac 0000000c T __env_unlock
020b67b8 000000e0 T _Balloc
020b6898 00000024 T _Bfree
020b68bc 00000154 T __multadd
020b6a10 00000158 T __s2b
020b6b68 0000007c T __hi0bits
020b6be4 000000b4 T __lo0bits
020b6c98 00000108 T __i2b
020b6da0 00000310 T __multiply
020b70b0 0000017c T __pow5mult
020b722c 0000026c T __lshift
020b7498 000000dc T __mcmp
020b7574 00000318 T __mdiff
020b788c 00000094 T __ulp
020b7920 000001a4 T __b2d
020b7ac4 000001a0 T __d2b
020b7c64 000000e8 T __ratio
020b7d4c 00000118 T __copybits
020b7e64 000000e4 T __any_on
020b7f48 00000168 T __sccl
020b80b0 000000b4 T _fwalk_sglue
020b8164 0000004c T _localeconv_r
020b81b0 00002478 T _vfprintf_r
020ba628 00000100 t __sbprintf
020ba728 00000010 T _wcsrtombs_r
020ba738 00000060 T iswspace_l
020ba798 000002fc t _strtoull_l.isra.0
020baa94 00000060 T _strtoull_r
020baaf4 00000188 T __ssputs_r
020bac7c 00000040 T realloc
020bacbc 000000b8 T __sflags
020bad74 0000016c T __swsetup_r
020baee0 00000214 T _wcsnrtombs_l
020bb0f4 000000d8 T _wcsnrtombs_r
020bb1cc 00000200 T __call_exitprocs
020bb3cc 0000012c T __register_exitproc
020bb4f8 00000584 T _realloc_r
020bba7c 00000094 T category
020bbb10 00000060 T __sprint_r
020bbb70 00000038 T __flockfile
020bbba8 00000008 T __funlockfile
020bbbb0 000000b0 T _fstat_r
020bbc60 00000008 T _isatty_r
020bbc68 000000e0 T _lseek_r
020bbd48 00000128 T _open_r
020bbe70 000000c4 T _read_r
020bbf34 000000c4 T _write_r
020bbff8 00000390 T __umoddi3
020bc388 00000058 T _restfpr_14_x
020bc38c 00000054 T _restfpr_15_x
020bc390 00000050 T _restfpr_16_x
020bc394 0000004c T _restfpr_17_x
020bc398 00000048 T _restfpr_18_x
020bc39c 00000044 T _restfpr_19_x
020bc3a0 00000040 T _restfpr_20_x
020bc3a4 0000003c T _restfpr_21_x
020bc3a8 00000038 T _restfpr_22_x
020bc3ac 00000034 T _restfpr_23_x
020bc3b0 00000030 T _restfpr_24_x
020bc3b4 0000002c T _restfpr_25_x
020bc3b8 00000028 T _restfpr_26_x
020bc3bc 00000024 T _restfpr_27_x
020bc3c0 00000020 T _restfpr_28_x
020bc3c4 0000001c T _restfpr_29_x
020bc3c8 00000018 T _restfpr_30_x
020bc3cc 00000014 T _restfpr_31_x
020bc3e0 00000058 T _restgpr_14_x
020bc3e4 00000054 T _restgpr_15_x
020bc3e8 00000050 T _restgpr_16_x
020bc3ec 0000004c T _restgpr_17_x
020bc3f0 00000048 T _restgpr_18_x
020bc3f4 00000044 T _restgpr_19_x
020bc3f8 00000040 T _restgpr_20_x
020bc3fc 0000003c T _restgpr_21_x
020bc400 00000038 T _restgpr_22_x
020bc404 00000034 T _restgpr_23_x
020bc408 00000030 T _restgpr_24_x
020bc40c 0000002c T _restgpr_25_x
020bc410 00000028 T _restgpr_26_x
020bc414 00000024 T _restgpr_27_x
020bc418 00000020 T _restgpr_28_x
020bc41c 0000001c T _restgpr_29_x
020bc420 00000018 T _restgpr_30_x
020bc424 00000014 T _restgpr_31_x
020bc438 t __do_global_ctors_aux
020bc488 T __fini
10000000 D __SBSS2_END__
10000000 D __SDATA2_START__
10000000 00000018 d FFLiiGetEyebrowRotateOffset(int)::ROTATE
10000018 0000003e d FFLiiGetEyeRotateOffset(int)::ROTATE
10008000 d _SDA2_BASE_
1000feac d .LC2
10013548 00000020 d FFLiCopySurfaceDrawer::SetupCPU()::TEXCOORD_BUFFER
10013568 00000020 d FFLiCopySurfaceDrawer::SetupCPU()::POSITION_BUFFER
10013600 00000090 d FFLiCopySurfaceShaderObj_PS_shaderPtr
10013700 00000128 d FFLiCopySurfaceShaderObj_VS_shaderPtr
1001384c 0000000c d (anonymous namespace)::SHAPE_TYPE_INFO_1
10013858 0000000c d (anonymous namespace)::SHAPE_TYPE_INFO_0
10013894 00000008 d (anonymous namespace)::MODEL_TYPE
1001389c 0000000c d (anonymous namespace)::SHAPE_TYPE_INFO_1
100138a8 0000000c d (anonymous namespace)::SHAPE_TYPE_INFO_0
100138b4 00000024 d (anonymous namespace)::UPDATE_BOUNDING_BOX
10013d28 0000000a d (anonymous namespace)::GetDefaultCreateID(FFLCreateID*, unsigned int)::defaultCreateID
10013d32 00000144 d MII_DATA_CORE_RFL
10013e78 00000013 V typeinfo name for rio::FileHandle
10013e8c 00000010 V vtable for rio::FileHandle
10013ee4 0000006c d (anonymous namespace)::RANDOM_GLASS_TYPE
10013f50 00000090 d (anonymous namespace)::RANDOM_PARTS_ARRAY_EYE_COLOR
10013fe0 000001b0 d (anonymous namespace)::RANDOM_PARTS_ARRAY_HAIR_COLOR
10014190 00000120 d (anonymous namespace)::RANDOM_PARTS_ARRAY_FACELINE_COLOR
100142b0 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_FACE_MAKEUP
10014610 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_FACE_LINE
10014970 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_MOUTH_TYPE
10014cd0 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_NOSE_TYPE
10015030 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_EYEBROW_TYPE
10015390 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_EYE_TYPE
100156f0 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_HAIR_TYPE
10015a50 00000360 d (anonymous namespace)::RANDOM_PARTS_ARRAY_FACE_TYPE
10015db0 00000034 d MONTH_OF_DAY
10015de4 00000020 d (anonymous namespace)::InitAttributes(FFLAttributeBufferParam*, unsigned int)::TEXCOORD_BUFFER
10015e04 00000008 d (anonymous namespace)::InitPrimitive(FFLPrimitiveParam*)::INDEX_BUFFER
10015e4c 0000017c d (anonymous namespace)::CORRECT_PARAM
10015fc8 00000010 d FFLiRenderMaskTextures(FFLiMaskTextures*, FFLiMaskTexturesTempObject*, FFLiShaderCallback const*, FFLiCopySurface*)::BLACK
10015fd8 00000060 d (anonymous namespace)::RFL_FACE_LINE_AND_MAKE
10016038 00000038 d SWAP_ENDIAN_DESC
10016070 00000010 d FILL_COLOR
100160ac 000000e4 d (anonymous namespace)::EYE_MOUTH_TYPE_ELEMENT
10016190 0000003c d (anonymous namespace)::InitAttributesForFill(FFLAttributeBufferParam*)::ATTRIBUTES
100161cc 00000040 d (anonymous namespace)::InitAttributesForFill(FFLAttributeBufferParam*)::POSITION_BUFFER
1001620c 0000003c d (anonymous namespace)::InitAttributes(FFLAttributeBufferParam*, FFLiOriginPosition, rio::BaseMtx44<float> const*)::ATTRIBUTES
10016248 00000008 d (anonymous namespace)::InitPrimitive(FFLPrimitiveParam*)::INDEX_BUFFER
1001637c 00000010 d (anonymous namespace)::RESOUCE_FILE_NAME
100163a0 00000018 d FFLiLoadShape(void**, FFLDrawParam*, FFLBoundingBox*, FFLiCharModel*, FFLiShapePartsType, unsigned short, FFLiResourceLoader*)::INVALID_BOUNDING_BOX
100163b8 00000006 d FFLiSystemContext::Init(unsigned int)::DEFAULT_CREATE_ID_BASE
100163c0 00000050 d FFLiUtilShader::BuildShader(FFLiUtilShader::FetchShader*, GX2VertexShader const*, FFLiUtilShader::AttributeStreamDesc const*, unsigned int, bool)::compMap
10016410 00000014 V typeinfo name for FFLiZlibInterface
10016424 00000013 V typeinfo name for FFLiZlibInflator
10016438 0000000c V typeinfo for FFLiZlibInflator
10016444 00000014 V vtable for FFLiZlibInterface
10016458 00000014 V vtable for FFLiZlibInflator
100164ac 00000017 V typeinfo name for rio::ControllerBase
100164c4 00000013 V typeinfo name for rio::Controller
100164d8 00000018 V typeinfo for rio::Controller
100164f0 00000024 V vtable for rio::Controller
10016514 0000000d V typeinfo name for rio::ITask
10016524 00000016 V typeinfo name for rio::ControllerMgr
1001653c 0000000c V typeinfo for rio::ControllerMgr
10016548 00000020 V vtable for rio::ITask
10016568 00000020 V vtable for rio::ControllerMgr
10016588 0000001a V typeinfo name for rio::CafeDRCController
100165a4 0000000c V typeinfo for rio::CafeDRCController
100165b0 00000024 V vtable for rio::CafeDRCController
100165d4 0000001d V typeinfo name for rio::CafeRemoteController
100165f4 0000000c V typeinfo for rio::CafeRemoteController
10016600 00000024 V vtable for rio::CafeRemoteController
10016624 00000016 V typeinfo name for rio::ControlDevice
1001663c 00000017 V typeinfo name for rio::CafeVPadDevice
10016654 0000000c V typeinfo for rio::CafeVPadDevice
10016660 00000014 V vtable for rio::ControlDevice
10016674 00000014 V vtable for rio::CafeVPadDevice
10016688 00000017 V typeinfo name for rio::CafeWPadDevice
100166a0 0000000c V typeinfo for rio::CafeWPadDevice
100166ac 00000014 V vtable for rio::CafeWPadDevice
100166c0 0000001a V typeinfo name for rio::ContentFileDevice
100166dc 0000000c V typeinfo for rio::ContentFileDevice
100166e8 00000040 V vtable for rio::ContentFileDevice
10016728 00000015 V typeinfo name for rio::LinkListNode
10016740 00000024 V typeinfo name for rio::TListNode<rio::FileDevice*>
10016764 0000000c V typeinfo for rio::TListNode<rio::FileDevice*>
10016770 00000013 V typeinfo name for rio::FileDevice
10016784 00000018 V typeinfo for rio::FileDevice
1001679c 00000040 V vtable for rio::FileDevice
100167dc 00000019 V typeinfo name for rio::NativeFileDevice
100167f8 0000000c V typeinfo for rio::NativeFileDevice
10016804 00000040 V vtable for rio::NativeFileDevice
10016844 0000000e V typeinfo name for rio::Camera
10016854 00000015 V typeinfo name for rio::LookAtCamera
1001686c 0000000c V typeinfo for rio::LookAtCamera
10016878 0000000c V vtable for rio::LookAtCamera
10016884 00000022 V rio::PrimitiveRenderer::getWireCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cIdx
100168a6 00000048 V rio::PrimitiveRenderer::getCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cIdx
100168f0 00000120 V rio::PrimitiveRenderer::getCubeVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cVtx
10016a10 00000048 V rio::PrimitiveRenderer::getLineVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cVtx
10016a58 0000000c V rio::PrimitiveRenderer::getQuadVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cIdx
10016a64 00000090 V rio::PrimitiveRenderer::getQuadVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cVtx
10016af4 00000008 d rio::PrimitiveRenderer::initialize_(char const*)::idx
10016afc 00000013 V typeinfo name for rio::Projection
10016b10 0000001e V typeinfo name for rio::PerspectiveProjection
10016b30 0000000c V typeinfo for rio::PerspectiveProjection
10016b3c 00000018 V typeinfo name for rio::OrthoProjection
10016b54 0000000c V typeinfo for rio::OrthoProjection
10016b60 0000000c V vtable for rio::Projection
10016b6c 0000000c V vtable for rio::PerspectiveProjection
10016b78 0000000c V vtable for rio::OrthoProjection
10016b9c 00000015 V typeinfo name for rio::RenderTarget
10016bb4 0000001a V typeinfo name for rio::RenderTargetColor
10016bd0 0000000c V typeinfo for rio::RenderTargetColor
10016bdc 0000001a V typeinfo name for rio::RenderTargetDepth
10016bf8 0000000c V typeinfo for rio::RenderTargetDepth
10016c04 00000014 V vtable for rio::RenderTarget
10016c18 00000014 V vtable for rio::RenderTargetColor
10016c2c 00000014 V vtable for rio::RenderTargetDepth
10016c40 000000d8 d rio::TextureFormatUtil::getDefaultCompMap(rio::TextureFormat)::compMap
10016d18 00000020 d rio::RenderState::applyCullingAndPolygonModeAndPolygonOffset() const::cCullSettings
10016d38 00000020 d rio::RenderState::apply() const::cCullSettings
10016d58 00000050 d rio::VertexArray::process()::sFormatMask
10016e8c 00000040 D rio::Matrix44<float>::ident
10016ecc 00000030 D rio::Matrix34<float>::ident
10016f50 00000268 d GKeyNames
100171b8 00000070 d resize_border_def
10017228 00000060 d resize_grip_def
10017288 00000058 d GLocalizationEntriesEnUS
100172e0 00000168 d GStyleVarInfo
10017448 00000018 d GWindowDockStyleColors
10017460 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shifte
10017474 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shiftc
10017488 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::mins
1001749c 00000014 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::masks
100174b0 00000020 d ImTextCharFromUtf8(unsigned int*, char const*, char const*)::lengths
100174d0 00000400 d GCrc32LookupTable
10017b74 00002ecd d proggy_clean_ttf_compressed_data_base85
1001aa42 00000006 d ImFontAtlas::GetGlyphRangesDefault()::ranges
1001aa48 000000d8 d FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA
1001ab20 00000cdf d FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS
1001ba9c 000000a0 d GDataTypeInfo
1001bde8 0000000c d cInitializeArg
1001be00 0000000a V typeinfo name for RootTask
1001be0c 0000000c V typeinfo for RootTask
1001be18 0000000c V vtable for rio::Camera
1001be24 00000020 V vtable for RootTask
1001be58 00000024 d Shader::setMatrix_(rio::BaseMtx44<float> const&)::ident33
1001be7c 00000010 d (anonymous namespace)::cRimColor
1001be8c 0000000c d (anonymous namespace)::cLightDir
1001be98 00000010 d (anonymous namespace)::cLightSpecular
1001bea8 00000010 d (anonymous namespace)::cLightDiffuse
1001beb8 00000010 d (anonymous namespace)::cLightAmbient
1001bec8 000001f8 d (anonymous namespace)::cMaterialParam
1001c0c0 0000001a d __FUNCTION__.0
1001c0dc 00000019 d __FUNCTION__.1
1001c0f8 00000014 d __FUNCTION__.0
1001c10c 00000012 d __FUNCTION__.1
1001c120 00000022 d __FUNCTION__.2
1001c144 00000016 d __FUNCTION__.3
1001c15c 00000018 d __FUNCTION__.4
1001c174 00000080 d __wut_fsa_devoptab
1001c1f4 00000042 d CSWTCH.24
1001c238 00000034 d __wut_nsysnet_error_code_map
1001c2e8 00000080 d distfix.0
1001c368 00000800 d lenfix.1
1001cb68 00000026 d order.2
1001cb90 00000040 d dext.0
1001cbd0 00000040 d dbase.1
1001cc10 0000003e d lext.2
1001cc50 0000003e d lbase.3
1001cc90 00001000 d crc_braid_big_table
1001dc90 00000400 d crc_big_table
1001e090 00000400 d crc_table
1001e490 00000022 V typeinfo name for __cxxabiv1::__class_type_info
1001e4b4 0000000c V typeinfo for __cxxabiv1::__class_type_info
1001e4c0 0000002c V vtable for __cxxabiv1::__class_type_info
1001e520 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
1001e548 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
1001e554 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
1001e580 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
1001e58c 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
1001e5b8 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
1001e5c4 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
1001e5ec 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
1001e5f8 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
1001e60c 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
1001e620 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
1001e634 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
1001e648 00000023 V typeinfo name for __gnu_cxx::recursive_init_error
1001e66c 0000000c V typeinfo for __gnu_cxx::recursive_init_error
1001e678 00000014 V vtable for __gnu_cxx::recursive_init_error
1001e68c 00000025 V typeinfo name for __cxxabiv1::__si_class_type_info
1001e6b4 0000000c V typeinfo for __cxxabiv1::__si_class_type_info
1001e6c0 0000002c V vtable for __cxxabiv1::__si_class_type_info
1001e6ec 0000000d V typeinfo name for std::type_info
1001e6fc 00000026 V typeinfo name for __cxxabiv1::__vmi_class_type_info
1001e724 0000000c V typeinfo for __cxxabiv1::__vmi_class_type_info
1001e730 0000002c V vtable for __cxxabiv1::__vmi_class_type_info
1001e75c 0000000d V typeinfo name for std::bad_alloc
1001e76c 0000000c V typeinfo for std::bad_alloc
1001e778 00000014 V vtable for std::bad_alloc
1001e78c 00000019 V typeinfo name for std::bad_array_new_length
1001e7a8 0000000c V typeinfo for std::bad_array_new_length
1001e7b4 00000014 V vtable for std::bad_array_new_length
1001e7c8 0000000d V typeinfo name for std::exception
1001e7d8 00000012 V typeinfo name for std::bad_exception
1001e7ec 0000000c V typeinfo for std::bad_exception
1001e7f8 00000020 V typeinfo name for __cxxabiv1::__forced_unwind
1001e818 00000024 V typeinfo name for __cxxabiv1::__foreign_exception
1001e83c 00000014 V vtable for std::bad_exception
1001e850 00000010 V typeinfo name for std::logic_error
1001e860 0000000c V typeinfo for std::logic_error
1001e86c 00000011 V typeinfo name for std::length_error
1001e880 0000000c V typeinfo for std::length_error
1001e88c 00000011 V typeinfo name for std::out_of_range
1001e8a0 0000000c V typeinfo for std::out_of_range
1001e8ac 00000014 V vtable for std::logic_error
1001e8c0 00000014 V vtable for std::length_error
1001e8d4 00000014 V vtable for std::out_of_range
1001e8e8 00000080 d npio2_hw
1001e968 00000108 d two_over_pi
1001ea70 00000008 d Zero
1001ea78 00000040 d PIo2
1001eab8 00000010 d init_jk
1001eac8 00000004 d tiny
1001eacc 00000004 d one
1001ead0 0000000c d CSWTCH.9
1001eadc 0000000c d CSWTCH.8
1001eae8 00000010 d atanlo
1001eaf8 00000010 d atanhi
1001eb08 00000008 d tiny
1001eb10 00000008 d one
1001eb18 00000080 d npio2_hw
1001eb98 00000318 d two_over_pi
1001eeb0 0000002c d PIo2
1001eedc 0000000c d init_jk
1001f3cc 00000008 d terminator.0
1001f3d4 00000080 D dotab_stdnull
1001f524 00000014 d fpinan.0
1001f538 00000014 d fpi.1
1001f550 00000028 d tinytens
1001f724 00000010 d zeroes.0
1001f734 00000010 d blanks.1
1001f744 00000100 D __hexdig
1001fb14 00000022 d basefix.0
1001fb38 00000101 D _ctype_
1001fc3c 0000000c d p05.0
1001fc48 00000028 D __mprec_bigtens
1001fc70 000000c8 D __mprec_tens
1001fea4 00000010 d zeroes.0
1001feb4 00000010 d blanks.1
1001fec4 000035dc d categories
10023c50 d __CTOR_LIST__
10023c58 D __CTOR_LIST__
10023c68 d __CTOR_END__
10023c68 D __CTOR_END__
10023c6c d __DTOR_LIST__
10023c70 D __DTOR_LIST__
10023c7c D __DTOR_END__
10023c9c D __EH_FRAME_BEGIN__
10023c9c d __EH_FRAME_BEGIN__
100450c4 D __EH_FRAME_END__
100450c4 d __FRAME_END__
100450c8 00000020 d (anonymous namespace)::FETCH_SHADER_DESC
100450e8 000000e8 d FFLiCopySurfaceShaderObj_PS
100451d0 0000000c D FFLiCopySurfaceShaderObj_PS_sampler_vars
100451dc 00000134 d FFLiCopySurfaceShaderObj_VS
10045310 00000020 D FFLiCopySurfaceShaderObj_VS_attrib_vars
10045330 00000030 d (anonymous namespace)::GetModelTypeShapePartsInfo(unsigned int)::modelTypeShapePartsInfo
10045360 00000004 d GImAllocatorFreeFunc
10045364 00000004 d GImAllocatorAllocFunc
10045368 000006c4 D shader_gsh
10045a2c 00000004 d sSocket
10045a30 00000080 d __wut_socket_devoptab
10045ab4 00000400 d _current_working_directory
10045eb4 00001000 d handles
10046eb4 0000000c d __stderr_handle
10046ec0 0000000c d __stdout_handle
10046ecc 0000000c d __stdin_handle
10046ed8 0000008c D devoptab_list
10046f64 00000004 d defaultDevice
10046f68 0000016c D __global_locale
100470d8 00000120 D _impure_data
100471f8 00000408 D __malloc_av_
10047600 0000000c D __sglue
1004760c D __SDATA_START__
1004760c 00000008 V typeinfo for rio::FileHandle
10047614 00000008 V typeinfo for FFLiZlibInterface
1004761c 00000008 V typeinfo for rio::ControllerBase
10047624 00000008 V typeinfo for rio::ITask
1004762c 00000008 V typeinfo for rio::ControlDevice
10047634 00000008 V typeinfo for rio::LinkListNode
1004763c 00000008 V typeinfo for rio::Camera
10047644 00000004 V rio::PrimitiveRenderer::getLineVertex(rio::PrimitiveRenderer::Vertex*, unsigned short*)::cIdx
10047648 00000008 V typeinfo for rio::Projection
10047650 00000008 V typeinfo for rio::RenderTarget
10047658 00000004 D rio::Shader::sCurrentShaderMode
1004765c 00000004 D __cxxabiv1::__unexpected_handler
10047660 00000008 V typeinfo for std::type_info
10047668 00000008 V typeinfo for std::exception
10047670 00000008 V typeinfo for __cxxabiv1::__forced_unwind
10047678 00000008 V typeinfo for __cxxabiv1::__foreign_exception
10047680 00000004 D __cxxabiv1::__terminate_handler
10047684 00000004 D _impure_ptr
10047688 00000004 D __malloc_sbrk_base
1004768c 00000004 D __malloc_trim_threshold
10047690 00000004 D environ
100476a0 00000004 B rio::sRootTask
100476a4 00000004 B rio::AudioMgr::sInstance
100476a8 00000008 B rio::ControllerBase::cInvalidPointerS32
100476b0 00000008 B rio::ControllerBase::cInvalidPointer
100476b8 00000004 B rio::ControllerMgr::sInstance
100476bc 00000004 B rio::FileDeviceMgr::sInstance
100476c0 00000004 B rio::PrimitiveRenderer::sInstance
100476c4 00000004 B rio::Window::sInstance
100476c8 00000004 B rio::lyr::Renderer::sInstance
100476cc 00000004 B rio::mdl::res::ModelCacher::sInstance
100476d0 00000004 B rio::TaskMgr::sInstance
100476d4 00000001 B ImGuiTextBuffer::EmptyString
100476d8 00000004 B GImGui
100476dc 00000004 B ThemeMgr::sInstance
100476e0 00000004 B __wut_exit
100476e4 00000001 B __eh_globals_init::_S_init
100476e8 00000004 B __malloc_max_total_mem
100476ec 00000004 B __malloc_max_sbrked_mem
100476f0 00000004 B __malloc_top_pad
100476f4 00000004 B __stdio_exit_handler
100476f8 00000004 B __atexit
100476fc 00000004 B __atexit_recursive_mutex
10047700 B __SBSS_END__
10047700 b completed.2
10047704 b dtor_idx.1
10047708 b object.0
10047720 00000001 b (anonymous namespace)::s_IsIntializedColorContainer
10047724 000006e0 b (anonymous namespace)::s_ColorContainer
10047e04 00000004 b (anonymous namespace)::g_FFLManager
10047e08 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MOLE
10047e10 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MOLE
10047e18 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_X_ADD_MOLE
10047e20 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_X_ADD_MOLE
10047e28 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MUSTACHE
10047e30 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MUSTACHE
10047e38 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MOUTH
10047e40 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_MOUTH
10047e48 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_EYEBROW
10047e50 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_EYEBROW
10047e58 00000008 b guard variable for (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_EYE
10047e60 00000004 b (anonymous namespace)::CalcRawMask((anonymous namespace)::RawMasks*, FFLiCharInfo const*, int, int, int)::POS_Y_ADD_EYE
10047e64 00000004 b GImAllocatorUserData
10047e68 00000004 b stb__dout
10047e6c 00000004 b stb__barrier_in_b
10047e70 00000004 b stb__barrier_out_b
10047e74 00000004 b stb__barrier_out_e
10047e78 00000004 b ImFontAtlasGetBuilderForStbTruetype()::io
10047e7c 00000004 b useFlyCam(rio::LookAtCamera*, rio::Controller*)::pitch
10047e80 00000004 b useFlyCam(rio::LookAtCamera*, rio::Controller*)::yaw
10047e84 00000018 B ThemeMgr::sDefaultTheme[abi:cxx11]
10047ea0 00000010 b sMallocSpinLock
10047eb0 00000004 b sHeapSize
10047eb4 00000004 b sHeapMaxSize
10047eb8 00000004 b sHeapBase
10047ebc 00000004 b sHeapHandle
10047ec0 000006a0 b sCrashThread
10048560 00001000 b sCrashThreadStack
10049560 00000004 b sRegistersLength
10049564 00001000 b sRegistersBuffer
1004a564 00000004 b sStackTraceLength
1004a568 00001000 b sStackTraceBuffer
1004b568 00000004 b sDisassemblyLength
1004b56c 00001000 b sDisassemblyBuffer
1004c56c 00000040 b sHandlers
1004c5ac 00000010 b sSendAddr
1004c5bc 00000400 b sLastError
1004c9bc 0000002c b key_mutex
1004c9e8 00000400 b key_table
1004cde8 000003b8 B __wut_fsa_device_data
1004d1a0 00000004 b nn::swkbd::sSetVersion
1004d1a4 00000004 b nn::swkbd::sSetUserSoundObj
1004d1a8 00000004 b nn::swkbd::sSetUserControllerEventObj
1004d1ac 00000004 b nn::swkbd::sSetSelectFrom
1004d1b0 00000004 b nn::swkbd::sSetReceiver
1004d1b4 00000004 b nn::swkbd::sSetInputFormString
1004d1b8 00000004 b nn::swkbd::sSetEnableOkButton
1004d1bc 00000004 b nn::swkbd::sSetCursorPos
1004d1c0 00000004 b nn::swkbd::sSetControllerRemo
1004d1c4 00000004 b nn::swkbd::sMuteAllSound
1004d1c8 00000004 b nn::swkbd::sIsSelectCursorActive
1004d1cc 00000004 b nn::swkbd::sIsNeedCalcSubThreadPredict
1004d1d0 00000004 b nn::swkbd::sIsNeedCalcSubThreadFont
1004d1d4 00000004 b nn::swkbd::sIsKeyboardTarget
1004d1d8 00000004 b nn::swkbd::sIsDecideOkButton
1004d1dc 00000004 b nn::swkbd::sIsDecideCancelButton
1004d1e0 00000004 b nn::swkbd::sIsCoveredWithSubWindow
1004d1e4 00000004 b nn::swkbd::sInitLearnDic
1004d1e8 00000004 b nn::swkbd::sInactivateSelectCursor
1004d1ec 00000004 b nn::swkbd::sGetStateKeyboard
1004d1f0 00000004 b nn::swkbd::sGetStateInputForm
1004d1f4 00000004 b nn::swkbd::sGetKeyboardCondition
1004d1f8 00000004 b nn::swkbd::sGetInputFormString
1004d1fc 00000004 b nn::swkbd::sGetDrawStringInfo
1004d200 00000004 b nn::swkbd::sDrawTV
1004d204 00000004 b nn::swkbd::sDrawDRC
1004d208 00000004 b nn::swkbd::sDisappearKeyboard
1004d20c 00000004 b nn::swkbd::sDisappearInputForm
1004d210 00000004 b nn::swkbd::sDestroy
1004d214 00000004 b nn::swkbd::sCreate
1004d218 00000004 b nn::swkbd::sConfirmUnfixAll
1004d21c 00000004 b nn::swkbd::sCalc
1004d220 00000004 b nn::swkbd::sCalcSubThreadPredict
1004d224 00000004 b nn::swkbd::sCalcSubThreadFont
1004d228 00000004 b nn::swkbd::sAppearKeyboard
1004d22c 00000004 b nn::swkbd::sAppearInputForm
1004d230 00000004 b nn::swkbd::sModuleHandle
1004d234 00000004 b nn::swkbd::sHeapHandle
1004d238 00000004 b sLibcLockUsedMask
1004d23c 000002c0 b sLibcLocks
1004d4fc 00000004 b init
1004d500 00000008 b (anonymous namespace)::eh_globals
1004d508 00000004 b (anonymous namespace)::get_static_cond()::once
1004d50c 0000001c b (anonymous namespace)::fake_cond
1004d528 00000004 b (anonymous namespace)::static_cond
1004d52c 00000004 b (anonymous namespace)::get_static_mutex()::once
1004d530 0000002c b (anonymous namespace)::fake_mutex
1004d55c 00000004 b (anonymous namespace)::static_mutex
1004d560 00000038 b (anonymous namespace)::emergency_pool
1004d598 00000004 b (anonymous namespace)::__new_handler
1004d59c 00000010 V std::string::_Rep::_S_empty_rep_storage
1004d5ac 00000004 b once_regsizes.0
1004d5b0 00000070 b dwarf_reg_size_table
1004d620 00000004 b once.1
1004d624 0000002c b object_mutex
1004d650 00000004 b seen_objects
1004d654 00000004 b unseen_objects
1004d658 00000400 b temp_cwd
1004da58 00000004 b __hndl_lock
1004da5c 00000028 B __malloc_current_mallinfo
1004da84 00000004 b __sfp_recursive_mutex
1004da88 00000150 B __sf
1004dbd8 00000004 b __env_recursive_mutex
1004dbdc 00000004 b initial_env
1004dbe0 00000190 B __atexit0
1004f60c d _SDA_BASE_
c0000058 T DisassemblePPCRange
c0000060 T FSAAddClient
c0000068 T FSAChangeDir
c0000070 T FSAChangeMode
c0000078 T FSACloseDir
c0000080 T FSACloseFile
c0000088 T FSADelClient
c0000090 T FSAFlushFile
c0000098 T FSAGetDeviceInfo
c00000a0 T FSAGetFreeSpaceSize
c00000a8 T FSAGetStat
c00000b0 T FSAGetStatFile
c00000b8 T FSAInit
c00000c0 T FSAMakeDir
c00000c8 T FSAMount
c00000d0 T FSAOpenDir
c00000d8 T FSAOpenFileEx
c00000e0 T FSAReadDir
c00000e8 T FSAReadFile
c00000f0 T FSARemove
c00000f8 T FSARename
c0000100 T FSARewindDir
c0000108 T FSASetPosFile
c0000110 T FSATruncateFile
c0000118 T FSAUnmount
c0000120 T FSAWriteFile
c0000128 T FSAddClient
c0000130 T FSCloseFile
c0000138 T FSDelClient
c0000140 T FSGetStat
c0000148 T FSGetStatFile
c0000150 T FSInit
c0000158 T FSInitCmdBlock
c0000160 T FSOpenFile
c0000168 T FSReadFile
c0000170 T FSSetPosFile
c0000178 T FSShutdown
c0000180 T FSWriteFile
c0000188 T MEMAllocFromExpHeapEx
c0000190 T MEMAllocFromFrmHeapEx
c0000198 T MEMCreateExpHeapEx
c00001a0 T MEMDestroyExpHeap
c00001a8 T MEMFreeToExpHeap
c00001b0 T MEMFreeToFrmHeap
c00001b8 T MEMGetAllocatableSizeForExpHeapEx
c00001c0 T MEMGetBaseHeapHandle
c00001c8 T OSBlockMove
c00001d0 T OSBlockSet
c00001d8 T OSBlockThreadsOnExit
c00001e0 T OSCompareAndSwapAtomic
c00001e8 T OSCompareAndSwapAtomicEx
c00001f0 T OSCreateThread
c00001f8 T OSDynLoad_Acquire
c0000200 T OSDynLoad_FindExport
c0000208 T OSDynLoad_GetAllocator
c0000210 T OSDynLoad_Release
c0000218 T OSDynLoad_SetAllocator
c0000220 T OSFatal
c0000228 T OSGetCoreId
c0000230 T OSGetCurrentThread
c0000238 T OSGetSymbolName
c0000240 T OSGetSystemInfo
c0000248 T OSGetSystemTime
c0000250 T OSGetThreadSpecific
c0000258 T OSGetTime
c0000260 T OSGetUPID
c0000268 T OSInitCond
c0000270 T OSInitMutex
c0000278 T OSInitMutexEx
c0000280 T OSInitSpinLock
c0000288 T OSIsDebuggerInitialized
c0000290 T OSIsDebuggerPresent
c0000298 T OSLockMutex
c00002a0 T OSPanic
c00002a8 T OSReport
c00002b0 T OSResumeThread
c00002b8 T OSSavesDone_ReadyToRelease
c00002c0 T OSSetExceptionCallbackEx
c00002c8 T OSSetThreadCleanupCallback
c00002d0 T OSSetThreadSpecific
c00002d8 T OSSignalCond
c00002e0 T OSSuspendThread
c00002e8 T OSSwapAtomic
c00002f0 T OSTicksToCalendarTime
c00002f8 T OSUninterruptibleSpinLock_Acquire
c0000300 T OSUninterruptibleSpinLock_Release
c0000308 T OSUnlockMutex
c0000310 T OSWaitCond
c0000318 T _Exit
c0000320 T __os_snprintf
c0000328 T __rplwrap_exit
c0000340 T GX2CalcDRCSize
c0000348 T GX2CalcFetchShaderSizeEx
c0000350 T GX2CalcSurfaceSizeAndAlignment
c0000358 T GX2CalcTVSize
c0000360 T GX2ClearColor
c0000368 T GX2ClearDepthStencilEx
c0000370 T GX2CopyColorBufferToScanBuffer
c0000378 T GX2DrawDone
c0000380 T GX2DrawEx
c0000388 T GX2DrawIndexedEx
c0000390 T GX2Flush
c0000398 T GX2GetSystemTVScanMode
c00003a0 T GX2Init
c00003a8 T GX2InitColorBufferRegs
c00003b0 T GX2InitDepthBufferHiZEnable
c00003b8 T GX2InitDepthBufferRegs
c00003c0 T GX2InitFetchShaderEx
c00003c8 T GX2InitSampler
c00003d0 T GX2InitSamplerBorderType
c00003d8 T GX2InitSamplerClamping
c00003e0 T GX2InitSamplerDepthCompare
c00003e8 T GX2InitSamplerLOD
c00003f0 T GX2InitSamplerXYFilter
c00003f8 T GX2InitSamplerZMFilter
c0000400 T GX2InitTextureRegs
c0000408 T GX2Invalidate
c0000410 T GX2RCreateBuffer
c0000418 T GX2RCreateSurface
c0000420 T GX2RDestroyBufferEx
c0000428 T GX2RDestroySurfaceEx
c0000430 T GX2RLockBufferEx
c0000438 T GX2RLockSurfaceEx
c0000440 T GX2RUnlockBufferEx
c0000448 T GX2RUnlockSurfaceEx
c0000450 T GX2SetAlphaTest
c0000458 T GX2SetAlphaToMask
c0000460 T GX2SetAttribBuffer
c0000468 T GX2SetBlendConstantColor
c0000470 T GX2SetBlendControl
c0000478 T GX2SetColorBuffer
c0000480 T GX2SetColorControl
c0000488 T GX2SetContextState
c0000490 T GX2SetCullOnlyControl
c0000498 T GX2SetDRCBuffer
c00004a0 T GX2SetDRCEnable
c00004a8 T GX2SetDRCScale
c00004b0 T GX2SetDefaultState
c00004b8 T GX2SetDepthBuffer
c00004c0 T GX2SetDepthOnlyControl
c00004c8 T GX2SetDepthStencilControl
c00004d0 T GX2SetFetchShader
c00004d8 T GX2SetPixelSampler
c00004e0 T GX2SetPixelSamplerBorderColor
c00004e8 T GX2SetPixelShader
c00004f0 T GX2SetPixelTexture
c00004f8 T GX2SetPixelUniformReg
c0000500 T GX2SetPolygonControl
c0000508 T GX2SetScissor
c0000510 T GX2SetShaderModeEx
c0000518 T GX2SetStencilMask
c0000520 T GX2SetSwapInterval
c0000528 T GX2SetTVBuffer
c0000530 T GX2SetTVEnable
c0000538 T GX2SetTVScale
c0000540 T GX2SetTargetChannelMasks
c0000548 T GX2SetVertexShader
c0000550 T GX2SetVertexUniformReg
c0000558 T GX2SetViewport
c0000560 T GX2SetupContextStateEx
c0000568 T GX2SwapScanBuffers
c0000570 T GX2WaitForFlip
c0000590 T ACClose
c0000598 T ACConnectAsync
c00005a0 T ACFinalize
c00005a8 T ACInitialize
c00005c0 T Finalize__Q2_2nn3actFv
c00005c8 T GetTransferableIdEx__Q2_2nn3actFPULUiUc
c00005d0 T Initialize__Q2_2nn3actFv
c00005f0 T SAVEGetSharedDataTitlePath
c00005f8 T SAVEGetSharedSaveDataPath
c0000600 T SAVEInit
c0000608 T SAVEShutdown
c0000620 T htonl
c0000628 T htons
c0000630 T set_multicast_state
c0000638 T socket_lib_finish
c0000640 T socket_lib_init
c0000648 T __rplwrap_recv
c0000650 T __rplwrap_send
c0000658 T __rplwrap_sendto
c0000660 T __rplwrap_setsockopt
c0000668 T __rplwrap_shutdown
c0000670 T __rplwrap_socket
c0000678 T __rplwrap_socketclose
c0000680 T __rplwrap_socketlasterr
c00006a8 T KPADGetMplsWorkSize
c00006b0 T KPADInitEx
c00006b8 T KPADReadEx
c00006c0 T KPADSetMplsWorkarea
c00006c8 T KPADShutdown
c00006e0 T ProcUIDrawDoneRelease
c00006e8 T ProcUIInit
c00006f0 T ProcUIProcessMessages
c00006f8 T ProcUIShutdown
c0000710 T _SYSGetSystemApplicationTitleId
c0000730 T VPADGetTPCalibratedPoint
c0000738 T VPADRead
c0000758 R MEMAllocFromDefaultHeap
c0000760 R MEMAllocFromDefaultHeapEx
c0000768 R MEMFreeToDefaultHeap
